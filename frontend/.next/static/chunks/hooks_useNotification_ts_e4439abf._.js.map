{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Bruce%20Vo/Documents/project/linguex/Streaming_Platform/frontend/hooks/useNotification.ts"],"sourcesContent":["'use client';\r\nimport { useState, useEffect, useCallback } from 'react';\r\nimport toast from 'react-hot-toast';\r\n\r\ninterface Notification {\r\n    _id: string;\r\n    title: string;\r\n    message: string;\r\n    type: 'like' | 'comment' | 'system' | 'general';\r\n    read: boolean;\r\n    createdAt: string;\r\n    updatedAt: string;\r\n}\r\n\r\nexport const useNotification = () => {\r\n    const [notifications, setNotifications] = useState<Notification[]>([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState<string | null>(null);\r\n\r\n    const fetchNotifications = useCallback(async () => {\r\n        try {\r\n            setLoading(true);\r\n            setError(null);\r\n            \r\n            // TODO: Replace with actual API call when backend is ready\r\n            // const response = await api.get('/notifications');\r\n            // setNotifications(response.data);\r\n            \r\n            // Mock data for now\r\n            const mockNotifications: Notification[] = [\r\n                {\r\n                    _id: '1',\r\n                    title: 'Welcome to StudyBuddy!',\r\n                    message: 'Thanks for joining our platform. Start exploring programs and courses.',\r\n                    type: 'system',\r\n                    read: false,\r\n                    createdAt: new Date().toISOString(),\r\n                    updatedAt: new Date().toISOString()\r\n                },\r\n                {\r\n                    _id: '2',\r\n                    title: 'Your review was liked',\r\n                    message: 'Someone liked your review on Computer Science program.',\r\n                    type: 'like',\r\n                    read: true,\r\n                    createdAt: new Date(Date.now() - 24 * 60 * 60 * 1000).toISOString(),\r\n                    updatedAt: new Date(Date.now() - 24 * 60 * 60 * 1000).toISOString()\r\n                }\r\n            ];\r\n            \r\n            setNotifications(mockNotifications);\r\n            \r\n        } catch (err: any) {\r\n            console.error('Error fetching notifications:', err);\r\n            setError('Failed to load notifications');\r\n            toast.error('Failed to load notifications');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }, []);\r\n\r\n    const markAsRead = useCallback(async (notificationId: string) => {\r\n        try {\r\n            // TODO: Replace with actual API call\r\n            // await api.put(`/notifications/${notificationId}/read`);\r\n            \r\n            setNotifications(prev => \r\n                prev.map(notification => \r\n                    notification._id === notificationId \r\n                        ? { ...notification, read: true }\r\n                        : notification\r\n                )\r\n            );\r\n        } catch (err: any) {\r\n            console.error('Error marking notification as read:', err);\r\n            toast.error('Failed to mark notification as read');\r\n        }\r\n    }, []);\r\n\r\n    const markAllAsRead = useCallback(async () => {\r\n        try {\r\n            // TODO: Replace with actual API call\r\n            // await api.put('/notifications/read-all');\r\n            \r\n            setNotifications(prev => \r\n                prev.map(notification => ({ ...notification, read: true }))\r\n            );\r\n            \r\n            toast.success('All notifications marked as read');\r\n        } catch (err: any) {\r\n            console.error('Error marking all notifications as read:', err);\r\n            toast.error('Failed to mark all notifications as read');\r\n        }\r\n    }, []);\r\n\r\n    const refreshNotifications = useCallback(() => {\r\n        fetchNotifications();\r\n    }, [fetchNotifications]);\r\n\r\n    useEffect(() => {\r\n        fetchNotifications();\r\n    }, [fetchNotifications]);\r\n\r\n    return {\r\n        notifications,\r\n        loading,\r\n        error,\r\n        markAsRead,\r\n        markAllAsRead,\r\n        refreshNotifications\r\n    };\r\n};"],"names":[],"mappings":";;;AACA;AACA;;AAFA;;;AAcO,MAAM,kBAAkB;;IAC3B,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAkB,EAAE;IACrE,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IAElD,MAAM,qBAAqB,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;2DAAE;YACnC,IAAI;gBACA,WAAW;gBACX,SAAS;gBAET,2DAA2D;gBAC3D,oDAAoD;gBACpD,mCAAmC;gBAEnC,oBAAoB;gBACpB,MAAM,oBAAoC;oBACtC;wBACI,KAAK;wBACL,OAAO;wBACP,SAAS;wBACT,MAAM;wBACN,MAAM;wBACN,WAAW,IAAI,OAAO,WAAW;wBACjC,WAAW,IAAI,OAAO,WAAW;oBACrC;oBACA;wBACI,KAAK;wBACL,OAAO;wBACP,SAAS;wBACT,MAAM;wBACN,MAAM;wBACN,WAAW,IAAI,KAAK,KAAK,GAAG,KAAK,KAAK,KAAK,KAAK,MAAM,WAAW;wBACjE,WAAW,IAAI,KAAK,KAAK,GAAG,KAAK,KAAK,KAAK,KAAK,MAAM,WAAW;oBACrE;iBACH;gBAED,iBAAiB;YAErB,EAAE,OAAO,KAAU;gBACf,QAAQ,KAAK,CAAC,iCAAiC;gBAC/C,SAAS;gBACT,0JAAA,CAAA,UAAK,CAAC,KAAK,CAAC;YAChB,SAAU;gBACN,WAAW;YACf;QACJ;0DAAG,EAAE;IAEL,MAAM,aAAa,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;mDAAE,OAAO;YAClC,IAAI;gBACA,qCAAqC;gBACrC,0DAA0D;gBAE1D;+DAAiB,CAAA,OACb,KAAK,GAAG;uEAAC,CAAA,eACL,aAAa,GAAG,KAAK,iBACf;oCAAE,GAAG,YAAY;oCAAE,MAAM;gCAAK,IAC9B;;;YAGlB,EAAE,OAAO,KAAU;gBACf,QAAQ,KAAK,CAAC,uCAAuC;gBACrD,0JAAA,CAAA,UAAK,CAAC,KAAK,CAAC;YAChB;QACJ;kDAAG,EAAE;IAEL,MAAM,gBAAgB,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;sDAAE;YAC9B,IAAI;gBACA,qCAAqC;gBACrC,4CAA4C;gBAE5C;kEAAiB,CAAA,OACb,KAAK,GAAG;0EAAC,CAAA,eAAgB,CAAC;oCAAE,GAAG,YAAY;oCAAE,MAAM;gCAAK,CAAC;;;gBAG7D,0JAAA,CAAA,UAAK,CAAC,OAAO,CAAC;YAClB,EAAE,OAAO,KAAU;gBACf,QAAQ,KAAK,CAAC,4CAA4C;gBAC1D,0JAAA,CAAA,UAAK,CAAC,KAAK,CAAC;YAChB;QACJ;qDAAG,EAAE;IAEL,MAAM,uBAAuB,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;6DAAE;YACrC;QACJ;4DAAG;QAAC;KAAmB;IAEvB,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;qCAAE;YACN;QACJ;oCAAG;QAAC;KAAmB;IAEvB,OAAO;QACH;QACA;QACA;QACA;QACA;QACA;IACJ;AACJ;GAjGa","debugId":null}}]
}