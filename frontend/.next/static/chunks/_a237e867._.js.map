{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Bruce%20Vo/Documents/project/Streaming_Platform/frontend/lib/api.ts"],"sourcesContent":["const BASE_URL = process.env.NEXT_PUBLIC_API_URL || 'http://localhost:5001/api';\r\n\r\ninterface ApiResponse<T = any> {\r\n    success: boolean;\r\n    message?: string;\r\n    user?: T;\r\n    token?: string;\r\n}\r\n\r\ninterface SignupData {\r\n    fullName: string;\r\n    email: string;\r\n    password: string;\r\n}\r\n\r\ninterface LoginData {\r\n    email: string;\r\n    password: string;\r\n}\r\n\r\ninterface OnboardingData {\r\n    fullName: string;\r\n    bio: string;\r\n    nativeLanguage: string;\r\n    learningLanguage: string;\r\n    location: string;\r\n    profilePic: string;\r\n}\r\n\r\nconst makeAuthenticationRequest = async (\r\n    endpoint: string, \r\n    options: RequestInit = {}\r\n): Promise<Response> => {\r\n    const token = localStorage.getItem('auth_token');\r\n\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        ...(token && { Authorization: `Bearer ${token}` }),\r\n        ...options.headers,\r\n    };\r\n\r\n    return fetch(`${BASE_URL}${endpoint}`, {\r\n        ...options,\r\n        headers,\r\n    });\r\n}\r\n\r\nexport const signUp = async (signUpData: SignupData): Promise<ApiResponse> => {\r\n    try {\r\n        const response = await fetch(`${BASE_URL}/auth/sign-up`, {\r\n            method: 'POST',\r\n            body: JSON.stringify(signUpData),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        });\r\n\r\n        const data = await response.json();\r\n        return data;\r\n    } catch (error: any) {\r\n        console.error('Signup error:', error);\r\n        return {\r\n            success: false,\r\n            message: 'Network error occurred with signUp function in api.ts'\r\n        };\r\n    }\r\n}\r\n\r\nexport const signIn = async (loginData: LoginData): Promise<ApiResponse> => {\r\n    try {\r\n        const response = await fetch(`${BASE_URL}/auth/sign-in`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(loginData),\r\n        });\r\n\r\n        const data = await response.json();\r\n        return data;\r\n    } catch (error: any) {\r\n        console.error('Login error in api.ts:', error);\r\n        return {\r\n            success: false,\r\n            message: 'Something wrong with signIn function in api.ts'\r\n        };\r\n    }\r\n};\r\n\r\nexport const getAuthUser = async (): Promise<ApiResponse | null> => {\r\n    try {\r\n        const response = await makeAuthenticationRequest(\"/auth/me\");\r\n        if (!response.ok) {\r\n            return null;\r\n        }\r\n\r\n        const data = await response.json();\r\n        return data;\r\n\r\n    } catch (error) {\r\n        console.error('Get auth user error in api.ts:', error);\r\n        return null;\r\n    }\r\n}\r\n\r\nexport const completeOnBoarding = async (userData: OnboardingData): Promise<ApiResponse> => {\r\n    try {\r\n        const response = await makeAuthenticationRequest('/auth/onBoarding', {\r\n            method: 'POST',\r\n            body: JSON.stringify(userData),\r\n        });\r\n\r\n        const data = await response.json();\r\n        return data;\r\n    } catch (error) {\r\n        console.error(\"Onboarding error in api.ts: \", error);\r\n        return {\r\n            success: false,\r\n            message: \"Internal error in Onboarding in api.ts\"\r\n        }\r\n    }\r\n}\r\n\r\nexport async function getUserFriends(): Promise<any[]> {\r\n    try {\r\n        const response = await makeAuthenticationRequest('/users/friends');\r\n        if (!response.ok) {\r\n            throw new Error('Failed to fetch friends');\r\n        }\r\n\r\n        const data = await response.json();\r\n        return data;\r\n    } catch (error: any) {\r\n        console.error('Get friends error:', error);\r\n        throw error;\r\n    };\r\n}\r\n\r\nexport async function getRecommendedUsers(): Promise<any[]> {\r\n    try {\r\n        const response = await makeAuthenticationRequest('/users/');\r\n        \r\n        if (!response.ok) {\r\n            throw new Error('Failed to fetch recommended users');\r\n        }\r\n        \r\n        const data = await response.json();\r\n        return data;\r\n    } catch (error) {\r\n        console.error('Get recommended users error:', error);\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport async function getOutgoingFriendReqs(): Promise<any[]> {\r\n    try {\r\n        const response = await makeAuthenticationRequest('/users/outgoing-friend-requests');\r\n        \r\n        if (!response.ok) {\r\n            throw new Error('Failed to fetch outgoing requests');\r\n        }\r\n        \r\n        const data = await response.json();\r\n        return data;\r\n    } catch (error) {\r\n        console.error('Get outgoing requests error:', error);\r\n        throw error;\r\n    }\r\n}\r\n\r\n\r\nexport async function sendFriendRequest(userId: string): Promise<any> {\r\n    try {\r\n        const response = await makeAuthenticationRequest(`/users/friend-request/${userId}`, {\r\n            method: 'POST',\r\n        });\r\n        \r\n        if (!response.ok) {\r\n            throw new Error('Failed to send friend request');\r\n        }\r\n        \r\n        const data = await response.json();\r\n        return data;\r\n    } catch (error) {\r\n        console.error('Send friend request error:', error);\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport async function getFriendRequests(): Promise<any> {\r\n    try {\r\n        console.log('üåê Making API call to /users/friend-requests');\r\n        \r\n        const response = await makeAuthenticationRequest('/users/friend-requests');\r\n        console.log('üì° Response status:', response.status);\r\n        \r\n        if (!response.ok) {\r\n            console.error('‚ùå Response not OK:', response.status, response.statusText);\r\n            throw new Error('Failed to fetch friend requests');\r\n        }\r\n        \r\n        const data = await response.json();\r\n        console.log('üì¶ Raw API response:', data);\r\n        \r\n        // Check backend response structure\r\n        const result = {\r\n            incomingRequests: data.incomingRequests || data.incomingReqs || [],\r\n            acceptedRequests: data.acceptedRequests || data.acceptedReqs || []\r\n        };\r\n        \r\n        console.log('üîÑ Mapped result:', result);\r\n        return result;\r\n    } catch (error) {\r\n        console.error('‚ùå Get friend requests error:', error);\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport async function acceptFriendRequest(requestId: string): Promise<any> {\r\n    try {\r\n        console.log('üîÑ Accepting friend request:', requestId);\r\n        \r\n        const response = await makeAuthenticationRequest(`/users/friend-request/${requestId}/accept`, {\r\n            method: 'PUT',\r\n        });\r\n        \r\n        console.log('üì° Accept response status:', response.status);\r\n        \r\n        if (!response.ok) {\r\n            const errorData = await response.json();\r\n            console.error('‚ùå Accept failed:', errorData);\r\n            throw new Error(errorData.message || 'Failed to accept friend request');\r\n        }\r\n        \r\n        const data = await response.json();\r\n        console.log('‚úÖ Accept success:', data);\r\n        return data;\r\n    } catch (error) {\r\n        console.error('‚ùå Accept friend request error:', error);\r\n        throw error;\r\n    }\r\n}\r\n\r\n// Chat APIs\r\nexport async function getStreamToken(): Promise<any> {\r\n    try {\r\n        console.log('üîÑ Requesting Stream token...');\r\n        \r\n        const response = await makeAuthenticationRequest('/chat/token');\r\n        \r\n        console.log('üì° Response status:', response.status);\r\n        \r\n        if (!response.ok) {\r\n            const errorData = await response.json();\r\n            console.error('‚ùå Token request failed:', errorData);\r\n            throw new Error(errorData.message || 'Failed to get stream token in frontend api.ts');\r\n        }\r\n        \r\n        const data = await response.json();\r\n        console.log('‚úÖ Stream token received:', data);\r\n        return data;\r\n    } catch (error) {\r\n        console.error('‚ùå Get stream token error in the frontend:', error);\r\n        throw error;\r\n    }\r\n}\r\n\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 228, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Bruce%20Vo/Documents/project/Streaming_Platform/frontend/components/ui/ChatLoader.tsx"],"sourcesContent":["import { MessageCircleIcon } from \"lucide-react\";\r\n\r\nconst ChatLoader = () => {\r\n    return (\r\n        <div className=\"flex flex-col items-center justify-center h-[calc(100vh-4rem)]\">\r\n            <div className=\"text-center space-y-4\">\r\n                <MessageCircleIcon className=\"size-16 mx-auto text-primary animate-pulse\" />\r\n                <div className=\"space-y-2\">\r\n                    <h3 className=\"text-xl font-semibold\">Connecting to chat...</h3>\r\n                    <p className=\"text-base-content opacity-70\">\r\n                        Setting up your secure conversation\r\n                    </p>\r\n                </div>\r\n                <div className=\"flex justify-center\">\r\n                    <span className=\"loading loading-spinner loading-lg text-primary\"></span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChatLoader;"],"names":[],"mappings":";;;;AAAA;;;AAEA,MAAM,aAAa;IACf,qBACI,6LAAC;QAAI,WAAU;kBACX,cAAA,6LAAC;YAAI,WAAU;;8BACX,6LAAC,+NAAA,CAAA,oBAAiB;oBAAC,WAAU;;;;;;8BAC7B,6LAAC;oBAAI,WAAU;;sCACX,6LAAC;4BAAG,WAAU;sCAAwB;;;;;;sCACtC,6LAAC;4BAAE,WAAU;sCAA+B;;;;;;;;;;;;8BAIhD,6LAAC;oBAAI,WAAU;8BACX,cAAA,6LAAC;wBAAK,WAAU;;;;;;;;;;;;;;;;;;;;;;AAKpC;KAjBM;uCAmBS","debugId":null}},
    {"offset": {"line": 312, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Bruce%20Vo/Documents/project/Streaming_Platform/frontend/components/ui/CallButton.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { VideoIcon } from \"lucide-react\";\r\n\r\ninterface CallButtonProps {\r\n    handleVideoCall: () => void;\r\n}\r\n\r\nconst CallButton = ({ handleVideoCall }: CallButtonProps) => {\r\n    return (\r\n        <div className=\"absolute top-4 right-4 z-10\">\r\n            <button\r\n                onClick={handleVideoCall}\r\n                className=\"btn btn-primary btn-sm gap-2 shadow-lg\"\r\n                title=\"Start video call\"\r\n            >\r\n                <VideoIcon className=\"size-4\" />\r\n                Start Video Call\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CallButton;"],"names":[],"mappings":";;;;AAEA;AAFA;;;AAQA,MAAM,aAAa,CAAC,EAAE,eAAe,EAAmB;IACpD,qBACI,6LAAC;QAAI,WAAU;kBACX,cAAA,6LAAC;YACG,SAAS;YACT,WAAU;YACV,OAAM;;8BAEN,6LAAC,2MAAA,CAAA,YAAS;oBAAC,WAAU;;;;;;gBAAW;;;;;;;;;;;;AAKhD;KAbM;uCAeS","debugId":null}},
    {"offset": {"line": 361, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Bruce%20Vo/Documents/project/Streaming_Platform/frontend/app/%28protected%29/chat/%5Bid%5D/page.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useParams } from 'next/navigation'\r\nimport { useState, useEffect } from 'react'\r\nimport { StreamChat } from 'stream-chat'\r\nimport { useAuth } from \"@/contexts/AuthContext\";\r\nimport { getStreamToken } from '@/lib/api';\r\nimport toast from 'react-hot-toast';\r\nimport ChatLoader from '@/components/ui/ChatLoader';\r\nimport {\r\n    Channel,\r\n    ChannelHeader,\r\n    Chat,\r\n    MessageInput,\r\n    MessageList,\r\n    Thread,\r\n    Window,\r\n} from \"stream-chat-react\";\r\nimport CallButton from '@/components/ui/CallButton';\r\n\r\nconst STREAM_API_KEY = process.env.NEXT_PUBLIC_STREAM_API_KEY;\r\nconsole.log('üîß Environment check:', {\r\n    STREAM_API_KEY: STREAM_API_KEY,\r\n    hasApiKey: !!STREAM_API_KEY,\r\n    allEnvVars: Object.keys(process.env).filter(key => key.startsWith('NEXT_PUBLIC_'))\r\n});\r\n\r\nconst ChatPage = () => {\r\n    const params = useParams();\r\n    const targetUserId = params.id as string;\r\n\r\n    const [chatClient, setChatClient] = useState<StreamChat | null>(null);\r\n    const [channel, setChannel] = useState<any>(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const [tokenData, setTokenData] = useState<any>(null);\r\n\r\n    const { user: authUser } = useAuth();\r\n\r\n    useEffect(() => {\r\n        const fetchToken = async () => {\r\n            if (!authUser) return;\r\n\r\n            try {\r\n                console.log('üîë Fetching Stream token...');\r\n                const response = await getStreamToken();\r\n                setTokenData(response);\r\n                console.log('‚úÖ Stream token received');\r\n            } catch (error) {\r\n                console.error('‚ùå Error fetching token:', error);\r\n                toast.error('Failed to get chat token');\r\n            }\r\n        };\r\n\r\n        fetchToken();\r\n    }, [authUser]);\r\n\r\n    // Initialize chat client and channel\r\n    useEffect(() => {\r\n        const initChat = async () => {\r\n            if (!tokenData?.token || !authUser || !STREAM_API_KEY) {\r\n                console.log('‚è≥ Waiting for dependencies...', {\r\n                    hasToken: !!tokenData?.token,\r\n                    hasAuthUser: !!authUser,\r\n                    hasApiKey: !!STREAM_API_KEY\r\n                });\r\n                return;\r\n            }\r\n\r\n            try {\r\n                console.log(\"üöÄ Initializing stream chat client...\");\r\n\r\n                // Create Stream client\r\n                const client = StreamChat.getInstance(STREAM_API_KEY);\r\n\r\n                // Connect user\r\n                await client.connectUser(\r\n                    {\r\n                        id: authUser._id,\r\n                        name: authUser.fullName,\r\n                        image: authUser.profilePic,\r\n                    },\r\n                    tokenData.token\r\n                );\r\n\r\n                console.log('üë§ User connected to Stream');\r\n\r\n                // Create channel ID (consistent regardless of who starts chat)\r\n                const channelId = [authUser._id, targetUserId].sort().join(\"-\");\r\n                console.log('üí¨ Channel ID:', channelId);\r\n\r\n                // Create/get channel\r\n                const currChannel = client.channel(\"messaging\", channelId, {\r\n                    members: [authUser._id, targetUserId],\r\n                });\r\n\r\n                await currChannel.watch();\r\n                console.log('üëÄ Channel watching started');\r\n\r\n                setChatClient(client);\r\n                setChannel(currChannel);\r\n            } catch (error) {\r\n                console.error(\"‚ùå Error initializing chat:\", error);\r\n                toast.error(\"Could not connect to chat. Please try again.\");\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        initChat();\r\n\r\n        // Cleanup function\r\n        return () => {\r\n            if (chatClient) {\r\n                console.log('üßπ Cleaning up chat client...');\r\n                chatClient.disconnectUser();\r\n            }\r\n        };\r\n    }, [tokenData, authUser, targetUserId, chatClient]);\r\n\r\n    const handleVideoCall = () => {\r\n        if (channel) {\r\n            const callUrl = `${window.location.origin}/call/${channel.id}`;\r\n\r\n            // Send message in chat\r\n            channel.sendMessage({\r\n                text: `üé• I've started a video call. Join me here: ${callUrl}`,\r\n            });\r\n\r\n            // Immediately join the call\r\n            window.open(callUrl, '_blank');\r\n\r\n            toast.success(\"Video call started!\");\r\n        }\r\n    };\r\n\r\n    // Loading state\r\n    if (loading || !chatClient || !channel) {\r\n        return <ChatLoader />;\r\n    }\r\n\r\n    // Error state\r\n    if (!STREAM_API_KEY) {\r\n        return (\r\n            <div className=\"flex items-center justify-center h-full\">\r\n                <div className=\"text-center\">\r\n                    <h2 className=\"text-xl font-semibold mb-2\">Configuration Error</h2>\r\n                    <p className=\"text-base-content opacity-70\">\r\n                        Stream API key is not configured\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"h-[calc(100vh-4rem)]\"> {/* Adjust height for navbar */}\r\n            <Chat client={chatClient}>\r\n                <Channel channel={channel}>\r\n                    <div className=\"w-full relative h-full\">\r\n                        <CallButton handleVideoCall={handleVideoCall} />\r\n                        <Window>\r\n                            <ChannelHeader />\r\n                            <MessageList />\r\n                            <MessageInput focus />\r\n                        </Window>\r\n                    </div>\r\n                    <Thread />\r\n                </Channel>\r\n            </Chat>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChatPage"],"names":[],"mappings":"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","debugId":null}}]
}