{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Bruce%20Vo/Documents/project/Streaming_Platform/frontend/node_modules/stream-chat-react/dist/context/utils/getDisplayName.js"],"sourcesContent":["export const getDisplayName = (Component) => Component.displayName || Component.name || 'Component';\n"],"names":[],"mappings":";;;AAAO,MAAM,iBAAiB,CAAC,YAAc,UAAU,WAAW,IAAI,UAAU,IAAI,IAAI","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 17, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Bruce%20Vo/Documents/project/Streaming_Platform/frontend/node_modules/stream-chat-react/dist/context/ChatContext.js"],"sourcesContent":["import React, { useContext } from 'react';\nimport { getDisplayName } from './utils/getDisplayName';\nexport const ChatContext = React.createContext(undefined);\nexport const ChatProvider = ({ children, value, }) => (React.createElement(ChatContext.Provider, { value: value }, children));\nexport const useChatContext = (componentName) => {\n    const contextValue = useContext(ChatContext);\n    if (!contextValue) {\n        console.warn(`The useChatContext hook was called outside of the ChatContext provider. Make sure this hook is called within a child of the Chat component. The errored call is located in the ${componentName} component.`);\n        return {};\n    }\n    return contextValue;\n};\n/**\n * Typescript currently does not support partial inference so if ChatContext\n * typing is desired while using the HOC withChatContext the Props for the\n * wrapped component must be provided as the first generic.\n */\nexport const withChatContext = (Component) => {\n    const WithChatContextComponent = (props) => {\n        const chatContext = useChatContext();\n        return React.createElement(Component, { ...props, ...chatContext });\n    };\n    WithChatContextComponent.displayName = `WithChatContext${getDisplayName(Component)}`;\n    return WithChatContextComponent;\n};\n"],"names":[],"mappings":";;;;;;AAAA;AACA;;;AACO,MAAM,cAAc,6JAAA,CAAA,UAAK,CAAC,aAAa,CAAC;AACxC,MAAM,eAAe,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAG,GAAM,6JAAA,CAAA,UAAK,CAAC,aAAa,CAAC,YAAY,QAAQ,EAAE;QAAE,OAAO;IAAM,GAAG;AAC5G,MAAM,iBAAiB,CAAC;IAC3B,MAAM,eAAe,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,EAAE;IAChC,IAAI,CAAC,cAAc;QACf,QAAQ,IAAI,CAAC,CAAC,+KAA+K,EAAE,cAAc,WAAW,CAAC;QACzN,OAAO,CAAC;IACZ;IACA,OAAO;AACX;AAMO,MAAM,kBAAkB,CAAC;IAC5B,MAAM,2BAA2B,CAAC;QAC9B,MAAM,cAAc;QACpB,OAAO,6JAAA,CAAA,UAAK,CAAC,aAAa,CAAC,WAAW;YAAE,GAAG,KAAK;YAAE,GAAG,WAAW;QAAC;IACrE;IACA,yBAAyB,WAAW,GAAG,CAAC,eAAe,EAAE,CAAA,GAAA,wLAAA,CAAA,iBAAc,AAAD,EAAE,YAAY;IACpF,OAAO;AACX","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 56, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Bruce%20Vo/Documents/project/Streaming_Platform/frontend/node_modules/stream-chat-react/dist/context/TranslationContext.js"],"sourcesContent":["import React, { useContext } from 'react';\nimport Dayjs from 'dayjs';\nimport calendar from 'dayjs/plugin/calendar';\nimport localizedFormat from 'dayjs/plugin/localizedFormat';\nimport { getDisplayName } from './utils/getDisplayName';\nimport { defaultDateTimeParser, defaultTranslatorFunction } from '../i18n/utils';\nDayjs.extend(calendar);\nDayjs.extend(localizedFormat);\nexport const TranslationContext = React.createContext({\n    t: defaultTranslatorFunction,\n    tDateTimeParser: defaultDateTimeParser,\n    userLanguage: 'en',\n});\nexport const TranslationProvider = ({ children, value, }) => (React.createElement(TranslationContext.Provider, { value: value }, children));\nexport const useTranslationContext = (componentName) => {\n    const contextValue = useContext(TranslationContext);\n    if (!contextValue) {\n        console.warn(`The useTranslationContext hook was called outside of the TranslationContext provider. Make sure this hook is called within a child of the Chat component. The errored call is located in the ${componentName} component.`);\n        return {};\n    }\n    return contextValue;\n};\nexport const withTranslationContext = (Component) => {\n    const WithTranslationContextComponent = (props) => {\n        const translationContext = useTranslationContext();\n        return React.createElement(Component, { ...props, ...translationContext });\n    };\n    WithTranslationContextComponent.displayName = `WithTranslationContext${getDisplayName(Component)}`;\n    return WithTranslationContextComponent;\n};\n"],"names":[],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;AACA,wIAAA,CAAA,UAAK,CAAC,MAAM,CAAC,8IAAA,CAAA,UAAQ;AACrB,wIAAA,CAAA,UAAK,CAAC,MAAM,CAAC,qJAAA,CAAA,UAAe;AACrB,MAAM,qBAAqB,6JAAA,CAAA,UAAK,CAAC,aAAa,CAAC;IAClD,GAAG,mKAAA,CAAA,4BAAyB;IAC5B,iBAAiB,mKAAA,CAAA,wBAAqB;IACtC,cAAc;AAClB;AACO,MAAM,sBAAsB,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAG,GAAM,6JAAA,CAAA,UAAK,CAAC,aAAa,CAAC,mBAAmB,QAAQ,EAAE;QAAE,OAAO;IAAM,GAAG;AAC1H,MAAM,wBAAwB,CAAC;IAClC,MAAM,eAAe,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,EAAE;IAChC,IAAI,CAAC,cAAc;QACf,QAAQ,IAAI,CAAC,CAAC,6LAA6L,EAAE,cAAc,WAAW,CAAC;QACvO,OAAO,CAAC;IACZ;IACA,OAAO;AACX;AACO,MAAM,yBAAyB,CAAC;IACnC,MAAM,kCAAkC,CAAC;QACrC,MAAM,qBAAqB;QAC3B,OAAO,6JAAA,CAAA,UAAK,CAAC,aAAa,CAAC,WAAW;YAAE,GAAG,KAAK;YAAE,GAAG,kBAAkB;QAAC;IAC5E;IACA,gCAAgC,WAAW,GAAG,CAAC,sBAAsB,EAAE,CAAA,GAAA,wLAAA,CAAA,iBAAc,AAAD,EAAE,YAAY;IAClG,OAAO;AACX","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 109, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Bruce%20Vo/Documents/project/Streaming_Platform/frontend/node_modules/stream-chat-react/dist/context/ChannelActionContext.js"],"sourcesContent":["import React, { useContext } from 'react';\nexport const ChannelActionContext = React.createContext(undefined);\nexport const ChannelActionProvider = ({ children, value, }) => (React.createElement(ChannelActionContext.Provider, { value: value }, children));\nexport const useChannelActionContext = (componentName) => {\n    const contextValue = useContext(ChannelActionContext);\n    if (!contextValue) {\n        console.warn(`The useChannelActionContext hook was called outside of the ChannelActionContext provider. Make sure this hook is called within a child of the Channel component. The errored call is located in the ${componentName} component.`);\n        return {};\n    }\n    return contextValue;\n};\n/**\n * Typescript currently does not support partial inference, so if ChannelActionContext\n * typing is desired while using the HOC withChannelActionContext, the Props for the\n * wrapped component must be provided as the first generic.\n */\nexport const withChannelActionContext = (Component) => {\n    const WithChannelActionContextComponent = (props) => {\n        const channelActionContext = useChannelActionContext();\n        return React.createElement(Component, { ...props, ...channelActionContext });\n    };\n    WithChannelActionContextComponent.displayName = (Component.displayName ||\n        Component.name ||\n        'Component').replace('Base', '');\n    return WithChannelActionContextComponent;\n};\n"],"names":[],"mappings":";;;;;;AAAA;;AACO,MAAM,uBAAuB,6JAAA,CAAA,UAAK,CAAC,aAAa,CAAC;AACjD,MAAM,wBAAwB,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAG,GAAM,6JAAA,CAAA,UAAK,CAAC,aAAa,CAAC,qBAAqB,QAAQ,EAAE;QAAE,OAAO;IAAM,GAAG;AAC9H,MAAM,0BAA0B,CAAC;IACpC,MAAM,eAAe,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,EAAE;IAChC,IAAI,CAAC,cAAc;QACf,QAAQ,IAAI,CAAC,CAAC,oMAAoM,EAAE,cAAc,WAAW,CAAC;QAC9O,OAAO,CAAC;IACZ;IACA,OAAO;AACX;AAMO,MAAM,2BAA2B,CAAC;IACrC,MAAM,oCAAoC,CAAC;QACvC,MAAM,uBAAuB;QAC7B,OAAO,6JAAA,CAAA,UAAK,CAAC,aAAa,CAAC,WAAW;YAAE,GAAG,KAAK;YAAE,GAAG,oBAAoB;QAAC;IAC9E;IACA,kCAAkC,WAAW,GAAG,CAAC,UAAU,WAAW,IAClE,UAAU,IAAI,IACd,WAAW,EAAE,OAAO,CAAC,QAAQ;IACjC,OAAO;AACX","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 146, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Bruce%20Vo/Documents/project/Streaming_Platform/frontend/node_modules/stream-chat-react/dist/context/ChannelStateContext.js"],"sourcesContent":["import React, { useContext } from 'react';\nexport const ChannelStateContext = React.createContext(undefined);\nexport const ChannelStateProvider = ({ children, value, }) => (React.createElement(ChannelStateContext.Provider, { value: value }, children));\nexport const useChannelStateContext = (componentName) => {\n    const contextValue = useContext(ChannelStateContext);\n    if (!contextValue) {\n        console.warn(`The useChannelStateContext hook was called outside of the ChannelStateContext provider. Make sure this hook is called within a child of the Channel component. The errored call is located in the ${componentName} component.`);\n        return {};\n    }\n    return contextValue;\n};\n/**\n * Typescript currently does not support partial inference, so if ChannelStateContext\n * typing is desired while using the HOC withChannelStateContext, the Props for the\n * wrapped component must be provided as the first generic.\n */\nexport const withChannelStateContext = (Component) => {\n    const WithChannelStateContextComponent = (props) => {\n        const channelStateContext = useChannelStateContext();\n        return React.createElement(Component, { ...props, ...channelStateContext });\n    };\n    WithChannelStateContextComponent.displayName = (Component.displayName ||\n        Component.name ||\n        'Component').replace('Base', '');\n    return WithChannelStateContextComponent;\n};\n"],"names":[],"mappings":";;;;;;AAAA;;AACO,MAAM,sBAAsB,6JAAA,CAAA,UAAK,CAAC,aAAa,CAAC;AAChD,MAAM,uBAAuB,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAG,GAAM,6JAAA,CAAA,UAAK,CAAC,aAAa,CAAC,oBAAoB,QAAQ,EAAE;QAAE,OAAO;IAAM,GAAG;AAC5H,MAAM,yBAAyB,CAAC;IACnC,MAAM,eAAe,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,EAAE;IAChC,IAAI,CAAC,cAAc;QACf,QAAQ,IAAI,CAAC,CAAC,kMAAkM,EAAE,cAAc,WAAW,CAAC;QAC5O,OAAO,CAAC;IACZ;IACA,OAAO;AACX;AAMO,MAAM,0BAA0B,CAAC;IACpC,MAAM,mCAAmC,CAAC;QACtC,MAAM,sBAAsB;QAC5B,OAAO,6JAAA,CAAA,UAAK,CAAC,aAAa,CAAC,WAAW;YAAE,GAAG,KAAK;YAAE,GAAG,mBAAmB;QAAC;IAC7E;IACA,iCAAiC,WAAW,GAAG,CAAC,UAAU,WAAW,IACjE,UAAU,IAAI,IACd,WAAW,EAAE,OAAO,CAAC,QAAQ;IACjC,OAAO;AACX","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 183, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Bruce%20Vo/Documents/project/Streaming_Platform/frontend/node_modules/stream-chat-react/dist/context/TypingContext.js"],"sourcesContent":["import React, { useContext } from 'react';\nexport const TypingContext = React.createContext(undefined);\nexport const TypingProvider = ({ children, value, }) => (React.createElement(TypingContext.Provider, { value: value }, children));\nexport const useTypingContext = (componentName) => {\n    const contextValue = useContext(TypingContext);\n    if (!contextValue) {\n        console.warn(`The useTypingContext hook was called outside of the TypingContext provider. Make sure this hook is called within a child of the Channel component. The errored call is located in the ${componentName} component.`);\n        return {};\n    }\n    return contextValue;\n};\n/**\n * Typescript currently does not support partial inference, so if TypingContext\n * typing is desired while using the HOC withTypingContext, the Props for the\n * wrapped component must be provided as the first generic.\n */\nexport const withTypingContext = (Component) => {\n    const WithTypingContextComponent = (props) => {\n        const typingContext = useTypingContext();\n        return React.createElement(Component, { ...props, ...typingContext });\n    };\n    WithTypingContextComponent.displayName = (Component.displayName ||\n        Component.name ||\n        'Component').replace('Base', '');\n    return WithTypingContextComponent;\n};\n"],"names":[],"mappings":";;;;;;AAAA;;AACO,MAAM,gBAAgB,6JAAA,CAAA,UAAK,CAAC,aAAa,CAAC;AAC1C,MAAM,iBAAiB,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAG,GAAM,6JAAA,CAAA,UAAK,CAAC,aAAa,CAAC,cAAc,QAAQ,EAAE;QAAE,OAAO;IAAM,GAAG;AAChH,MAAM,mBAAmB,CAAC;IAC7B,MAAM,eAAe,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,EAAE;IAChC,IAAI,CAAC,cAAc;QACf,QAAQ,IAAI,CAAC,CAAC,sLAAsL,EAAE,cAAc,WAAW,CAAC;QAChO,OAAO,CAAC;IACZ;IACA,OAAO;AACX;AAMO,MAAM,oBAAoB,CAAC;IAC9B,MAAM,6BAA6B,CAAC;QAChC,MAAM,gBAAgB;QACtB,OAAO,6JAAA,CAAA,UAAK,CAAC,aAAa,CAAC,WAAW;YAAE,GAAG,KAAK;YAAE,GAAG,aAAa;QAAC;IACvE;IACA,2BAA2B,WAAW,GAAG,CAAC,UAAU,WAAW,IAC3D,UAAU,IAAI,IACd,WAAW,EAAE,OAAO,CAAC,QAAQ;IACjC,OAAO;AACX","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 220, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Bruce%20Vo/Documents/project/Streaming_Platform/frontend/node_modules/stream-chat-react/dist/context/ComponentContext.js"],"sourcesContent":["import React, { useContext } from 'react';\nexport const ComponentContext = React.createContext({});\nexport const ComponentProvider = ({ children, value, }) => (React.createElement(ComponentContext.Provider, { value: value }, children));\nexport const useComponentContext = (\n/**\n * @deprecated\n */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n_componentName) => useContext(ComponentContext);\n/**\n * Typescript currently does not support partial inference, so if ComponentContext\n * typing is desired while using the HOC withComponentContext, the Props for the\n * wrapped component must be provided as the first generic.\n */\nexport const withComponentContext = (Component) => {\n    const WithComponentContextComponent = (props) => {\n        const componentContext = useComponentContext();\n        return React.createElement(Component, { ...props, ...componentContext });\n    };\n    WithComponentContextComponent.displayName = (Component.displayName ||\n        Component.name ||\n        'Component').replace('Base', '');\n    return WithComponentContextComponent;\n};\n"],"names":[],"mappings":";;;;;;AAAA;;AACO,MAAM,mBAAmB,6JAAA,CAAA,UAAK,CAAC,aAAa,CAAC,CAAC;AAC9C,MAAM,oBAAoB,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAG,GAAM,6JAAA,CAAA,UAAK,CAAC,aAAa,CAAC,iBAAiB,QAAQ,EAAE;QAAE,OAAO;IAAM,GAAG;AACtH,MAAM,sBAAsB,CACnC;;CAEC,GACD,6DAA6D;AAC7D,iBAAmB,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,EAAE;AAMvB,MAAM,uBAAuB,CAAC;IACjC,MAAM,gCAAgC,CAAC;QACnC,MAAM,mBAAmB;QACzB,OAAO,6JAAA,CAAA,UAAK,CAAC,aAAa,CAAC,WAAW;YAAE,GAAG,KAAK;YAAE,GAAG,gBAAgB;QAAC;IAC1E;IACA,8BAA8B,WAAW,GAAG,CAAC,UAAU,WAAW,IAC9D,UAAU,IAAI,IACd,WAAW,EAAE,OAAO,CAAC,QAAQ;IACjC,OAAO;AACX","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 253, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Bruce%20Vo/Documents/project/Streaming_Platform/frontend/node_modules/stream-chat-react/dist/context/WithComponents.js"],"sourcesContent":["import React, { useContext } from 'react';\nimport { ComponentContext } from './ComponentContext';\nexport function WithComponents({ children, overrides, }) {\n    const parentOverrides = useContext(ComponentContext);\n    const actualOverrides = { ...parentOverrides, ...overrides };\n    return (React.createElement(ComponentContext.Provider, { value: actualOverrides }, children));\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AACO,SAAS,eAAe,EAAE,QAAQ,EAAE,SAAS,EAAG;IACnD,MAAM,kBAAkB,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,EAAE,iLAAA,CAAA,mBAAgB;IACnD,MAAM,kBAAkB;QAAE,GAAG,eAAe;QAAE,GAAG,SAAS;IAAC;IAC3D,OAAQ,6JAAA,CAAA,UAAK,CAAC,aAAa,CAAC,iLAAA,CAAA,mBAAgB,CAAC,QAAQ,EAAE;QAAE,OAAO;IAAgB,GAAG;AACvF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 276, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Bruce%20Vo/Documents/project/Streaming_Platform/frontend/node_modules/stream-chat-react/dist/context/MessageContext.js"],"sourcesContent":["import React, { useContext } from 'react';\nexport const MessageContext = React.createContext(undefined);\nexport const MessageProvider = ({ children, value, }) => (React.createElement(MessageContext.Provider, { value: value }, children));\nexport const useMessageContext = (\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n_componentName) => {\n    const contextValue = useContext(MessageContext);\n    if (!contextValue) {\n        return {};\n    }\n    return contextValue;\n};\n/**\n * Typescript currently does not support partial inference, so if MessageContext\n * typing is desired while using the HOC withMessageContext, the Props for the\n * wrapped component must be provided as the first generic.\n */\nexport const withMessageContext = (Component) => {\n    const WithMessageContextComponent = (props) => {\n        const messageContext = useMessageContext();\n        return React.createElement(Component, { ...props, ...messageContext });\n    };\n    WithMessageContextComponent.displayName = (Component.displayName ||\n        Component.name ||\n        'Component').replace('Base', '');\n    return WithMessageContextComponent;\n};\n"],"names":[],"mappings":";;;;;;AAAA;;AACO,MAAM,iBAAiB,6JAAA,CAAA,UAAK,CAAC,aAAa,CAAC;AAC3C,MAAM,kBAAkB,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAG,GAAM,6JAAA,CAAA,UAAK,CAAC,aAAa,CAAC,eAAe,QAAQ,EAAE;QAAE,OAAO;IAAM,GAAG;AAClH,MAAM,oBAAoB,CACjC,6DAA6D;AAC7D;IACI,MAAM,eAAe,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,EAAE;IAChC,IAAI,CAAC,cAAc;QACf,OAAO,CAAC;IACZ;IACA,OAAO;AACX;AAMO,MAAM,qBAAqB,CAAC;IAC/B,MAAM,8BAA8B,CAAC;QACjC,MAAM,iBAAiB;QACvB,OAAO,6JAAA,CAAA,UAAK,CAAC,aAAa,CAAC,WAAW;YAAE,GAAG,KAAK;YAAE,GAAG,cAAc;QAAC;IACxE;IACA,4BAA4B,WAAW,GAAG,CAAC,UAAU,WAAW,IAC5D,UAAU,IAAI,IACd,WAAW,EAAE,OAAO,CAAC,QAAQ;IACjC,OAAO;AACX","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 313, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Bruce%20Vo/Documents/project/Streaming_Platform/frontend/node_modules/stream-chat-react/dist/context/DialogManagerContext.js"],"sourcesContent":["import React, { useContext, useState } from 'react';\nimport { DialogManager } from '../components/Dialog/DialogManager';\nimport { DialogPortalDestination } from '../components/Dialog/DialogPortal';\nconst DialogManagerProviderContext = React.createContext(undefined);\nexport const DialogManagerProvider = ({ children, id, }) => {\n    const [dialogManager] = useState(() => new DialogManager({ id }));\n    return (React.createElement(DialogManagerProviderContext.Provider, { value: { dialogManager } },\n        children,\n        React.createElement(DialogPortalDestination, null)));\n};\nexport const useDialogManager = () => {\n    const value = useContext(DialogManagerProviderContext);\n    return value;\n};\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;AACA,MAAM,+BAA+B,6JAAA,CAAA,UAAK,CAAC,aAAa,CAAC;AAClD,MAAM,wBAAwB,CAAC,EAAE,QAAQ,EAAE,EAAE,EAAG;IACnD,MAAM,CAAC,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD;0CAAE,IAAM,IAAI,2LAAA,CAAA,gBAAa,CAAC;gBAAE;YAAG;;IAC9D,OAAQ,6JAAA,CAAA,UAAK,CAAC,aAAa,CAAC,6BAA6B,QAAQ,EAAE;QAAE,OAAO;YAAE;QAAc;IAAE,GAC1F,UACA,6JAAA,CAAA,UAAK,CAAC,aAAa,CAAC,0LAAA,CAAA,0BAAuB,EAAE;AACrD;AACO,MAAM,mBAAmB;IAC5B,MAAM,QAAQ,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,EAAE;IACzB,OAAO;AACX","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 346, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Bruce%20Vo/Documents/project/Streaming_Platform/frontend/node_modules/stream-chat-react/dist/context/MessageListContext.js"],"sourcesContent":["import React, { createContext, useContext } from 'react';\nexport const MessageListContext = createContext(undefined);\n/**\n * Context provider for components rendered within the `MessageList`\n */\nexport const MessageListContextProvider = ({ children, value, }) => (React.createElement(MessageListContext.Provider, { value: value }, children));\nexport const useMessageListContext = (componentName) => {\n    const contextValue = useContext(MessageListContext);\n    if (!contextValue) {\n        console.warn(`The useMessageListContext hook was called outside of the MessageListContext provider. Make sure this hook is called within the MessageList component. The errored call is located in the ${componentName} component.`);\n        return {};\n    }\n    return contextValue;\n};\n"],"names":[],"mappings":";;;;;AAAA;;AACO,MAAM,qBAAqB,CAAA,GAAA,6JAAA,CAAA,gBAAa,AAAD,EAAE;AAIzC,MAAM,6BAA6B,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAG,GAAM,6JAAA,CAAA,UAAK,CAAC,aAAa,CAAC,mBAAmB,QAAQ,EAAE;QAAE,OAAO;IAAM,GAAG;AACjI,MAAM,wBAAwB,CAAC;IAClC,MAAM,eAAe,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,EAAE;IAChC,IAAI,CAAC,cAAc;QACf,QAAQ,IAAI,CAAC,CAAC,yLAAyL,EAAE,cAAc,WAAW,CAAC;QACnO,OAAO,CAAC;IACZ;IACA,OAAO;AACX","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 371, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Bruce%20Vo/Documents/project/Streaming_Platform/frontend/node_modules/stream-chat-react/dist/context/MessageBounceContext.js"],"sourcesContent":["import React, { createContext, useCallback, useContext, useMemo } from 'react';\nimport { useMessageContext } from './MessageContext';\nimport { useChannelActionContext } from './ChannelActionContext';\nimport { isMessageBounced } from '../components';\nconst MessageBounceContext = createContext(undefined);\nexport function useMessageBounceContext(componentName) {\n    const contextValue = useContext(MessageBounceContext);\n    if (!contextValue) {\n        console.warn(`The useMessageBounceContext hook was called outside of the MessageBounceContext provider. The errored call is located in the ${componentName} component.`);\n        return {};\n    }\n    return contextValue;\n}\nexport function MessageBounceProvider({ children }) {\n    const { handleRetry: doHandleRetry, message, setEditingState, } = useMessageContext('MessageBounceProvider');\n    if (!isMessageBounced(message)) {\n        console.warn(`The MessageBounceProvider was rendered for a message that is not bounced. Have you missed the \"isMessageBounced\" check?`);\n    }\n    const { removeMessage } = useChannelActionContext('MessageBounceProvider');\n    const handleDelete = useCallback(() => {\n        removeMessage(message);\n    }, [message, removeMessage]);\n    const handleEdit = useCallback((e) => {\n        setEditingState(e);\n    }, [setEditingState]);\n    const handleRetry = useCallback(() => {\n        doHandleRetry(message);\n    }, [doHandleRetry, message]);\n    const value = useMemo(() => ({\n        handleDelete,\n        handleEdit,\n        handleRetry,\n        message,\n    }), [handleDelete, handleEdit, handleRetry, message]);\n    return (React.createElement(MessageBounceContext.Provider, { value: value }, children));\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;;;;;AACA,MAAM,uBAAuB,CAAA,GAAA,6JAAA,CAAA,gBAAa,AAAD,EAAE;AACpC,SAAS,wBAAwB,aAAa;IACjD,MAAM,eAAe,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,EAAE;IAChC,IAAI,CAAC,cAAc;QACf,QAAQ,IAAI,CAAC,CAAC,6HAA6H,EAAE,cAAc,WAAW,CAAC;QACvK,OAAO,CAAC;IACZ;IACA,OAAO;AACX;AACO,SAAS,sBAAsB,EAAE,QAAQ,EAAE;IAC9C,MAAM,EAAE,aAAa,aAAa,EAAE,OAAO,EAAE,eAAe,EAAG,GAAG,CAAA,GAAA,+KAAA,CAAA,oBAAiB,AAAD,EAAE;IACpF,IAAI,CAAC,CAAA,GAAA,oLAAA,CAAA,mBAAgB,AAAD,EAAE,UAAU;QAC5B,QAAQ,IAAI,CAAC,CAAC,uHAAuH,CAAC;IAC1I;IACA,MAAM,EAAE,aAAa,EAAE,GAAG,CAAA,GAAA,qLAAA,CAAA,0BAAuB,AAAD,EAAE;IAClD,MAAM,eAAe,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;2DAAE;YAC7B,cAAc;QAClB;0DAAG;QAAC;QAAS;KAAc;IAC3B,MAAM,aAAa,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;yDAAE,CAAC;YAC5B,gBAAgB;QACpB;wDAAG;QAAC;KAAgB;IACpB,MAAM,cAAc,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;0DAAE;YAC5B,cAAc;QAClB;yDAAG;QAAC;QAAe;KAAQ;IAC3B,MAAM,QAAQ,CAAA,GAAA,6JAAA,CAAA,UAAO,AAAD;gDAAE,IAAM,CAAC;gBACzB;gBACA;gBACA;gBACA;YACJ,CAAC;+CAAG;QAAC;QAAc;QAAY;QAAa;KAAQ;IACpD,OAAQ,6JAAA,CAAA,UAAK,CAAC,aAAa,CAAC,qBAAqB,QAAQ,EAAE;QAAE,OAAO;IAAM,GAAG;AACjF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 444, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Bruce%20Vo/Documents/project/Streaming_Platform/frontend/node_modules/stream-chat-react/dist/context/PollContext.js"],"sourcesContent":["import React, { useContext } from 'react';\nexport const PollContext = React.createContext(undefined);\nexport const PollProvider = ({ children, poll, }) => poll ? (React.createElement(PollContext.Provider, { value: { poll } }, children)) : null;\nexport const usePollContext = () => {\n    const contextValue = useContext(PollContext);\n    return contextValue;\n};\n"],"names":[],"mappings":";;;;;AAAA;;AACO,MAAM,cAAc,6JAAA,CAAA,UAAK,CAAC,aAAa,CAAC;AACxC,MAAM,eAAe,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAG,GAAK,OAAQ,6JAAA,CAAA,UAAK,CAAC,aAAa,CAAC,YAAY,QAAQ,EAAE;QAAE,OAAO;YAAE;QAAK;IAAE,GAAG,YAAa;AAClI,MAAM,iBAAiB;IAC1B,MAAM,eAAe,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,EAAE;IAChC,OAAO;AACX","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 467, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Bruce%20Vo/Documents/project/Streaming_Platform/frontend/node_modules/stream-chat-react/dist/context/MessageInputContext.js"],"sourcesContent":["import React, { createContext, useContext } from 'react';\nexport const MessageInputContext = createContext(undefined);\nexport const MessageInputContextProvider = ({ children, value, }) => (React.createElement(MessageInputContext.Provider, { value: value }, children));\nexport const useMessageInputContext = (\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\ncomponentName) => {\n    const contextValue = useContext(MessageInputContext);\n    if (!contextValue) {\n        return {};\n    }\n    return contextValue;\n};\n"],"names":[],"mappings":";;;;;AAAA;;AACO,MAAM,sBAAsB,CAAA,GAAA,6JAAA,CAAA,gBAAa,AAAD,EAAE;AAC1C,MAAM,8BAA8B,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAG,GAAM,6JAAA,CAAA,UAAK,CAAC,aAAa,CAAC,oBAAoB,QAAQ,EAAE;QAAE,OAAO;IAAM,GAAG;AACnI,MAAM,yBAAyB,CACtC,6DAA6D;AAC7D;IACI,MAAM,eAAe,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,EAAE;IAChC,IAAI,CAAC,cAAc;QACf,OAAO,CAAC;IACZ;IACA,OAAO;AACX","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 492, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Bruce%20Vo/Documents/project/Streaming_Platform/frontend/node_modules/stream-chat-react/dist/context/VirtualizedMessageListContext.js"],"sourcesContent":["import React, { createContext, useContext } from 'react';\nexport const VirtualizedMessageListContext = createContext(undefined);\n/**\n * Context provider for components rendered within the `VirtualizedMessageList`\n */\nexport const VirtualizedMessageListContextProvider = ({ children, value, }) => (React.createElement(VirtualizedMessageListContext.Provider, { value: value }, children));\nexport const useVirtualizedMessageListContext = () => useContext(VirtualizedMessageListContext);\n"],"names":[],"mappings":";;;;;AAAA;;AACO,MAAM,gCAAgC,CAAA,GAAA,6JAAA,CAAA,gBAAa,AAAD,EAAE;AAIpD,MAAM,wCAAwC,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAG,GAAM,6JAAA,CAAA,UAAK,CAAC,aAAa,CAAC,8BAA8B,QAAQ,EAAE;QAAE,OAAO;IAAM,GAAG;AACvJ,MAAM,mCAAmC,IAAM,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,EAAE","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 510, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Bruce%20Vo/Documents/project/Streaming_Platform/frontend/node_modules/stream-chat-react/dist/context/AttachmentSelectorContext.js"],"sourcesContent":["import React, { createContext, useContext } from 'react';\nconst AttachmentSelectorContext = createContext({\n    fileInput: null,\n});\nexport const AttachmentSelectorContextProvider = ({ children, value, }) => (React.createElement(AttachmentSelectorContext.Provider, { value: value }, children));\nexport const useAttachmentSelectorContext = () => useContext(AttachmentSelectorContext);\n"],"names":[],"mappings":";;;;AAAA;;AACA,MAAM,4BAA4B,CAAA,GAAA,6JAAA,CAAA,gBAAa,AAAD,EAAE;IAC5C,WAAW;AACf;AACO,MAAM,oCAAoC,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAG,GAAM,6JAAA,CAAA,UAAK,CAAC,aAAa,CAAC,0BAA0B,QAAQ,EAAE;QAAE,OAAO;IAAM,GAAG;AAC/I,MAAM,+BAA+B,IAAM,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,EAAE","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 529, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Bruce%20Vo/Documents/project/Streaming_Platform/frontend/node_modules/stream-chat-react/dist/constants/limits.js"],"sourcesContent":["export const DEFAULT_INITIAL_CHANNEL_PAGE_SIZE = 25;\nexport const DEFAULT_NEXT_CHANNEL_PAGE_SIZE = 100;\nexport const DEFAULT_JUMP_TO_PAGE_SIZE = 100;\nexport const DEFAULT_THREAD_PAGE_SIZE = 50;\nexport const DEFAULT_LOAD_PAGE_SCROLL_THRESHOLD = 250;\nexport const DEFAULT_UPLOAD_SIZE_LIMIT_BYTES = 100 * 1024 * 1024; // 100 MB\nexport const DEFAULT_HIGHLIGHT_DURATION = 500;\n"],"names":[],"mappings":";;;;;;;;;AAAO,MAAM,oCAAoC;AAC1C,MAAM,iCAAiC;AACvC,MAAM,4BAA4B;AAClC,MAAM,2BAA2B;AACjC,MAAM,qCAAqC;AAC3C,MAAM,kCAAkC,MAAM,OAAO,MAAM,SAAS;AACpE,MAAM,6BAA6B","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 551, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Bruce%20Vo/Documents/project/Streaming_Platform/frontend/node_modules/stream-chat-react/dist/constants/messageTypes.js"],"sourcesContent":["export const CUSTOM_MESSAGE_TYPE = {\n    date: 'message.date',\n    intro: 'channel.intro',\n};\n"],"names":[],"mappings":";;;AAAO,MAAM,sBAAsB;IAC/B,MAAM;IACN,OAAO;AACX","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 564, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Bruce%20Vo/Documents/project/Streaming_Platform/frontend/node_modules/stream-chat-react/dist/utils/getChannel.js"],"sourcesContent":["/**\n * prevent from duplicate invocation of channel.watch()\n * when events 'notification.message_new' and 'notification.added_to_channel' arrive at the same time\n */\nconst WATCH_QUERY_IN_PROGRESS_FOR_CHANNEL = {};\n/**\n * Calls channel.watch() if it was not already recently called. Waits for watch promise to resolve even if it was invoked previously.\n * @param client\n * @param members\n * @param options\n * @param type\n * @param id\n * @param channel\n */\nexport const getChannel = async ({ channel, client, id, members, options, type, }) => {\n    if (!channel && !type) {\n        throw new Error('Channel or channel type have to be provided to query a channel.');\n    }\n    // unfortunately typescript is not able to infer that if (!channel && !type) === false, then channel or type has to be truthy\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const theChannel = channel || client.channel(type, id, { members });\n    // need to keep as with call to channel.watch the id can be changed from undefined to an actual ID generated server-side\n    const originalCid = theChannel?.id\n        ? theChannel.cid\n        : members && members.length\n            ? generateChannelTempCid(theChannel.type, members)\n            : undefined;\n    if (!originalCid) {\n        throw new Error('Channel ID or channel members array have to be provided to query a channel.');\n    }\n    const queryPromise = WATCH_QUERY_IN_PROGRESS_FOR_CHANNEL[originalCid];\n    if (queryPromise) {\n        await queryPromise;\n    }\n    else {\n        try {\n            WATCH_QUERY_IN_PROGRESS_FOR_CHANNEL[originalCid] = theChannel.watch(options);\n            await WATCH_QUERY_IN_PROGRESS_FOR_CHANNEL[originalCid];\n        }\n        finally {\n            delete WATCH_QUERY_IN_PROGRESS_FOR_CHANNEL[originalCid];\n        }\n    }\n    return theChannel;\n};\n// Channels created without ID need to be referenced by an identifier until the back-end generates the final ID.\nconst generateChannelTempCid = (channelType, members) => {\n    if (!members)\n        return;\n    const membersStr = [...members].sort().join(',');\n    return `${channelType}:!members-${membersStr}`;\n};\n"],"names":[],"mappings":"AAAA;;;CAGC;;;AACD,MAAM,sCAAsC,CAAC;AAUtC,MAAM,aAAa,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAG;IAC7E,IAAI,CAAC,WAAW,CAAC,MAAM;QACnB,MAAM,IAAI,MAAM;IACpB;IACA,6HAA6H;IAC7H,oEAAoE;IACpE,MAAM,aAAa,WAAW,OAAO,OAAO,CAAC,MAAM,IAAI;QAAE;IAAQ;IACjE,wHAAwH;IACxH,MAAM,cAAc,YAAY,KAC1B,WAAW,GAAG,GACd,WAAW,QAAQ,MAAM,GACrB,uBAAuB,WAAW,IAAI,EAAE,WACxC;IACV,IAAI,CAAC,aAAa;QACd,MAAM,IAAI,MAAM;IACpB;IACA,MAAM,eAAe,mCAAmC,CAAC,YAAY;IACrE,IAAI,cAAc;QACd,MAAM;IACV,OACK;QACD,IAAI;YACA,mCAAmC,CAAC,YAAY,GAAG,WAAW,KAAK,CAAC;YACpE,MAAM,mCAAmC,CAAC,YAAY;QAC1D,SACQ;YACJ,OAAO,mCAAmC,CAAC,YAAY;QAC3D;IACJ;IACA,OAAO;AACX;AACA,gHAAgH;AAChH,MAAM,yBAAyB,CAAC,aAAa;IACzC,IAAI,CAAC,SACD;IACJ,MAAM,aAAa;WAAI;KAAQ,CAAC,IAAI,GAAG,IAAI,CAAC;IAC5C,OAAO,GAAG,YAAY,UAAU,EAAE,YAAY;AAClD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 612, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Bruce%20Vo/Documents/project/Streaming_Platform/frontend/node_modules/stream-chat-react/dist/utils/getWholeChar.js"],"sourcesContent":["// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/charAt#getting_whole_characters\nexport const getWholeChar = (str, i) => {\n    const code = str.charCodeAt(i);\n    if (Number.isNaN(code))\n        return '';\n    if (code < 0xd800 || code > 0xdfff)\n        return str.charAt(i);\n    if (0xd800 <= code && code <= 0xdbff) {\n        if (str.length <= i + 1) {\n            throw 'High surrogate without following low surrogate';\n        }\n        const next = str.charCodeAt(i + 1);\n        if (0xdc00 > next || next > 0xdfff) {\n            throw 'High surrogate without following low surrogate';\n        }\n        return str.charAt(i) + str.charAt(i + 1);\n    }\n    if (i === 0) {\n        throw 'Low surrogate without preceding high surrogate';\n    }\n    const prev = str.charCodeAt(i - 1);\n    if (0xd800 > prev || prev > 0xdbff) {\n        throw 'Low surrogate without preceding high surrogate';\n    }\n    return '';\n};\n"],"names":[],"mappings":"AAAA,0HAA0H;;;;AACnH,MAAM,eAAe,CAAC,KAAK;IAC9B,MAAM,OAAO,IAAI,UAAU,CAAC;IAC5B,IAAI,OAAO,KAAK,CAAC,OACb,OAAO;IACX,IAAI,OAAO,UAAU,OAAO,QACxB,OAAO,IAAI,MAAM,CAAC;IACtB,IAAI,UAAU,QAAQ,QAAQ,QAAQ;QAClC,IAAI,IAAI,MAAM,IAAI,IAAI,GAAG;YACrB,MAAM;QACV;QACA,MAAM,OAAO,IAAI,UAAU,CAAC,IAAI;QAChC,IAAI,SAAS,QAAQ,OAAO,QAAQ;YAChC,MAAM;QACV;QACA,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,MAAM,CAAC,IAAI;IAC1C;IACA,IAAI,MAAM,GAAG;QACT,MAAM;IACV;IACA,MAAM,OAAO,IAAI,UAAU,CAAC,IAAI;IAChC,IAAI,SAAS,QAAQ,OAAO,QAAQ;QAChC,MAAM;IACV;IACA,OAAO;AACX","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 645, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Bruce%20Vo/Documents/project/Streaming_Platform/frontend/node_modules/stream-chat-react/dist/utils/deprecationWarning.js"],"sourcesContent":["export const deprecationAndReplacementWarning = (pairs, component) => {\n    pairs.forEach((data) => {\n        const [[oldName, oldValue], [newName, newValue]] = [\n            Object.entries(data[0])[0],\n            Object.entries(data[1])[0],\n        ];\n        if ((typeof oldValue !== 'undefined' && typeof newValue === 'undefined') ||\n            (typeof oldValue !== 'undefined' && typeof newValue !== 'undefined')) {\n            console.warn(`[Deprecation notice (${component})]: prefer using prop ${newName} instead of ${oldName}`);\n        }\n    });\n};\n"],"names":[],"mappings":";;;AAAO,MAAM,mCAAmC,CAAC,OAAO;IACpD,MAAM,OAAO,CAAC,CAAC;QACX,MAAM,CAAC,CAAC,SAAS,SAAS,EAAE,CAAC,SAAS,SAAS,CAAC,GAAG;YAC/C,OAAO,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE;YAC1B,OAAO,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE;SAC7B;QACD,IAAI,AAAC,OAAO,aAAa,eAAe,OAAO,aAAa,eACvD,OAAO,aAAa,eAAe,OAAO,aAAa,aAAc;YACtE,QAAQ,IAAI,CAAC,CAAC,qBAAqB,EAAE,UAAU,sBAAsB,EAAE,QAAQ,YAAY,EAAE,SAAS;QAC1G;IACJ;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 665, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Bruce%20Vo/Documents/project/Streaming_Platform/frontend/node_modules/stream-chat-react/dist/utils/mergeDeep.js"],"sourcesContent":["import mergeWith from 'lodash.mergewith';\nconst overrideEverything = (_, source) => source;\nexport const mergeDeep = (target, source) => mergeWith(target, source, overrideEverything);\nconst overrideUndefinedOnly = (object, source) => object ?? source;\nexport const mergeDeepUndefined = (target, source) => mergeWith(target, source, overrideUndefinedOnly);\n"],"names":[],"mappings":";;;;AAAA;;AACA,MAAM,qBAAqB,CAAC,GAAG,SAAW;AACnC,MAAM,YAAY,CAAC,QAAQ,SAAW,CAAA,GAAA,+IAAA,CAAA,UAAS,AAAD,EAAE,QAAQ,QAAQ;AACvE,MAAM,wBAAwB,CAAC,QAAQ,SAAW,UAAU;AACrD,MAAM,qBAAqB,CAAC,QAAQ,SAAW,CAAA,GAAA,+IAAA,CAAA,UAAS,AAAD,EAAE,QAAQ,QAAQ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 681, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Bruce%20Vo/Documents/project/Streaming_Platform/frontend/node_modules/stream-chat-react/dist/store/hooks/useStateStore.js"],"sourcesContent":["import { useCallback, useMemo } from 'react';\nimport { useSyncExternalStore } from 'use-sync-external-store/shim';\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nconst noop = () => { };\nexport function useStateStore(store, selector) {\n    const wrappedSubscription = useCallback((onStoreChange) => {\n        const unsubscribe = store?.subscribeWithSelector(selector, onStoreChange);\n        return unsubscribe ?? noop;\n    }, [store, selector]);\n    const wrappedSnapshot = useMemo(() => {\n        let cachedTuple;\n        return () => {\n            const currentValue = store?.getLatestValue();\n            if (!currentValue)\n                return undefined;\n            // store value hasn't changed, no need to compare individual values\n            if (cachedTuple && cachedTuple[0] === currentValue) {\n                return cachedTuple[1];\n            }\n            const newlySelected = selector(currentValue);\n            // store value changed but selected values wouldn't have to, double-check selected\n            if (cachedTuple) {\n                let selectededAreEqualToCached = true;\n                for (const key in cachedTuple[1]) {\n                    if (cachedTuple[1][key] === newlySelected[key])\n                        continue;\n                    selectededAreEqualToCached = false;\n                    break;\n                }\n                if (selectededAreEqualToCached)\n                    return cachedTuple[1];\n            }\n            cachedTuple = [currentValue, newlySelected];\n            return cachedTuple[1];\n        };\n    }, [store, selector]);\n    const state = useSyncExternalStore(wrappedSubscription, wrappedSnapshot);\n    return state;\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AACA,gEAAgE;AAChE,MAAM,OAAO,KAAQ;AACd,SAAS,cAAc,KAAK,EAAE,QAAQ;IACzC,MAAM,sBAAsB,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;0DAAE,CAAC;YACrC,MAAM,cAAc,OAAO,sBAAsB,UAAU;YAC3D,OAAO,eAAe;QAC1B;yDAAG;QAAC;QAAO;KAAS;IACpB,MAAM,kBAAkB,CAAA,GAAA,6JAAA,CAAA,UAAO,AAAD;kDAAE;YAC5B,IAAI;YACJ;0DAAO;oBACH,MAAM,eAAe,OAAO;oBAC5B,IAAI,CAAC,cACD,OAAO;oBACX,mEAAmE;oBACnE,IAAI,eAAe,WAAW,CAAC,EAAE,KAAK,cAAc;wBAChD,OAAO,WAAW,CAAC,EAAE;oBACzB;oBACA,MAAM,gBAAgB,SAAS;oBAC/B,kFAAkF;oBAClF,IAAI,aAAa;wBACb,IAAI,6BAA6B;wBACjC,IAAK,MAAM,OAAO,WAAW,CAAC,EAAE,CAAE;4BAC9B,IAAI,WAAW,CAAC,EAAE,CAAC,IAAI,KAAK,aAAa,CAAC,IAAI,EAC1C;4BACJ,6BAA6B;4BAC7B;wBACJ;wBACA,IAAI,4BACA,OAAO,WAAW,CAAC,EAAE;oBAC7B;oBACA,cAAc;wBAAC;wBAAc;qBAAc;oBAC3C,OAAO,WAAW,CAAC,EAAE;gBACzB;;QACJ;iDAAG;QAAC;QAAO;KAAS;IACpB,MAAM,QAAQ,CAAA,GAAA,oKAAA,CAAA,uBAAoB,AAAD,EAAE,qBAAqB;IACxD,OAAO;AACX","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 743, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Bruce%20Vo/Documents/project/Streaming_Platform/frontend/node_modules/stream-chat-react/dist/experimental/Search/hooks/useSearchFocusedMessage.js"],"sourcesContent":["import { useChatContext } from '../../../context';\nimport { useStateStore } from '../../../store';\nconst searchControllerStateSelector = (nextValue) => ({\n    focusedMessage: nextValue.focusedMessage,\n});\nexport const useSearchFocusedMessage = () => {\n    const { searchController } = useChatContext('Channel');\n    const { focusedMessage } = useStateStore(searchController._internalState, searchControllerStateSelector);\n    return focusedMessage;\n};\n"],"names":[],"mappings":";;;AAAA;AACA;;;AACA,MAAM,gCAAgC,CAAC,YAAc,CAAC;QAClD,gBAAgB,UAAU,cAAc;IAC5C,CAAC;AACM,MAAM,0BAA0B;IACnC,MAAM,EAAE,gBAAgB,EAAE,GAAG,CAAA,GAAA,4KAAA,CAAA,iBAAc,AAAD,EAAE;IAC5C,MAAM,EAAE,cAAc,EAAE,GAAG,CAAA,GAAA,qLAAA,CAAA,gBAAa,AAAD,EAAE,iBAAiB,cAAc,EAAE;IAC1E,OAAO;AACX","ignoreList":[0],"debugId":null}}]
}