{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Bruce%20Vo/Documents/project/Streaming_Platform/frontend/lib/api.ts"],"sourcesContent":["const BASE_URL = process.env.NEXT_PUBLIC_API_URL || 'http://localhost:5001/api';\r\n\r\ninterface ApiResponse<T = any> {\r\n    success: boolean;\r\n    message?: string;\r\n    user?: T;\r\n    token?: string;\r\n}\r\n\r\ninterface SignupData {\r\n    fullName: string;\r\n    email: string;\r\n    password: string;\r\n}\r\n\r\ninterface LoginData {\r\n    email: string;\r\n    password: string;\r\n}\r\n\r\ninterface OnboardingData {\r\n    fullName: string;\r\n    bio: string;\r\n    nativeLanguage: string;\r\n    learningLanguage: string;\r\n    location: string;\r\n    profilePic: string;\r\n}\r\n\r\nconst makeAuthenticationRequest = async (\r\n    endpoint: string, \r\n    options: RequestInit = {}\r\n): Promise<Response> => {\r\n    const token = localStorage.getItem('auth_token');\r\n\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        ...(token && { Authorization: `Bearer ${token}` }),\r\n        ...options.headers,\r\n    };\r\n\r\n    return fetch(`${BASE_URL}${endpoint}`, {\r\n        ...options,\r\n        headers,\r\n    });\r\n}\r\n\r\nexport const signUp = async (signUpData: SignupData): Promise<ApiResponse> => {\r\n    try {\r\n        const response = await fetch(`${BASE_URL}/auth/sign-up`, {\r\n            method: 'POST',\r\n            body: JSON.stringify(signUpData),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        });\r\n\r\n        const data = await response.json();\r\n        return data;\r\n    } catch (error: any) {\r\n        console.error('Signup error:', error);\r\n        return {\r\n            success: false,\r\n            message: 'Network error occurred with signUp function in api.ts'\r\n        };\r\n    }\r\n}\r\n\r\nexport const signIn = async (loginData: LoginData): Promise<ApiResponse> => {\r\n    try {\r\n        const response = await fetch(`${BASE_URL}/auth/sign-in`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(loginData),\r\n        });\r\n\r\n        const data = await response.json();\r\n        return data;\r\n    } catch (error: any) {\r\n        console.error('Login error in api.ts:', error);\r\n        return {\r\n            success: false,\r\n            message: 'Something wrong with signIn function in api.ts'\r\n        };\r\n    }\r\n};\r\n\r\nexport const getAuthUser = async (): Promise<ApiResponse | null> => {\r\n    try {\r\n        const response = await makeAuthenticationRequest(\"/auth/me\");\r\n        if (!response.ok) {\r\n            return null;\r\n        }\r\n\r\n        const data = await response.json();\r\n        return data;\r\n\r\n    } catch (error) {\r\n        console.error('Get auth user error in api.ts:', error);\r\n        return null;\r\n    }\r\n}\r\n\r\nexport const completeOnBoarding = async (userData: OnboardingData): Promise<ApiResponse> => {\r\n    try {\r\n        const response = await makeAuthenticationRequest('/auth/onBoarding', {\r\n            method: 'POST',\r\n            body: JSON.stringify(userData),\r\n        });\r\n\r\n        const data = await response.json();\r\n        return data;\r\n    } catch (error) {\r\n        console.error(\"Onboarding error in api.ts: \", error);\r\n        return {\r\n            success: false,\r\n            message: \"Internal error in Onboarding in api.ts\"\r\n        }\r\n    }\r\n}\r\n\r\nexport async function getUserFriends(): Promise<any[]> {\r\n    try {\r\n        const response = await makeAuthenticationRequest('/users/friends');\r\n        if (!response.ok) {\r\n            throw new Error('Failed to fetch friends');\r\n        }\r\n\r\n        const data = await response.json();\r\n        return data;\r\n    } catch (error: any) {\r\n        console.error('Get friends error:', error);\r\n        throw error;\r\n    };\r\n}\r\n\r\nexport async function getRecommendedUsers(): Promise<any[]> {\r\n    try {\r\n        const response = await makeAuthenticationRequest('/users/');\r\n        \r\n        if (!response.ok) {\r\n            throw new Error('Failed to fetch recommended users');\r\n        }\r\n        \r\n        const data = await response.json();\r\n        return data;\r\n    } catch (error) {\r\n        console.error('Get recommended users error:', error);\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport async function getOutgoingFriendReqs(): Promise<any[]> {\r\n    try {\r\n        const response = await makeAuthenticationRequest('/users/outgoing-friend-requests');\r\n        \r\n        if (!response.ok) {\r\n            throw new Error('Failed to fetch outgoing requests');\r\n        }\r\n        \r\n        const data = await response.json();\r\n        return data;\r\n    } catch (error) {\r\n        console.error('Get outgoing requests error:', error);\r\n        throw error;\r\n    }\r\n}\r\n\r\n\r\nexport async function sendFriendRequest(userId: string): Promise<any> {\r\n    try {\r\n        const response = await makeAuthenticationRequest(`/users/friend-request/${userId}`, {\r\n            method: 'POST',\r\n        });\r\n        \r\n        if (!response.ok) {\r\n            throw new Error('Failed to send friend request');\r\n        }\r\n        \r\n        const data = await response.json();\r\n        return data;\r\n    } catch (error) {\r\n        console.error('Send friend request error:', error);\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport async function getFriendRequests(): Promise<any> {\r\n    try {\r\n        console.log('üåê Making API call to /users/friend-requests');\r\n        \r\n        const response = await makeAuthenticationRequest('/users/friend-requests');\r\n        console.log('üì° Response status:', response.status);\r\n        \r\n        if (!response.ok) {\r\n            console.error('‚ùå Response not OK:', response.status, response.statusText);\r\n            throw new Error('Failed to fetch friend requests');\r\n        }\r\n        \r\n        const data = await response.json();\r\n        console.log('üì¶ Raw API response:', data);\r\n        \r\n        // Check backend response structure\r\n        const result = {\r\n            incomingRequests: data.incomingRequests || data.incomingReqs || [],\r\n            acceptedRequests: data.acceptedRequests || data.acceptedReqs || []\r\n        };\r\n        \r\n        console.log('üîÑ Mapped result:', result);\r\n        return result;\r\n    } catch (error) {\r\n        console.error('‚ùå Get friend requests error:', error);\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport async function acceptFriendRequest(requestId: string): Promise<any> {\r\n    try {\r\n        console.log('üîÑ Accepting friend request:', requestId);\r\n        \r\n        const response = await makeAuthenticationRequest(`/users/friend-request/${requestId}/accept`, {\r\n            method: 'PUT',\r\n        });\r\n        \r\n        console.log('üì° Accept response status:', response.status);\r\n        \r\n        if (!response.ok) {\r\n            const errorData = await response.json();\r\n            console.error('‚ùå Accept failed:', errorData);\r\n            throw new Error(errorData.message || 'Failed to accept friend request');\r\n        }\r\n        \r\n        const data = await response.json();\r\n        console.log('‚úÖ Accept success:', data);\r\n        return data;\r\n    } catch (error) {\r\n        console.error('‚ùå Accept friend request error:', error);\r\n        throw error;\r\n    }\r\n}\r\n\r\n// Chat APIs\r\nexport async function getStreamToken(): Promise<any> {\r\n    try {\r\n        console.log('üîÑ Requesting Stream token...');\r\n        \r\n        const response = await makeAuthenticationRequest('/chat/token');\r\n        \r\n        console.log('üì° Response status:', response.status);\r\n        \r\n        if (!response.ok) {\r\n            const errorData = await response.json();\r\n            console.error('‚ùå Token request failed:', errorData);\r\n            throw new Error(errorData.message || 'Failed to get stream token in frontend api.ts');\r\n        }\r\n        \r\n        const data = await response.json();\r\n        console.log('‚úÖ Stream token received:', data);\r\n        return data;\r\n    } catch (error) {\r\n        console.error('‚ùå Get stream token error in the frontend:', error);\r\n        throw error;\r\n    }\r\n}\r\n\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 228, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Bruce%20Vo/Documents/project/Streaming_Platform/frontend/app/%28protected%29/call/%5Bid%5D/page.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport { useRouter, useParams } from \"next/navigation\";\r\nimport { useAuth } from \"@/contexts/AuthContext\";\r\nimport { getStreamToken } from \"@/lib/api\";\r\nimport {\r\n    StreamVideo,\r\n    StreamVideoClient,\r\n    StreamCall,\r\n    CallControls,\r\n    SpeakerLayout,\r\n    StreamTheme,\r\n    CallingState,\r\n    useCallStateHooks,\r\n} from \"@stream-io/video-react-sdk\";\r\nimport toast from \"react-hot-toast\";\r\nimport PageLoader from \"@/components/ui/PageLoader\";\r\n\r\n// Import Stream Video CSS\r\nimport \"@stream-io/video-react-sdk/dist/css/styles.css\";\r\n\r\nconst STREAM_API_KEY = process.env.NEXT_PUBLIC_STREAM_API_KEY;\r\n\r\nexport default function CallPage() {\r\n    const params = useParams();\r\n    const callId = params.id as string;\r\n    const router = useRouter();\r\n\r\n    const [client, setClient] = useState<StreamVideoClient | null>(null);\r\n    const [call, setCall] = useState<any>(null);\r\n    const [isConnecting, setIsConnecting] = useState(true);\r\n    const [tokenData, setTokenData] = useState<any>(null);\r\n\r\n    const { user: authUser, isLoading: authLoading } = useAuth();\r\n\r\n    // Fetch Stream token\r\n    useEffect(() => {\r\n        if (!authUser || !STREAM_API_KEY) return;\r\n\r\n        const fetchToken = async () => {\r\n            try {\r\n                console.log('üîë Fetching Stream token for video call...');\r\n                const response = await getStreamToken();\r\n                setTokenData(response);\r\n                console.log('‚úÖ Stream token received for video');\r\n            } catch (error) {\r\n                console.error('‚ùå Error fetching video token:', error);\r\n                toast.error('Failed to get video token');\r\n                setIsConnecting(false);\r\n            }\r\n        };\r\n\r\n        fetchToken();\r\n    }, [authUser]);\r\n\r\n    // Initialize video call\r\n    useEffect(() => {\r\n        const initCall = async () => {\r\n            if (!tokenData?.token || !authUser || !callId || !STREAM_API_KEY) {\r\n                console.log('‚è≥ Waiting for video call dependencies...', {\r\n                    hasToken: !!tokenData?.token,\r\n                    hasAuthUser: !!authUser,\r\n                    hasCallId: !!callId,\r\n                    hasApiKey: !!STREAM_API_KEY\r\n                });\r\n                return;\r\n            }\r\n\r\n            try {\r\n                console.log(\"üé• Initializing Stream video client...\");\r\n\r\n                const user = {\r\n                    id: authUser._id,\r\n                    name: authUser.fullName,\r\n                    image: authUser.profilePic,\r\n                };\r\n\r\n                const videoClient = new StreamVideoClient({\r\n                    apiKey: STREAM_API_KEY,\r\n                    user,\r\n                    token: tokenData.token,\r\n                });\r\n\r\n                console.log('üìû Creating call instance:', callId);\r\n                const callInstance = videoClient.call(\"default\", callId);\r\n\r\n                console.log('üîÑ Joining call...');\r\n                await callInstance.join({ create: true });\r\n\r\n                console.log('‚úÖ Joined call successfully');\r\n                toast.success('Connected to video call!');\r\n\r\n                setClient(videoClient);\r\n                setCall(callInstance);\r\n            } catch (error) {\r\n                console.error(\"‚ùå Error joining call:\", error);\r\n                toast.error(\"Could not join the call. Please try again.\");\r\n\r\n                // Redirect back after error\r\n                setTimeout(() => {\r\n                    router.push('/');\r\n                }, 3000);\r\n            } finally {\r\n                setIsConnecting(false);\r\n            }\r\n        };\r\n\r\n        initCall();\r\n\r\n        // Cleanup function\r\n        return () => {\r\n            if (call) {\r\n                console.log('üßπ Leaving call...');\r\n                call.leave();\r\n            }\r\n            if (client) {\r\n                console.log('üßπ Disconnecting video client...');\r\n                client.disconnectUser();\r\n            }\r\n        };\r\n    }, [tokenData, authUser, callId, router]);\r\n\r\n    // Loading states\r\n    if (authLoading || isConnecting) {\r\n        return <PageLoader />;\r\n    }\r\n\r\n    // Error state\r\n    if (!STREAM_API_KEY) {\r\n        return (\r\n            <div className=\"h-screen flex items-center justify-center bg-base-100\">\r\n                <div className=\"text-center\">\r\n                    <h2 className=\"text-xl font-semibold mb-2\">Configuration Error</h2>\r\n                    <p className=\"text-base-content opacity-70 mb-4\">\r\n                        Stream API key is not configured for video calls\r\n                    </p>\r\n                    <button\r\n                        onClick={() => router.push('/')}\r\n                        className=\"btn btn-primary\"\r\n                    >\r\n                        Go Back Home\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    // Call interface\r\n    return (\r\n        <div className=\"h-screen w-screen bg-black relative overflow-hidden\">\r\n            {client && call ? (\r\n                <StreamVideo client={client}>\r\n                    <StreamCall call={call}>\r\n                        <CallContent />\r\n                    </StreamCall>\r\n                </StreamVideo>\r\n            ) : (\r\n                <div className=\"h-full flex items-center justify-center text-white\">\r\n                    <div className=\"text-center\">\r\n                        <div className=\"loading loading-spinner loading-lg mb-4\"></div>\r\n                        <p className=\"text-lg\">Could not initialize call</p>\r\n                        <p className=\"text-sm opacity-70 mb-4\">Please refresh or try again later</p>\r\n                        <button\r\n                            onClick={() => router.push('/')}\r\n                            className=\"btn btn-outline btn-sm\"\r\n                        >\r\n                            Go Back Home\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\n// Call Content Component\r\nconst CallContent = () => {\r\n    const { useCallCallingState } = useCallStateHooks();\r\n    const callingState = useCallCallingState();\r\n    const router = useRouter();\r\n\r\n    // Handle call end\r\n    useEffect(() => {\r\n        if (callingState === CallingState.LEFT) {\r\n            console.log('üìû Call ended, redirecting home...');\r\n            toast.success('Call ended');\r\n            router.push('/');\r\n        }\r\n    }, [callingState, router]);\r\n\r\n    if (callingState === CallingState.LEFT) {\r\n        return (\r\n            <div className=\"h-screen flex items-center justify-center bg-base-100\">\r\n                <div className=\"text-center\">\r\n                    <h2 className=\"text-xl font-semibold mb-2\">Call Ended</h2>\r\n                    <p className=\"text-base-content opacity-70 mb-4\">\r\n                        Redirecting you back...\r\n                    </p>\r\n                    <div className=\"loading loading-spinner loading-lg\"></div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <StreamTheme className=\"h-full\">\r\n            <div className=\"relative h-full\">\r\n                <SpeakerLayout />\r\n                <div className=\"absolute bottom-6 left-1/2 transform -translate-x-1/2 z-10\">\r\n                    <CallControls />\r\n                </div>\r\n            </div>\r\n        </StreamTheme>\r\n    );\r\n};"],"names":[],"mappings":";;;AAsBuB;;AApBvB;AACA;AACA;AACA;AACA;AAAA;AAAA;AAUA;AACA;;;AAjBA;;;;;;;;;AAsBA,MAAM;AAES,SAAS;;IACpB,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,SAAS,OAAO,EAAE;IACxB,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IAEvB,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAA4B;IAC/D,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAO;IACtC,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACjD,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAO;IAEhD,MAAM,EAAE,MAAM,QAAQ,EAAE,WAAW,WAAW,EAAE,GAAG,CAAA,GAAA,2HAAA,CAAA,UAAO,AAAD;IAEzD,qBAAqB;IACrB,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;8BAAE;YACN,IAAI,CAAC,YAAY,CAAC,gBAAgB;YAElC,MAAM;iDAAa;oBACf,IAAI;wBACA,QAAQ,GAAG,CAAC;wBACZ,MAAM,WAAW,MAAM,CAAA,GAAA,6GAAA,CAAA,iBAAc,AAAD;wBACpC,aAAa;wBACb,QAAQ,GAAG,CAAC;oBAChB,EAAE,OAAO,OAAO;wBACZ,QAAQ,KAAK,CAAC,iCAAiC;wBAC/C,0JAAA,CAAA,UAAK,CAAC,KAAK,CAAC;wBACZ,gBAAgB;oBACpB;gBACJ;;YAEA;QACJ;6BAAG;QAAC;KAAS;IAEb,wBAAwB;IACxB,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;8BAAE;YACN,MAAM;+CAAW;oBACb,IAAI,CAAC,WAAW,SAAS,CAAC,YAAY,CAAC,UAAU,CAAC,gBAAgB;wBAC9D,QAAQ,GAAG,CAAC,4CAA4C;4BACpD,UAAU,CAAC,CAAC,WAAW;4BACvB,aAAa,CAAC,CAAC;4BACf,WAAW,CAAC,CAAC;4BACb,WAAW,CAAC,CAAC;wBACjB;wBACA;oBACJ;oBAEA,IAAI;wBACA,QAAQ,GAAG,CAAC;wBAEZ,MAAM,OAAO;4BACT,IAAI,SAAS,GAAG;4BAChB,MAAM,SAAS,QAAQ;4BACvB,OAAO,SAAS,UAAU;wBAC9B;wBAEA,MAAM,cAAc,IAAI,sMAAA,CAAA,oBAAiB,CAAC;4BACtC,QAAQ;4BACR;4BACA,OAAO,UAAU,KAAK;wBAC1B;wBAEA,QAAQ,GAAG,CAAC,8BAA8B;wBAC1C,MAAM,eAAe,YAAY,IAAI,CAAC,WAAW;wBAEjD,QAAQ,GAAG,CAAC;wBACZ,MAAM,aAAa,IAAI,CAAC;4BAAE,QAAQ;wBAAK;wBAEvC,QAAQ,GAAG,CAAC;wBACZ,0JAAA,CAAA,UAAK,CAAC,OAAO,CAAC;wBAEd,UAAU;wBACV,QAAQ;oBACZ,EAAE,OAAO,OAAO;wBACZ,QAAQ,KAAK,CAAC,yBAAyB;wBACvC,0JAAA,CAAA,UAAK,CAAC,KAAK,CAAC;wBAEZ,4BAA4B;wBAC5B;2DAAW;gCACP,OAAO,IAAI,CAAC;4BAChB;0DAAG;oBACP,SAAU;wBACN,gBAAgB;oBACpB;gBACJ;;YAEA;YAEA,mBAAmB;YACnB;sCAAO;oBACH,IAAI,MAAM;wBACN,QAAQ,GAAG,CAAC;wBACZ,KAAK,KAAK;oBACd;oBACA,IAAI,QAAQ;wBACR,QAAQ,GAAG,CAAC;wBACZ,OAAO,cAAc;oBACzB;gBACJ;;QACJ;6BAAG;QAAC;QAAW;QAAU;QAAQ;KAAO;IAExC,iBAAiB;IACjB,IAAI,eAAe,cAAc;QAC7B,qBAAO,6LAAC,kIAAA,CAAA,UAAU;;;;;IACtB;IAEA,cAAc;IACd,uCAAqB;;IAiBrB;IAEA,iBAAiB;IACjB,qBACI,6LAAC;QAAI,WAAU;kBACV,UAAU,qBACP,6LAAC,iMAAA,CAAA,cAAW;YAAC,QAAQ;sBACjB,cAAA,6LAAC,iMAAA,CAAA,aAAU;gBAAC,MAAM;0BACd,cAAA,6LAAC;;;;;;;;;;;;;;iCAIT,6LAAC;YAAI,WAAU;sBACX,cAAA,6LAAC;gBAAI,WAAU;;kCACX,6LAAC;wBAAI,WAAU;;;;;;kCACf,6LAAC;wBAAE,WAAU;kCAAU;;;;;;kCACvB,6LAAC;wBAAE,WAAU;kCAA0B;;;;;;kCACvC,6LAAC;wBACG,SAAS,IAAM,OAAO,IAAI,CAAC;wBAC3B,WAAU;kCACb;;;;;;;;;;;;;;;;;;;;;;AAQzB;GAtJwB;;QACL,qIAAA,CAAA,YAAS;QAET,qIAAA,CAAA,YAAS;QAO2B,2HAAA,CAAA,UAAO;;;KAVtC;AAwJxB,yBAAyB;AACzB,MAAM,cAAc;;IAChB,MAAM,EAAE,mBAAmB,EAAE,GAAG,CAAA,GAAA,sLAAA,CAAA,oBAAiB,AAAD;IAChD,MAAM,eAAe;IACrB,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IAEvB,kBAAkB;IAClB,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;iCAAE;YACN,IAAI,iBAAiB,sMAAA,CAAA,eAAY,CAAC,IAAI,EAAE;gBACpC,QAAQ,GAAG,CAAC;gBACZ,0JAAA,CAAA,UAAK,CAAC,OAAO,CAAC;gBACd,OAAO,IAAI,CAAC;YAChB;QACJ;gCAAG;QAAC;QAAc;KAAO;IAEzB,IAAI,iBAAiB,sMAAA,CAAA,eAAY,CAAC,IAAI,EAAE;QACpC,qBACI,6LAAC;YAAI,WAAU;sBACX,cAAA,6LAAC;gBAAI,WAAU;;kCACX,6LAAC;wBAAG,WAAU;kCAA6B;;;;;;kCAC3C,6LAAC;wBAAE,WAAU;kCAAoC;;;;;;kCAGjD,6LAAC;wBAAI,WAAU;;;;;;;;;;;;;;;;;IAI/B;IAEA,qBACI,6LAAC,iMAAA,CAAA,cAAW;QAAC,WAAU;kBACnB,cAAA,6LAAC;YAAI,WAAU;;8BACX,6LAAC,iMAAA,CAAA,gBAAa;;;;;8BACd,6LAAC;oBAAI,WAAU;8BACX,cAAA,6LAAC,iMAAA,CAAA,eAAY;;;;;;;;;;;;;;;;;;;;;AAKjC;IAtCM;;QAC8B,sLAAA,CAAA,oBAAiB;QAElC,qIAAA,CAAA,YAAS;;;MAHtB","debugId":null}}]
}