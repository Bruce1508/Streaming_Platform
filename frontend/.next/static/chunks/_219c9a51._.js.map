{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Bruce%20Vo/Documents/project/linguex/Streaming_Platform/frontend/lib/api.ts"],"sourcesContent":["// lib/api.ts - SECURE CENTRALIZED API CLIENT\nimport axios, { AxiosInstance, AxiosRequestConfig, AxiosResponse } from 'axios';\nimport { getSession } from 'next-auth/react';\n\n// ===== API CLIENT CONFIGURATION =====\nconst BASE_URL = process.env.NEXT_PUBLIC_API_URL || 'http://localhost:5001/api';\n\n// Create axios instance\nconst apiClient: AxiosInstance = axios.create({\n    baseURL: BASE_URL,\n    timeout: 10000,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\n// ===== REQUEST INTERCEPTOR =====\napiClient.interceptors.request.use(\n    async (config) => {\n        try {\n            const session = await getSession();\n            if (session?.accessToken) {\n                config.headers.Authorization = `Bearer ${session.accessToken}`;\n            }\n        } catch (error) {\n            console.error('‚ùå Error getting session token:', error);\n        }\n        return config;\n    },\n    (error) => Promise.reject(error)\n);\n\n// ===== RESPONSE INTERCEPTOR =====\napiClient.interceptors.response.use(\n    (response: AxiosResponse) => response,\n    (error) => {\n        if (error.response?.status === 401) {\n            console.error('üö´ Unauthorized');\n        }\n        return Promise.reject(error);\n    }\n);\n\n// ===== GENERIC API METHODS =====\nexport const api = {\n    get: async <T = any>(url: string, config?: AxiosRequestConfig): Promise<T> => {\n        const response = await apiClient.get(url, config);\n        return response.data;\n    },\n    post: async <T = any>(url: string, data?: any, config?: AxiosRequestConfig): Promise<T> => {\n        const response = await apiClient.post(url, data, config);\n        return response.data;\n    },\n    put: async <T = any>(url: string, data?: any, config?: AxiosRequestConfig): Promise<T> => {\n        const response = await apiClient.put(url, data, config);\n        return response.data;\n    },\n    delete: async <T = any>(url: string, config?: AxiosRequestConfig): Promise<T> => {\n        const response = await apiClient.delete(url, config);\n        return response.data;\n    },\n};\n\n// ===== API RESPONSE TYPES =====\nexport interface ApiResponse<T = any> {\n    success: boolean;\n    message: string;\n    data?: T;\n}\n\n// ===== AUTH APIs =====\nexport const authAPI = {\n    signUp: (data: any) => api.post('/auth/signUp', data),\n    signIn: (data: any) => api.post('/auth/signIn', data),\n    getMe: () => api.get('/auth/me'),\n    logout: () => api.post('/auth/logout'),\n};\n\n// ===== USER APIs =====\nexport const userAPI = {\n    getRecommended: () => api.get('/users/recommended'),\n    searchUsers: (query: string) => api.get(`/users/search?search=${encodeURIComponent(query)}`),\n    getFriends: () => api.get('/users/friends'),\n    getProfile: () => api.get('/users/profile'),\n    updateProfile: (data: any) => api.put('/users/profile', data),\n    completeOnBoarding: (data: any) => api.put('/users/onboarding', data),\n};\n\n// ===== MATERIAL APIs =====\nexport const materialAPI = {\n    getMaterials: (params?: any) => {\n        const queryString = params ? `?${new URLSearchParams(params).toString()}` : '';\n        return api.get(`/materials${queryString}`);\n    },\n    getMaterialById: (id: string) => api.get(`/materials/${id}`),\n    searchMaterials: (query: string) => api.get(`/materials/search?search=${encodeURIComponent(query)}`),\n    createMaterial: (data: any) => api.post('/materials', data),\n    saveMaterial: (id: string) => api.post(`/materials/${id}/save`),\n    rateMaterial: (id: string, rating: number) => api.post(`/materials/${id}/rate`, { rating }),\n};\n\n// ===== UPLOAD APIs =====\nexport const uploadAPI = {\n    uploadFile: (file: FormData) => api.post('/upload/file', file, {\n        headers: { 'Content-Type': 'multipart/form-data' }\n    }),\n    getUserFiles: () => api.get('/upload/files'),\n};\n\n// ===== PROGRAM APIs =====\nexport const programAPI = {\n    getPrograms: (params?: any) => {\n        // Filter out undefined values\n        const cleanParams: Record<string, string> = {};\n        if (params) {\n            Object.keys(params).forEach(key => {\n                if (params[key] !== undefined && params[key] !== null && params[key] !== '') {\n                    cleanParams[key] = params[key];\n                }\n            });\n        }\n        \n        const queryString = Object.keys(cleanParams).length > 0 \n            ? `?${new URLSearchParams(cleanParams).toString()}` \n            : '';\n        return api.get(`/programs${queryString}`);\n    },\n    getProgramById: (id: string) => api.get(`/programs/${id}`),\n    searchPrograms: (query: string) => api.get(`/programs/search?q=${encodeURIComponent(query)}`),\n    getProgramsBySchool: (schoolId: string) => api.get(`/programs/school/${schoolId}`),\n    getProgramLevels: () => api.get('/programs/levels'),\n};\n\n// ===== COURSE APIs =====\nexport const courseAPI = {\n    getProgramCourses: (programId: string) => api.get(`/courses/program-courses/${programId}`),\n    searchCourses: (params?: any) => {\n        const queryString = params ? `?${new URLSearchParams(params).toString()}` : '';\n        return api.get(`/courses/program-courses/search${queryString}`);\n    },\n    getCourseStats: () => api.get('/courses/program-courses/stats'),\n};\n\n// ===== PROGRAM REVIEW APIs =====\nexport const programReviewAPI = {\n    getProgramReviews: (programId: string, params?: any) => {\n        const queryString = params ? `?${new URLSearchParams(params).toString()}` : '';\n        return api.get(`/program-reviews/program/${programId}${queryString}`);\n    },\n    getUserReviewForProgram: (programId: string) => api.get(`/program-reviews/user/${programId}`),\n    createReview: (data: {\n        programId: string;\n        year: number;\n        criteriaRatings: {\n            TeachingQuality: number;\n            FacultySupport: number;\n            LearningEnvironment: number;\n            LibraryResources: number;\n            StudentSupport: number;\n            CampusLife: number;\n            OverallExperience: number;\n        };\n        comment?: string;\n    }) => api.post('/program-reviews', data),\n    updateReview: (reviewId: string, data: any) => api.put(`/program-reviews/${reviewId}`, data),\n    deleteReview: (reviewId: string) => api.delete(`/program-reviews/${reviewId}`),\n    likeReview: (reviewId: string, action: 'like' | 'dislike') => api.post(`/program-reviews/${reviewId}/${action}`),\n};\n\n// ===== CHAT APIs =====\nexport const chatAPI = {\n    getStreamToken: () => api.get('/chat/token'),\n};\n\n// ===== NOTIFICATION API =====\nconst notificationAPI = {\n    getNotifications: (params?: { page?: number; limit?: number; unreadOnly?: boolean }) => {\n        const queryString = params ? `?${new URLSearchParams(params as any).toString()}` : '';\n        return api.get(`/notifications${queryString}`);\n    },\n    markAsRead: (notificationId: string) => api.put(`/notifications/${notificationId}/read`),\n    markAllAsRead: () => api.put('/notifications/read-all'),\n    deleteNotification: (notificationId: string) => api.delete(`/notifications/${notificationId}`)\n};\n\n// ===== LEGACY EXPORTS (ƒê·ªÉ t∆∞∆°ng th√≠ch v·ªõi code c≈©) =====\nexport const signUp = authAPI.signUp;\nexport const signIn = authAPI.signIn;\nexport const getAuthUser = authAPI.getMe;\nexport const getUserFriends = userAPI.getFriends;\nexport const getRecommendedUsers = userAPI.getRecommended;\nexport const getMyProfile = userAPI.getProfile;\nexport const updateMyProfile = userAPI.updateProfile;\nexport const searchUsers = userAPI.searchUsers;\nexport const getStreamToken = chatAPI.getStreamToken;\nexport const completeOnBoarding = userAPI.completeOnBoarding;\n\n// Export notification functions\nexport const getNotifications = notificationAPI.getNotifications;\nexport const markNotificationAsRead = notificationAPI.markAsRead;\nexport const markAllNotificationsAsRead = notificationAPI.markAllAsRead;\nexport const deleteNotification = notificationAPI.deleteNotification;\n\nexport default apiClient; "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 196, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Bruce%20Vo/Documents/project/linguex/Streaming_Platform/frontend/hooks/useNotification.ts"],"sourcesContent":["'use client';\r\nimport { useState, useEffect, useCallback } from 'react';\r\nimport { getNotifications, markNotificationAsRead, markAllNotificationsAsRead } from '@/lib/api';\r\nimport toast from 'react-hot-toast';\r\n\r\ninterface Notification {\r\n    _id: string;\r\n    title: string;\r\n    message: string;\r\n    type: 'like' | 'comment' | 'system' | 'general';\r\n    read: boolean;\r\n    createdAt: string;\r\n    updatedAt: string;\r\n    sender?: {\r\n        _id: string;\r\n        fullName: string;\r\n        profilePic: string;\r\n    };\r\n    relatedId?: string;\r\n    relatedModel?: string;\r\n}\r\n\r\nexport const useNotification = () => {\r\n    const [notifications, setNotifications] = useState<Notification[]>([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState<string | null>(null);\r\n    const [unreadCount, setUnreadCount] = useState(0);\r\n\r\n    const fetchNotifications = useCallback(async () => {\r\n        try {\r\n            setLoading(true);\r\n            setError(null);\r\n            \r\n            const response = await getNotifications({ page: 1, limit: 50 });\r\n            \r\n            if (response.data?.success) {\r\n                setNotifications(response.data.notifications || []);\r\n                setUnreadCount(response.data.unreadCount || 0);\r\n            } else {\r\n                throw new Error('Failed to fetch notifications');\r\n            }\r\n            \r\n        } catch (err: any) {\r\n            console.error('Error fetching notifications:', err);\r\n            setError('Failed to load notifications');\r\n            \r\n            // Fallback to mock data if API fails\r\n            const mockNotifications: Notification[] = [\r\n                {\r\n                    _id: '1',\r\n                    title: 'Welcome to StudyBuddy!',\r\n                    message: 'Thanks for joining our platform. Start exploring programs and courses.',\r\n                    type: 'system',\r\n                    read: false,\r\n                    createdAt: new Date().toISOString(),\r\n                    updatedAt: new Date().toISOString()\r\n                },\r\n                {\r\n                    _id: '2',\r\n                    title: 'Your review was liked',\r\n                    message: 'Someone liked your review on Computer Science program.',\r\n                    type: 'like',\r\n                    read: true,\r\n                    createdAt: new Date(Date.now() - 24 * 60 * 60 * 1000).toISOString(),\r\n                    updatedAt: new Date(Date.now() - 24 * 60 * 60 * 1000).toISOString()\r\n                }\r\n            ];\r\n            \r\n            setNotifications(mockNotifications);\r\n            setUnreadCount(mockNotifications.filter(n => !n.read).length);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }, []);\r\n\r\n    const markAsRead = useCallback(async (notificationId: string) => {\r\n        try {\r\n            // Optimistic update\r\n            setNotifications(prev => \r\n                prev.map(notification => \r\n                    notification._id === notificationId \r\n                        ? { ...notification, read: true }\r\n                        : notification\r\n                )\r\n            );\r\n            setUnreadCount(prev => Math.max(0, prev - 1));\r\n            \r\n            // API call\r\n            await markNotificationAsRead(notificationId);\r\n            \r\n        } catch (err: any) {\r\n            console.error('Error marking notification as read:', err);\r\n            // Revert optimistic update on error\r\n            setNotifications(prev => \r\n                prev.map(notification => \r\n                    notification._id === notificationId \r\n                        ? { ...notification, read: false }\r\n                        : notification\r\n                )\r\n            );\r\n            setUnreadCount(prev => prev + 1);\r\n            toast.error('Failed to mark notification as read');\r\n        }\r\n    }, []);\r\n\r\n    const markAllAsRead = useCallback(async () => {\r\n        try {\r\n            // Optimistic update\r\n            const unreadNotifications = notifications.filter(n => !n.read);\r\n            setNotifications(prev => \r\n                prev.map(notification => ({ ...notification, read: true }))\r\n            );\r\n            setUnreadCount(0);\r\n            \r\n            // API call\r\n            await markAllNotificationsAsRead();\r\n            toast.success('All notifications marked as read');\r\n            \r\n        } catch (err: any) {\r\n            console.error('Error marking all notifications as read:', err);\r\n            // Revert optimistic update on error\r\n            fetchNotifications();\r\n            toast.error('Failed to mark all notifications as read');\r\n        }\r\n    }, [notifications, fetchNotifications]);\r\n\r\n    const refreshNotifications = useCallback(() => {\r\n        fetchNotifications();\r\n    }, [fetchNotifications]);\r\n\r\n    useEffect(() => {\r\n        fetchNotifications();\r\n    }, [fetchNotifications]);\r\n\r\n    return {\r\n        notifications,\r\n        loading,\r\n        error,\r\n        unreadCount,\r\n        markAsRead,\r\n        markAllAsRead,\r\n        refreshNotifications\r\n    };\r\n}; "],"names":[],"mappings":";;;AACA;AACA;AACA;;AAHA;;;;AAsBO,MAAM,kBAAkB;;IAC3B,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAkB,EAAE;IACrE,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IAClD,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAE/C,MAAM,qBAAqB,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;2DAAE;YACnC,IAAI;gBACA,WAAW;gBACX,SAAS;gBAET,MAAM,WAAW,MAAM,CAAA,GAAA,6GAAA,CAAA,mBAAgB,AAAD,EAAE;oBAAE,MAAM;oBAAG,OAAO;gBAAG;gBAE7D,IAAI,SAAS,IAAI,EAAE,SAAS;oBACxB,iBAAiB,SAAS,IAAI,CAAC,aAAa,IAAI,EAAE;oBAClD,eAAe,SAAS,IAAI,CAAC,WAAW,IAAI;gBAChD,OAAO;oBACH,MAAM,IAAI,MAAM;gBACpB;YAEJ,EAAE,OAAO,KAAU;gBACf,QAAQ,KAAK,CAAC,iCAAiC;gBAC/C,SAAS;gBAET,qCAAqC;gBACrC,MAAM,oBAAoC;oBACtC;wBACI,KAAK;wBACL,OAAO;wBACP,SAAS;wBACT,MAAM;wBACN,MAAM;wBACN,WAAW,IAAI,OAAO,WAAW;wBACjC,WAAW,IAAI,OAAO,WAAW;oBACrC;oBACA;wBACI,KAAK;wBACL,OAAO;wBACP,SAAS;wBACT,MAAM;wBACN,MAAM;wBACN,WAAW,IAAI,KAAK,KAAK,GAAG,KAAK,KAAK,KAAK,KAAK,MAAM,WAAW;wBACjE,WAAW,IAAI,KAAK,KAAK,GAAG,KAAK,KAAK,KAAK,KAAK,MAAM,WAAW;oBACrE;iBACH;gBAED,iBAAiB;gBACjB,eAAe,kBAAkB,MAAM;uEAAC,CAAA,IAAK,CAAC,EAAE,IAAI;sEAAE,MAAM;YAChE,SAAU;gBACN,WAAW;YACf;QACJ;0DAAG,EAAE;IAEL,MAAM,aAAa,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;mDAAE,OAAO;YAClC,IAAI;gBACA,oBAAoB;gBACpB;+DAAiB,CAAA,OACb,KAAK,GAAG;uEAAC,CAAA,eACL,aAAa,GAAG,KAAK,iBACf;oCAAE,GAAG,YAAY;oCAAE,MAAM;gCAAK,IAC9B;;;gBAGd;+DAAe,CAAA,OAAQ,KAAK,GAAG,CAAC,GAAG,OAAO;;gBAE1C,WAAW;gBACX,MAAM,CAAA,GAAA,6GAAA,CAAA,yBAAsB,AAAD,EAAE;YAEjC,EAAE,OAAO,KAAU;gBACf,QAAQ,KAAK,CAAC,uCAAuC;gBACrD,oCAAoC;gBACpC;+DAAiB,CAAA,OACb,KAAK,GAAG;uEAAC,CAAA,eACL,aAAa,GAAG,KAAK,iBACf;oCAAE,GAAG,YAAY;oCAAE,MAAM;gCAAM,IAC/B;;;gBAGd;+DAAe,CAAA,OAAQ,OAAO;;gBAC9B,0JAAA,CAAA,UAAK,CAAC,KAAK,CAAC;YAChB;QACJ;kDAAG,EAAE;IAEL,MAAM,gBAAgB,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;sDAAE;YAC9B,IAAI;gBACA,oBAAoB;gBACpB,MAAM,sBAAsB,cAAc,MAAM;sFAAC,CAAA,IAAK,CAAC,EAAE,IAAI;;gBAC7D;kEAAiB,CAAA,OACb,KAAK,GAAG;0EAAC,CAAA,eAAgB,CAAC;oCAAE,GAAG,YAAY;oCAAE,MAAM;gCAAK,CAAC;;;gBAE7D,eAAe;gBAEf,WAAW;gBACX,MAAM,CAAA,GAAA,6GAAA,CAAA,6BAA0B,AAAD;gBAC/B,0JAAA,CAAA,UAAK,CAAC,OAAO,CAAC;YAElB,EAAE,OAAO,KAAU;gBACf,QAAQ,KAAK,CAAC,4CAA4C;gBAC1D,oCAAoC;gBACpC;gBACA,0JAAA,CAAA,UAAK,CAAC,KAAK,CAAC;YAChB;QACJ;qDAAG;QAAC;QAAe;KAAmB;IAEtC,MAAM,uBAAuB,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;6DAAE;YACrC;QACJ;4DAAG;QAAC;KAAmB;IAEvB,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;qCAAE;YACN;QACJ;oCAAG;QAAC;KAAmB;IAEvB,OAAO;QACH;QACA;QACA;QACA;QACA;QACA;QACA;IACJ;AACJ;GAzHa","debugId":null}},
    {"offset": {"line": 360, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Bruce%20Vo/Documents/project/linguex/Streaming_Platform/frontend/app/%28protected%29/dashboard/notifications/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React from 'react';\r\nimport { useNotification } from '@/hooks/useNotification';\r\nimport { Loader2, Bell, Check, X, Clock } from 'lucide-react';\r\n\r\ninterface Notification {\r\n    _id: string;\r\n    title: string;\r\n    message: string;\r\n    type: 'like' | 'comment' | 'system' | 'general';\r\n    read: boolean;\r\n    createdAt: string;\r\n    updatedAt: string;\r\n}\r\n\r\nconst NotificationsPage = () => {\r\n    const { notifications, loading, error, markAsRead, markAllAsRead } = useNotification();\r\n\r\n    return (\r\n        <div className=\"max-w-4xl mx-auto py-10 px-4\">\r\n            <div className=\"flex items-center justify-between mb-6\">\r\n                <h1 className=\"text-3xl font-bold text-gray-900\">Notifications</h1>\r\n                {notifications.length > 0 && (\r\n                    <button \r\n                        onClick={markAllAsRead}\r\n                        className=\"text-sm text-blue-600 hover:text-blue-800 transition-colors\"\r\n                    >\r\n                        Mark all as read\r\n                    </button>\r\n                )}\r\n            </div>\r\n\r\n            {loading && (\r\n                <div className=\"flex items-center justify-center py-12\">\r\n                    <Loader2 className=\"w-8 h-8 animate-spin text-blue-500\" />\r\n                    <span className=\"ml-3 text-gray-600 text-lg\">Loading notifications...</span>\r\n                </div>\r\n            )}\r\n\r\n            {error && (\r\n                <div className=\"bg-red-50 border border-red-200 rounded-lg p-4 text-red-700\">\r\n                    <div className=\"flex items-center gap-2\">\r\n                        <X className=\"w-5 h-5\" />\r\n                        {error}\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            {!loading && notifications.length === 0 && (\r\n                <div className=\"text-center py-16\">\r\n                    <Bell className=\"w-16 h-16 text-gray-300 mx-auto mb-4\" />\r\n                    <h3 className=\"text-xl font-medium text-gray-500 mb-2\">No notifications yet</h3>\r\n                    <p className=\"text-gray-400\">When you receive notifications, they'll appear here.</p>\r\n                </div>\r\n            )}\r\n\r\n            <div className=\"space-y-3\">\r\n                {notifications.map((notification: Notification) => (\r\n                    <div \r\n                        key={notification._id} \r\n                        className={`rounded-lg border p-6 flex items-start gap-4 transition-all hover:shadow-md cursor-pointer ${\r\n                            notification.read \r\n                                ? 'bg-white border-gray-200' \r\n                                : 'bg-blue-50 border-blue-200 shadow-sm'\r\n                        }`}\r\n                        onClick={() => markAsRead(notification._id)}\r\n                    >\r\n                        <div className=\"flex-shrink-0 mt-1\">\r\n                            {getNotificationIcon(notification.type)}\r\n                        </div>\r\n                        <div className=\"flex-1\">\r\n                            <div className=\"flex items-start justify-between\">\r\n                                <div>\r\n                                    <h4 className=\"font-semibold text-gray-900 mb-1\">\r\n                                        {notification.title}\r\n                                    </h4>\r\n                                    <p className=\"text-gray-700 leading-relaxed\">\r\n                                        {notification.message}\r\n                                    </p>\r\n                                </div>\r\n                                {!notification.read && (\r\n                                    <div className=\"w-3 h-3 bg-blue-500 rounded-full flex-shrink-0 ml-3\"></div>\r\n                                )}\r\n                            </div>\r\n                            <div className=\"flex items-center gap-2 mt-3 text-sm text-gray-500\">\r\n                                <Clock className=\"w-4 h-4\" />\r\n                                {formatDate(notification.createdAt)}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst getNotificationIcon = (type: string) => {\r\n    switch (type) {\r\n        case 'like':\r\n            return <div className=\"w-10 h-10 bg-blue-100 rounded-full flex items-center justify-center\">\r\n                <Bell className=\"w-5 h-5 text-blue-600\" />\r\n            </div>;\r\n        case 'comment':\r\n            return <div className=\"w-10 h-10 bg-green-100 rounded-full flex items-center justify-center\">\r\n                <Bell className=\"w-5 h-5 text-green-600\" />\r\n            </div>;\r\n        default:\r\n            return <div className=\"w-10 h-10 bg-gray-100 rounded-full flex items-center justify-center\">\r\n                <Bell className=\"w-5 h-5 text-gray-600\" />\r\n            </div>;\r\n    }\r\n};\r\n\r\nconst formatDate = (dateString: string) => {\r\n    const date = new Date(dateString);\r\n    const now = new Date();\r\n    const diffMs = now.getTime() - date.getTime();\r\n    const diffMinutes = Math.floor(diffMs / (1000 * 60));\r\n    const diffHours = Math.floor(diffMs / (1000 * 60 * 60));\r\n    const diffDays = Math.floor(diffMs / (1000 * 60 * 60 * 24));\r\n\r\n    if (diffMinutes < 1) return 'Just now';\r\n    if (diffMinutes < 60) return `${diffMinutes}m ago`;\r\n    if (diffHours < 24) return `${diffHours}h ago`;\r\n    if (diffDays < 7) return `${diffDays}d ago`;\r\n    \r\n    return date.toLocaleDateString('en-US', {\r\n        year: 'numeric',\r\n        month: 'short',\r\n        day: 'numeric'\r\n    });\r\n};\r\n\r\nexport default NotificationsPage; "],"names":[],"mappings":"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","debugId":null}}]
}