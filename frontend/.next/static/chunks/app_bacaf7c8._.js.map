{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Bruce%20Vo/Documents/project/streamify/Streaming_Platform/frontend/app/actions/auth.ts"],"sourcesContent":["'use server'\r\n\r\nimport { completeOnboarding, signup } from \"@/lib/api\";\r\n\r\n// State type\r\ninterface SignUpState {\r\n    success: boolean;\r\n    message?: string | null;\r\n    errors?: {\r\n        fullName?: string;\r\n        email?: string;\r\n        password?: string;\r\n        terms?: string;\r\n    };\r\n}\r\n\r\ninterface OnBoardingState {\r\n    success: boolean;\r\n    message?: string | null;\r\n    errors?: {\r\n        fullName?: string;\r\n        bio?: string;\r\n        nativeLanguage?: string;\r\n        learningLanguage?: string;\r\n        location?: string;\r\n    };\r\n}\r\n\r\nexport async function signUp(prevState: SignUpState, formData: FormData): Promise<SignUpState> {\r\n\r\n    try {\r\n        const fullName = formData.get('fullName') as string;\r\n        const email = formData.get('email') as string;\r\n        const password = formData.get('password') as string;\r\n        const termsAccepted = formData.get('terms') === 'on';\r\n\r\n        console.log(\"Server Action received data:\", {\r\n            fullName,\r\n            email,\r\n            password,\r\n            termsAccepted\r\n        });\r\n\r\n        const errors: SignUpState['errors'] = {};\r\n\r\n        if (!fullName) errors.fullName = 'Full name is required';\r\n        if (!email) errors.email = 'Email is required';\r\n        if (!password) errors.password = 'Password is required';\r\n        if (password && password.length < 6) errors.password = 'Password must be at least 6 characters';\r\n        if (!termsAccepted) errors.terms = 'You must accept the terms';\r\n\r\n        if (Object.keys(errors).length > 0) {\r\n            return {\r\n                success: false,\r\n                message: 'Please fix the errors below',\r\n                errors\r\n            };\r\n        }\r\n\r\n        //gọi API signup từ api.ts và truyền dữ liệu từ form. cái này sẽ được gửi request đến backend\r\n        const result = await signup({ fullName, email, password });\r\n\r\n        if (result.success) {\r\n            return {\r\n                success: true,\r\n                message: \"Account created successfully!\"\r\n            };\r\n\r\n        } else {\r\n            return {\r\n                success: false,\r\n                message: result.message || 'Failed to create account'\r\n            }\r\n        }\r\n\r\n    } catch (error: any) {\r\n        console.error('SignUp error:', error);\r\n        return {\r\n            success: false,\r\n            message: error.response?.data?.message || 'An unexpected error occurred in signUp function in auth.ts'\r\n        };\r\n    }\r\n}\r\n\r\n// app/actions/auth.ts\r\nexport async function handleOnBoarded(prevState: OnBoardingState, formData: FormData): Promise<OnBoardingState> {\r\n    try {\r\n        const fullName = formData.get(\"fullName\") as string;\r\n        const bio = formData.get(\"bio\") as string;\r\n        const nativeLanguage = formData.get(\"nativeLanguage\") as string;\r\n        const learningLanguage = formData.get(\"learningLanguage\") as string;\r\n        const location = formData.get(\"location\") as string;\r\n        const profilePic = formData.get(\"profilePic\") as string;\r\n\r\n        console.log(\"Server action of onBoarding received data: \", {\r\n            fullName, bio, nativeLanguage, learningLanguage, location, profilePic\r\n        });\r\n\r\n        const errors: OnBoardingState['errors'] = {};\r\n\r\n        // Validate required fields\r\n        if (!fullName?.trim()) errors.fullName = 'Full name is required';\r\n        if (!nativeLanguage) errors.nativeLanguage = 'Native language is required';\r\n        if (!learningLanguage) errors.learningLanguage = 'Learning language is required';\r\n        if (nativeLanguage === learningLanguage) {\r\n            errors.learningLanguage = 'Learning language must be different from native language';\r\n        }\r\n\r\n        if (Object.keys(errors).length > 0) {\r\n            return {\r\n                success: false,\r\n                message: 'Please fix the errors below',\r\n                errors\r\n            };\r\n        }\r\n\r\n        const result = await completeOnboarding({\r\n            fullName: fullName.trim(),\r\n            bio: bio?.trim() || \"\",\r\n            nativeLanguage,\r\n            learningLanguage,\r\n            location: location?.trim() || \"\",\r\n            profilePic,\r\n        });\r\n\r\n        if (result.success) {\r\n            return {\r\n                success: true,\r\n                message: \"Profile completed successfully!\"\r\n            }\r\n        } else {\r\n            return {\r\n                success: false,\r\n                message: result.message || \"Failed to complete onboarding\"\r\n            }\r\n        }\r\n\r\n    } catch (error: any) {\r\n        console.error('OnBoarding error:', error);\r\n        return {\r\n            success: false,\r\n            message: error.response?.data?.message || 'An unexpected error occurred during onBoarding process'\r\n        }\r\n    }\r\n}"],"names":[],"mappings":";;;;;;IAqFsB,kBAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Bruce%20Vo/Documents/project/streamify/Streaming_Platform/frontend/app/%28protected%29/onBoarding/page.tsx"],"sourcesContent":["'use client'\r\n\r\nimport { handleOnBoarded } from \"@/app/actions/auth\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useActionState } from \"react\";\r\nimport toast from \"react-hot-toast\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport useAuthUser from \"@/hooks/useAuthUser\";\r\nimport { useQueryClient } from \"@tanstack/react-query\";\r\nimport { LoaderIcon, MapPinIcon, ShipWheelIcon, ShuffleIcon, CameraIcon } from \"lucide-react\";\r\nimport { LANGUAGES } from \"@/constants\";\r\nimport Image from \"next/image\";\r\n\r\nconst Page = () => {\r\n    const router = useRouter();\r\n    const { authUser } = useAuthUser();\r\n    const queryClient = useQueryClient();\r\n    \r\n    // Chỉ cần state cho avatar để có live preview và random button\r\n    const [profilePic, setProfilePic] = useState(authUser?.profilePic || \"\");\r\n    \r\n    const initialState = {\r\n        success: false,\r\n        message: null,\r\n        errors: {}\r\n    };\r\n    \r\n    const [state, formAction, isPending] = useActionState(handleOnBoarded, initialState);\r\n\r\n    // Generate random avatar\r\n    const handleRandomAvatar = () => {\r\n        const idx = Math.floor(Math.random() * 100) + 1;\r\n        const randomAvatar = `https://avatar.iran.liara.run/public/${idx}.png`;\r\n        setProfilePic(randomAvatar);\r\n        toast.success(\"Random profile picture generated!\");\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (state.success) {\r\n            toast.success(state.message || \"Profile completed successfully!\");\r\n            queryClient.invalidateQueries({ queryKey: ['authUser'] });\r\n            \r\n            const timer = setTimeout(() => {\r\n                router.push('/');\r\n            }, 2000);\r\n            \r\n            return () => clearTimeout(timer);\r\n        }\r\n    }, [state.success, state.message, router, queryClient]);\r\n\r\n    return (\r\n        <div className=\"min-h-screen bg-base-100 flex items-center justify-center p-4\">\r\n            <div className=\"card bg-base-200 w-full max-w-3xl shadow-xl\">\r\n                <div className=\"card-body p-6 sm:p-8\">\r\n                    <h1 className=\"text-2xl sm:text-3xl font-bold text-center mb-6\">\r\n                        Complete Your Profile\r\n                    </h1>\r\n\r\n                    {/* ERROR MESSAGE */}\r\n                    {state.message && !state.success && (\r\n                        <div className=\"alert alert-error mb-4\">\r\n                            <span>{state.message}</span>\r\n                        </div>\r\n                    )}\r\n\r\n                    {/* SUCCESS MESSAGE */}\r\n                    {state.success && (\r\n                        <div className=\"alert alert-success mb-4\">\r\n                            <span>{state.message}</span>\r\n                        </div>\r\n                    )}\r\n\r\n                    <form action={formAction} className=\"space-y-6\">\r\n                        {/* PROFILE PIC CONTAINER */}\r\n                        <div className=\"flex flex-col items-center justify-center space-y-4\">\r\n                            {/* IMAGE PREVIEW */}\r\n                            <div className=\"relative w-32 h-32 rounded-full bg-base-300 overflow-hidden\">\r\n                                {profilePic ? (\r\n                                    <Image\r\n                                        src={profilePic}\r\n                                        alt=\"Profile Preview\"\r\n                                        fill\r\n                                        priority\r\n                                        className=\"object-cover\"\r\n                                        sizes=\"(max-width: 768px) 100vw, 33vw\"\r\n                                    />\r\n                                ) : (\r\n                                    <div className=\"flex items-center justify-center w-full h-full\">\r\n                                        <CameraIcon className=\"w-12 h-12 text-base-content opacity-40\" />\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                            {/* Hidden input để gửi profilePic data */}\r\n                            <input \r\n                                type=\"hidden\" \r\n                                name=\"profilePic\" \r\n                                value={profilePic} \r\n                            />\r\n                            {/* Generate Random Avatar BTN */}\r\n                            <div className=\"flex items-center gap-2\">\r\n                                <button \r\n                                    type=\"button\" \r\n                                    onClick={handleRandomAvatar} \r\n                                    className=\"btn btn-accent\"\r\n                                    disabled={isPending}\r\n                                >\r\n                                    <ShuffleIcon className=\"w-4 h-4 mr-2\" />\r\n                                    Generate Random Avatar\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* FULL NAME */}\r\n                        <fieldset className=\"fieldset\">\r\n                            <label className=\"label\" htmlFor=\"fullName\">\r\n                                <span>Full Name *</span>\r\n                            </label>\r\n                            <input\r\n                                id=\"fullName\"\r\n                                type=\"text\"\r\n                                name=\"fullName\"\r\n                                defaultValue={authUser?.fullName || \"\"}\r\n                                className=\"input w-full\"\r\n                                placeholder=\"Your full name\"\r\n                                required\r\n                            />\r\n                            {state.errors?.fullName && (\r\n                                <label className=\"label\">\r\n                                    <span className=\"text-error\">\r\n                                        {state.errors.fullName}\r\n                                    </span>\r\n                                </label>\r\n                            )}\r\n                        </fieldset>\r\n\r\n                        {/* BIO */}\r\n                        <fieldset className=\"fieldset\">\r\n                            <label className=\"label\" htmlFor=\"bio\">\r\n                                <span>Bio</span>\r\n                            </label>\r\n                            <textarea\r\n                                id=\"bio\"\r\n                                name=\"bio\"\r\n                                defaultValue={authUser?.bio || \"\"}\r\n                                className=\"textarea w-full h-24 resize-none\"\r\n                                placeholder=\"Tell others about yourself and your language learning goals\"\r\n                            />\r\n                        </fieldset>\r\n\r\n                        {/* LANGUAGES */}\r\n                        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                            {/* NATIVE LANGUAGE */}\r\n                            <fieldset className=\"fieldset\">\r\n                                <label className=\"label\" htmlFor=\"nativeLanguage\">\r\n                                    <span>Native Language *</span>\r\n                                </label>\r\n                                <input\r\n                                    id=\"nativeLanguage\"\r\n                                    type=\"text\"\r\n                                    name=\"nativeLanguage\"\r\n                                    value={authUser?.nativeLanguage || \"\"}\r\n                                    className=\"input w-full\"\r\n                                    readOnly\r\n                                    required\r\n                                />\r\n                                {state.errors?.nativeLanguage && (\r\n                                    <label className=\"label\">\r\n                                        <span className=\"text-error\">\r\n                                            {state.errors.nativeLanguage}\r\n                                        </span>\r\n                                    </label>\r\n                                )}\r\n                            </fieldset>\r\n                            {/* LEARNING LANGUAGE */}\r\n                            <fieldset className=\"fieldset\">\r\n                                <label className=\"label\" htmlFor=\"learningLanguage\">\r\n                                    <span>Learning Language *</span>\r\n                                </label>\r\n                                <input\r\n                                    id=\"learningLanguage\"\r\n                                    type=\"text\"\r\n                                    name=\"learningLanguage\"\r\n                                    value={authUser?.learningLanguage || \"\"}\r\n                                    className=\"input w-full\"\r\n                                    readOnly\r\n                                    required\r\n                                />\r\n                                {state.errors?.learningLanguage && (\r\n                                    <label className=\"label\">\r\n                                        <span className=\"text-error\">\r\n                                            {state.errors.learningLanguage}\r\n                                        </span>\r\n                                    </label>\r\n                                )}\r\n                            </fieldset>\r\n                        </div>\r\n\r\n                        {/* LOCATION */}\r\n                        <fieldset className=\"fieldset\">\r\n                            <label className=\"label\" htmlFor=\"location\">\r\n                                <span>Location</span>\r\n                            </label>\r\n                            <div className=\"relative\">\r\n                                <MapPinIcon className=\"absolute top-1/2 transform -translate-y-1/2 left-3 w-5 h-5 text-base-content opacity-70\" />\r\n                                <input\r\n                                    id=\"location\"\r\n                                    type=\"text\"\r\n                                    name=\"location\"\r\n                                    defaultValue={authUser?.location || \"\"}\r\n                                    className=\"input w-full pl-[2.5rem]\"\r\n                                    placeholder=\"City, Country\"\r\n                                />\r\n                            </div>\r\n                        </fieldset>\r\n\r\n                        {/* SUBMIT BUTTON */}\r\n                        <button \r\n                            className=\"btn btn-primary w-full\" \r\n                            disabled={isPending} \r\n                            type=\"submit\"\r\n                        >\r\n                            {!isPending ? (\r\n                                <>\r\n                                    <ShipWheelIcon className=\"size-5 mr-2\" />\r\n                                    Complete Onboarding\r\n                                </>\r\n                            ) : (\r\n                                <>\r\n                                    <LoaderIcon className=\"animate-spin size-5 mr-2\" />\r\n                                    Onboarding...\r\n                                </>\r\n                            )}\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Page;"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;;;AAXA;;;;;;;;;;AAaA,MAAM,OAAO;;IACT,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,EAAE,QAAQ,EAAE,GAAG,CAAA,GAAA,uHAAA,CAAA,UAAW,AAAD;IAC/B,MAAM,cAAc,CAAA,GAAA,yLAAA,CAAA,iBAAc,AAAD;IAEjC,+DAA+D;IAC/D,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE,UAAU,cAAc;IAErE,MAAM,eAAe;QACjB,SAAS;QACT,SAAS;QACT,QAAQ,CAAC;IACb;IAEA,MAAM,CAAC,OAAO,YAAY,UAAU,GAAG,CAAA,GAAA,6JAAA,CAAA,iBAAc,AAAD,EAAE,yJAAA,CAAA,kBAAe,EAAE;IAEvE,yBAAyB;IACzB,MAAM,qBAAqB;QACvB,MAAM,MAAM,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,OAAO;QAC9C,MAAM,eAAe,CAAC,qCAAqC,EAAE,IAAI,IAAI,CAAC;QACtE,cAAc;QACd,0JAAA,CAAA,UAAK,CAAC,OAAO,CAAC;IAClB;IAEA,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;0BAAE;YACN,IAAI,MAAM,OAAO,EAAE;gBACf,0JAAA,CAAA,UAAK,CAAC,OAAO,CAAC,MAAM,OAAO,IAAI;gBAC/B,YAAY,iBAAiB,CAAC;oBAAE,UAAU;wBAAC;qBAAW;gBAAC;gBAEvD,MAAM,QAAQ;4CAAW;wBACrB,OAAO,IAAI,CAAC;oBAChB;2CAAG;gBAEH;sCAAO,IAAM,aAAa;;YAC9B;QACJ;yBAAG;QAAC,MAAM,OAAO;QAAE,MAAM,OAAO;QAAE;QAAQ;KAAY;IAEtD,qBACI,6LAAC;QAAI,WAAU;kBACX,cAAA,6LAAC;YAAI,WAAU;sBACX,cAAA,6LAAC;gBAAI,WAAU;;kCACX,6LAAC;wBAAG,WAAU;kCAAkD;;;;;;oBAK/D,MAAM,OAAO,IAAI,CAAC,MAAM,OAAO,kBAC5B,6LAAC;wBAAI,WAAU;kCACX,cAAA,6LAAC;sCAAM,MAAM,OAAO;;;;;;;;;;;oBAK3B,MAAM,OAAO,kBACV,6LAAC;wBAAI,WAAU;kCACX,cAAA,6LAAC;sCAAM,MAAM,OAAO;;;;;;;;;;;kCAI5B,6LAAC;wBAAK,QAAQ;wBAAY,WAAU;;0CAEhC,6LAAC;gCAAI,WAAU;;kDAEX,6LAAC;wCAAI,WAAU;kDACV,2BACG,6LAAC,gIAAA,CAAA,UAAK;4CACF,KAAK;4CACL,KAAI;4CACJ,IAAI;4CACJ,QAAQ;4CACR,WAAU;4CACV,OAAM;;;;;iEAGV,6LAAC;4CAAI,WAAU;sDACX,cAAA,6LAAC,6MAAA,CAAA,aAAU;gDAAC,WAAU;;;;;;;;;;;;;;;;kDAKlC,6LAAC;wCACG,MAAK;wCACL,MAAK;wCACL,OAAO;;;;;;kDAGX,6LAAC;wCAAI,WAAU;kDACX,cAAA,6LAAC;4CACG,MAAK;4CACL,SAAS;4CACT,WAAU;4CACV,UAAU;;8DAEV,6LAAC,+MAAA,CAAA,cAAW;oDAAC,WAAU;;;;;;gDAAiB;;;;;;;;;;;;;;;;;;0CAOpD,6LAAC;gCAAS,WAAU;;kDAChB,6LAAC;wCAAM,WAAU;wCAAQ,SAAQ;kDAC7B,cAAA,6LAAC;sDAAK;;;;;;;;;;;kDAEV,6LAAC;wCACG,IAAG;wCACH,MAAK;wCACL,MAAK;wCACL,cAAc,UAAU,YAAY;wCACpC,WAAU;wCACV,aAAY;wCACZ,QAAQ;;;;;;oCAEX,MAAM,MAAM,EAAE,0BACX,6LAAC;wCAAM,WAAU;kDACb,cAAA,6LAAC;4CAAK,WAAU;sDACX,MAAM,MAAM,CAAC,QAAQ;;;;;;;;;;;;;;;;;0CAOtC,6LAAC;gCAAS,WAAU;;kDAChB,6LAAC;wCAAM,WAAU;wCAAQ,SAAQ;kDAC7B,cAAA,6LAAC;sDAAK;;;;;;;;;;;kDAEV,6LAAC;wCACG,IAAG;wCACH,MAAK;wCACL,cAAc,UAAU,OAAO;wCAC/B,WAAU;wCACV,aAAY;;;;;;;;;;;;0CAKpB,6LAAC;gCAAI,WAAU;;kDAEX,6LAAC;wCAAS,WAAU;;0DAChB,6LAAC;gDAAM,WAAU;gDAAQ,SAAQ;0DAC7B,cAAA,6LAAC;8DAAK;;;;;;;;;;;0DAEV,6LAAC;gDACG,IAAG;gDACH,MAAK;gDACL,MAAK;gDACL,OAAO,UAAU,kBAAkB;gDACnC,WAAU;gDACV,QAAQ;gDACR,QAAQ;;;;;;4CAEX,MAAM,MAAM,EAAE,gCACX,6LAAC;gDAAM,WAAU;0DACb,cAAA,6LAAC;oDAAK,WAAU;8DACX,MAAM,MAAM,CAAC,cAAc;;;;;;;;;;;;;;;;;kDAM5C,6LAAC;wCAAS,WAAU;;0DAChB,6LAAC;gDAAM,WAAU;gDAAQ,SAAQ;0DAC7B,cAAA,6LAAC;8DAAK;;;;;;;;;;;0DAEV,6LAAC;gDACG,IAAG;gDACH,MAAK;gDACL,MAAK;gDACL,OAAO,UAAU,oBAAoB;gDACrC,WAAU;gDACV,QAAQ;gDACR,QAAQ;;;;;;4CAEX,MAAM,MAAM,EAAE,kCACX,6LAAC;gDAAM,WAAU;0DACb,cAAA,6LAAC;oDAAK,WAAU;8DACX,MAAM,MAAM,CAAC,gBAAgB;;;;;;;;;;;;;;;;;;;;;;;0CAQlD,6LAAC;gCAAS,WAAU;;kDAChB,6LAAC;wCAAM,WAAU;wCAAQ,SAAQ;kDAC7B,cAAA,6LAAC;sDAAK;;;;;;;;;;;kDAEV,6LAAC;wCAAI,WAAU;;0DACX,6LAAC,iNAAA,CAAA,aAAU;gDAAC,WAAU;;;;;;0DACtB,6LAAC;gDACG,IAAG;gDACH,MAAK;gDACL,MAAK;gDACL,cAAc,UAAU,YAAY;gDACpC,WAAU;gDACV,aAAY;;;;;;;;;;;;;;;;;;0CAMxB,6LAAC;gCACG,WAAU;gCACV,UAAU;gCACV,MAAK;0CAEJ,CAAC,0BACE;;sDACI,6LAAC,uNAAA,CAAA,gBAAa;4CAAC,WAAU;;;;;;wCAAgB;;iEAI7C;;sDACI,6LAAC,6MAAA,CAAA,aAAU;4CAAC,WAAU;;;;;;wCAA6B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAUvF;GAjOM;;QACa,qIAAA,CAAA,YAAS;QACH,uHAAA,CAAA,UAAW;QACZ,yLAAA,CAAA,iBAAc;QAWK,6JAAA,CAAA,iBAAc;;;KAdnD;uCAmOS","debugId":null}}]
}