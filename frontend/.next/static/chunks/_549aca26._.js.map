{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Bruce%20Vo/Documents/project/Streaming_Platform/frontend/lib/api.ts"],"sourcesContent":["const BASE_URL = process.env.NEXT_PUBLIC_API_URL || 'http://localhost:5001/api';\r\n\r\ninterface ApiResponse<T = any> {\r\n    success: boolean;\r\n    message?: string;\r\n    user?: T;\r\n    token?: string;\r\n}\r\n\r\ninterface SignupData {\r\n    fullName: string;\r\n    email: string;\r\n    password: string;\r\n}\r\n\r\ninterface LoginData {\r\n    email: string;\r\n    password: string;\r\n}\r\n\r\ninterface OnboardingData {\r\n    fullName: string;\r\n    bio: string;\r\n    nativeLanguage: string;\r\n    learningLanguage: string;\r\n    location: string;\r\n    profilePic: string;\r\n}\r\n\r\nconst makeAuthenticationRequest = async (\r\n    endpoint: string, \r\n    options: RequestInit = {}\r\n): Promise<Response> => {\r\n    const token = localStorage.getItem('auth_token');\r\n\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        ...(token && { Authorization: `Bearer ${token}` }),\r\n        ...options.headers,\r\n    };\r\n\r\n    return fetch(`${BASE_URL}${endpoint}`, {\r\n        ...options,\r\n        headers,\r\n    });\r\n}\r\n\r\nexport const signUp = async (signUpData: SignupData): Promise<ApiResponse> => {\r\n    try {\r\n        const response = await fetch(`${BASE_URL}/auth/sign-up`, {\r\n            method: 'POST',\r\n            body: JSON.stringify(signUpData),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        });\r\n\r\n        const data = await response.json();\r\n        return data;\r\n    } catch (error: any) {\r\n        console.error('Signup error:', error);\r\n        return {\r\n            success: false,\r\n            message: 'Network error occurred with signUp function in api.ts'\r\n        };\r\n    }\r\n}\r\n\r\nexport const signIn = async (loginData: LoginData): Promise<ApiResponse> => {\r\n    try {\r\n        const response = await fetch(`${BASE_URL}/auth/sign-in`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(loginData),\r\n        });\r\n\r\n        const data = await response.json();\r\n        return data;\r\n    } catch (error: any) {\r\n        console.error('Login error in api.ts:', error);\r\n        return {\r\n            success: false,\r\n            message: 'Something wrong with signIn function in api.ts'\r\n        };\r\n    }\r\n};\r\n\r\nexport const getAuthUser = async (): Promise<ApiResponse | null> => {\r\n    try {\r\n        const response = await makeAuthenticationRequest(\"/auth/me\");\r\n        if (!response.ok) {\r\n            return null;\r\n        }\r\n\r\n        const data = await response.json();\r\n        return data;\r\n\r\n    } catch (error) {\r\n        console.error('Get auth user error in api.ts:', error);\r\n        return null;\r\n    }\r\n}\r\n\r\nexport const completeOnBoarding = async (userData: OnboardingData): Promise<ApiResponse> => {\r\n    try {\r\n        const response = await makeAuthenticationRequest('/auth/onBoarding', {\r\n            method: 'POST',\r\n            body: JSON.stringify(userData),\r\n        });\r\n\r\n        const data = await response.json();\r\n        return data;\r\n    } catch (error) {\r\n        console.error(\"Onboarding error in api.ts: \", error);\r\n        return {\r\n            success: false,\r\n            message: \"Internal error in Onboarding in api.ts\"\r\n        }\r\n    }\r\n}\r\n"],"names":[],"mappings":";;;;;;AAAiB;AAAjB,MAAM,WAAW,iEAAmC;AA6BpD,MAAM,4BAA4B,OAC9B,UACA,UAAuB,CAAC,CAAC;IAEzB,MAAM,QAAQ,aAAa,OAAO,CAAC;IAEnC,MAAM,UAAU;QACZ,gBAAgB;QAChB,GAAI,SAAS;YAAE,eAAe,CAAC,OAAO,EAAE,OAAO;QAAC,CAAC;QACjD,GAAG,QAAQ,OAAO;IACtB;IAEA,OAAO,MAAM,GAAG,WAAW,UAAU,EAAE;QACnC,GAAG,OAAO;QACV;IACJ;AACJ;AAEO,MAAM,SAAS,OAAO;IACzB,IAAI;QACA,MAAM,WAAW,MAAM,MAAM,GAAG,SAAS,aAAa,CAAC,EAAE;YACrD,QAAQ;YACR,MAAM,KAAK,SAAS,CAAC;YACrB,SAAS;gBACL,gBAAgB;YACpB;QACJ;QAEA,MAAM,OAAO,MAAM,SAAS,IAAI;QAChC,OAAO;IACX,EAAE,OAAO,OAAY;QACjB,QAAQ,KAAK,CAAC,iBAAiB;QAC/B,OAAO;YACH,SAAS;YACT,SAAS;QACb;IACJ;AACJ;AAEO,MAAM,SAAS,OAAO;IACzB,IAAI;QACA,MAAM,WAAW,MAAM,MAAM,GAAG,SAAS,aAAa,CAAC,EAAE;YACrD,QAAQ;YACR,SAAS;gBACL,gBAAgB;YACpB;YACA,MAAM,KAAK,SAAS,CAAC;QACzB;QAEA,MAAM,OAAO,MAAM,SAAS,IAAI;QAChC,OAAO;IACX,EAAE,OAAO,OAAY;QACjB,QAAQ,KAAK,CAAC,0BAA0B;QACxC,OAAO;YACH,SAAS;YACT,SAAS;QACb;IACJ;AACJ;AAEO,MAAM,cAAc;IACvB,IAAI;QACA,MAAM,WAAW,MAAM,0BAA0B;QACjD,IAAI,CAAC,SAAS,EAAE,EAAE;YACd,OAAO;QACX;QAEA,MAAM,OAAO,MAAM,SAAS,IAAI;QAChC,OAAO;IAEX,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,kCAAkC;QAChD,OAAO;IACX;AACJ;AAEO,MAAM,qBAAqB,OAAO;IACrC,IAAI;QACA,MAAM,WAAW,MAAM,0BAA0B,oBAAoB;YACjE,QAAQ;YACR,MAAM,KAAK,SAAS,CAAC;QACzB;QAEA,MAAM,OAAO,MAAM,SAAS,IAAI;QAChC,OAAO;IACX,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,gCAAgC;QAC9C,OAAO;YACH,SAAS;YACT,SAAS;QACb;IACJ;AACJ","debugId":null}},
    {"offset": {"line": 105, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Bruce%20Vo/Documents/project/Streaming_Platform/frontend/constants/index.ts"],"sourcesContent":["export const THEMES = [\r\n    {\r\n        name: \"light\",\r\n        label: \"Light\",\r\n        colors: [\"#ffffff\", \"#5a67d8\", \"#8b5cf6\", \"#1a202c\"],\r\n    },\r\n    {\r\n        name: \"dark\",\r\n        label: \"Dark\",\r\n        colors: [\"#1f2937\", \"#8b5cf6\", \"#ec4899\", \"#1a202c\"],\r\n    },\r\n    {\r\n        name: \"cupcake\",\r\n        label: \"Cupcake\",\r\n        colors: [\"#f5f5f4\", \"#65c3c8\", \"#ef9fbc\", \"#291334\"],\r\n    },\r\n    {\r\n        name: \"forest\",\r\n        label: \"Forest\",\r\n        colors: [\"#1f1d1d\", \"#3ebc96\", \"#70c217\", \"#e2e8f0\"],\r\n    },\r\n    {\r\n        name: \"bumblebee\",\r\n        label: \"Bumblebee\",\r\n        colors: [\"#ffffff\", \"#f8e36f\", \"#f0d50c\", \"#1c1917\"],\r\n    },\r\n    {\r\n        name: \"emerald\",\r\n        label: \"Emerald\",\r\n        colors: [\"#ffffff\", \"#66cc8a\", \"#3b82f6\", \"#1e3a8a\"],\r\n    },\r\n    {\r\n        name: \"corporate\",\r\n        label: \"Corporate\",\r\n        colors: [\"#ffffff\", \"#4b6bfb\", \"#7b92b2\", \"#1d232a\"],\r\n    },\r\n    {\r\n        name: \"synthwave\",\r\n        label: \"Synthwave\",\r\n        colors: [\"#2d1b69\", \"#e779c1\", \"#58c7f3\", \"#f8f8f2\"],\r\n    },\r\n    {\r\n        name: \"retro\",\r\n        label: \"Retro\",\r\n        colors: [\"#e4d8b4\", \"#ea6962\", \"#6aaa64\", \"#282425\"],\r\n    },\r\n    {\r\n        name: \"cyberpunk\",\r\n        label: \"Cyberpunk\",\r\n        colors: [\"#ffee00\", \"#ff7598\", \"#75d1f0\", \"#1a103d\"],\r\n    },\r\n    {\r\n        name: \"valentine\",\r\n        label: \"Valentine\",\r\n        colors: [\"#f0d6e8\", \"#e96d7b\", \"#a991f7\", \"#37243c\"],\r\n    },\r\n    {\r\n        name: \"halloween\",\r\n        label: \"Halloween\",\r\n        colors: [\"#0d0d0d\", \"#ff7800\", \"#006400\", \"#ffffff\"],\r\n    },\r\n    {\r\n        name: \"garden\",\r\n        label: \"Garden\",\r\n        colors: [\"#e9e7e7\", \"#ec4899\", \"#16a34a\", \"#374151\"],\r\n    },\r\n\r\n    {\r\n        name: \"aqua\",\r\n        label: \"Aqua\",\r\n        colors: [\"#193549\", \"#4cd4e3\", \"#9059ff\", \"#f8d766\"],\r\n    },\r\n    {\r\n        name: \"lofi\",\r\n        label: \"Lofi\",\r\n        colors: [\"#0f0f0f\", \"#1a1919\", \"#232323\", \"#2c2c2c\"],\r\n    },\r\n    {\r\n        name: \"pastel\",\r\n        label: \"Pastel\",\r\n        colors: [\"#f7f3f5\", \"#d1c1d7\", \"#a1e3d8\", \"#4a98f1\"],\r\n    },\r\n    {\r\n        name: \"fantasy\",\r\n        label: \"Fantasy\",\r\n        colors: [\"#ffe7d6\", \"#a21caf\", \"#3b82f6\", \"#f59e0b\"],\r\n    },\r\n    {\r\n        name: \"wireframe\",\r\n        label: \"Wireframe\",\r\n        colors: [\"#e6e6e6\", \"#b3b3b3\", \"#b3b3b3\", \"#888888\"],\r\n    },\r\n    {\r\n        name: \"black\",\r\n        label: \"Black\",\r\n        colors: [\"#000000\", \"#191919\", \"#313131\", \"#4a4a4a\"],\r\n    },\r\n    {\r\n        name: \"luxury\",\r\n        label: \"Luxury\",\r\n        colors: [\"#171618\", \"#1e293b\", \"#94589c\", \"#d4a85a\"],\r\n    },\r\n    {\r\n        name: \"dracula\",\r\n        label: \"Dracula\",\r\n        colors: [\"#282a36\", \"#ff79c6\", \"#bd93f9\", \"#f8f8f2\"],\r\n    },\r\n    {\r\n        name: \"cmyk\",\r\n        label: \"CMYK\",\r\n        colors: [\"#f0f0f0\", \"#0891b2\", \"#ec4899\", \"#facc15\"],\r\n    },\r\n    {\r\n        name: \"autumn\",\r\n        label: \"Autumn\",\r\n        colors: [\"#f2f2f2\", \"#8c1f11\", \"#f28c18\", \"#6f4930\"],\r\n    },\r\n    {\r\n        name: \"business\",\r\n        label: \"Business\",\r\n        colors: [\"#f5f5f5\", \"#1e40af\", \"#3b82f6\", \"#f97316\"],\r\n    },\r\n    {\r\n        name: \"acid\",\r\n        label: \"Acid\",\r\n        colors: [\"#110e0e\", \"#ff00f2\", \"#ff7a00\", \"#99ff01\"],\r\n    },\r\n    {\r\n        name: \"lemonade\",\r\n        label: \"Lemonade\",\r\n        colors: [\"#ffffff\", \"#67e8f9\", \"#f5d742\", \"#2c3333\"],\r\n    },\r\n    {\r\n        name: \"night\",\r\n        label: \"Night\",\r\n        colors: [\"#0f172a\", \"#38bdf8\", \"#818cf8\", \"#e2e8f0\"],\r\n    },\r\n    {\r\n        name: \"coffee\",\r\n        label: \"Coffee\",\r\n        colors: [\"#20161f\", \"#dd9866\", \"#497174\", \"#eeeeee\"],\r\n    },\r\n    {\r\n        name: \"winter\",\r\n        label: \"Winter\",\r\n        colors: [\"#ffffff\", \"#0284c7\", \"#d946ef\", \"#0f172a\"],\r\n    },\r\n    {\r\n        name: \"dim\",\r\n        label: \"Dim\",\r\n        colors: [\"#1c1c27\", \"#10b981\", \"#ff5a5f\", \"#0f172a\"],\r\n    },\r\n    {\r\n        name: \"nord\",\r\n        label: \"Nord\",\r\n        colors: [\"#eceff4\", \"#5e81ac\", \"#81a1c1\", \"#3b4252\"],\r\n    },\r\n    {\r\n        name: \"sunset\",\r\n        label: \"Sunset\",\r\n        colors: [\"#1e293b\", \"#f5734c\", \"#ec4899\", \"#ffffff\"],\r\n    },\r\n];\r\n\r\nexport const LANGUAGES = [\r\n    \"English\",\r\n    \"Spanish\",\r\n    \"French\",\r\n    \"German\",\r\n    \"Mandarin\",\r\n    \"Japanese\",\r\n    \"Korean\",\r\n    \"Hindi\",\r\n    \"Russian\",\r\n    \"Portuguese\",\r\n    \"Arabic\",\r\n    \"Italian\",\r\n    \"Turkish\",\r\n    \"Dutch\",\r\n];\r\n\r\nexport const LANGUAGE_TO_FLAG = {\r\n    english: \"gb\",\r\n    spanish: \"es\",\r\n    french: \"fr\",\r\n    german: \"de\",\r\n    mandarin: \"cn\",\r\n    japanese: \"jp\",\r\n    korean: \"kr\",\r\n    hindi: \"in\",\r\n    russian: \"ru\",\r\n    portuguese: \"pt\",\r\n    arabic: \"sa\",\r\n    italian: \"it\",\r\n    turkish: \"tr\",\r\n    dutch: \"nl\",\r\n};"],"names":[],"mappings":";;;;;AAAO,MAAM,SAAS;IAClB;QACI,MAAM;QACN,OAAO;QACP,QAAQ;YAAC;YAAW;YAAW;YAAW;SAAU;IACxD;IACA;QACI,MAAM;QACN,OAAO;QACP,QAAQ;YAAC;YAAW;YAAW;YAAW;SAAU;IACxD;IACA;QACI,MAAM;QACN,OAAO;QACP,QAAQ;YAAC;YAAW;YAAW;YAAW;SAAU;IACxD;IACA;QACI,MAAM;QACN,OAAO;QACP,QAAQ;YAAC;YAAW;YAAW;YAAW;SAAU;IACxD;IACA;QACI,MAAM;QACN,OAAO;QACP,QAAQ;YAAC;YAAW;YAAW;YAAW;SAAU;IACxD;IACA;QACI,MAAM;QACN,OAAO;QACP,QAAQ;YAAC;YAAW;YAAW;YAAW;SAAU;IACxD;IACA;QACI,MAAM;QACN,OAAO;QACP,QAAQ;YAAC;YAAW;YAAW;YAAW;SAAU;IACxD;IACA;QACI,MAAM;QACN,OAAO;QACP,QAAQ;YAAC;YAAW;YAAW;YAAW;SAAU;IACxD;IACA;QACI,MAAM;QACN,OAAO;QACP,QAAQ;YAAC;YAAW;YAAW;YAAW;SAAU;IACxD;IACA;QACI,MAAM;QACN,OAAO;QACP,QAAQ;YAAC;YAAW;YAAW;YAAW;SAAU;IACxD;IACA;QACI,MAAM;QACN,OAAO;QACP,QAAQ;YAAC;YAAW;YAAW;YAAW;SAAU;IACxD;IACA;QACI,MAAM;QACN,OAAO;QACP,QAAQ;YAAC;YAAW;YAAW;YAAW;SAAU;IACxD;IACA;QACI,MAAM;QACN,OAAO;QACP,QAAQ;YAAC;YAAW;YAAW;YAAW;SAAU;IACxD;IAEA;QACI,MAAM;QACN,OAAO;QACP,QAAQ;YAAC;YAAW;YAAW;YAAW;SAAU;IACxD;IACA;QACI,MAAM;QACN,OAAO;QACP,QAAQ;YAAC;YAAW;YAAW;YAAW;SAAU;IACxD;IACA;QACI,MAAM;QACN,OAAO;QACP,QAAQ;YAAC;YAAW;YAAW;YAAW;SAAU;IACxD;IACA;QACI,MAAM;QACN,OAAO;QACP,QAAQ;YAAC;YAAW;YAAW;YAAW;SAAU;IACxD;IACA;QACI,MAAM;QACN,OAAO;QACP,QAAQ;YAAC;YAAW;YAAW;YAAW;SAAU;IACxD;IACA;QACI,MAAM;QACN,OAAO;QACP,QAAQ;YAAC;YAAW;YAAW;YAAW;SAAU;IACxD;IACA;QACI,MAAM;QACN,OAAO;QACP,QAAQ;YAAC;YAAW;YAAW;YAAW;SAAU;IACxD;IACA;QACI,MAAM;QACN,OAAO;QACP,QAAQ;YAAC;YAAW;YAAW;YAAW;SAAU;IACxD;IACA;QACI,MAAM;QACN,OAAO;QACP,QAAQ;YAAC;YAAW;YAAW;YAAW;SAAU;IACxD;IACA;QACI,MAAM;QACN,OAAO;QACP,QAAQ;YAAC;YAAW;YAAW;YAAW;SAAU;IACxD;IACA;QACI,MAAM;QACN,OAAO;QACP,QAAQ;YAAC;YAAW;YAAW;YAAW;SAAU;IACxD;IACA;QACI,MAAM;QACN,OAAO;QACP,QAAQ;YAAC;YAAW;YAAW;YAAW;SAAU;IACxD;IACA;QACI,MAAM;QACN,OAAO;QACP,QAAQ;YAAC;YAAW;YAAW;YAAW;SAAU;IACxD;IACA;QACI,MAAM;QACN,OAAO;QACP,QAAQ;YAAC;YAAW;YAAW;YAAW;SAAU;IACxD;IACA;QACI,MAAM;QACN,OAAO;QACP,QAAQ;YAAC;YAAW;YAAW;YAAW;SAAU;IACxD;IACA;QACI,MAAM;QACN,OAAO;QACP,QAAQ;YAAC;YAAW;YAAW;YAAW;SAAU;IACxD;IACA;QACI,MAAM;QACN,OAAO;QACP,QAAQ;YAAC;YAAW;YAAW;YAAW;SAAU;IACxD;IACA;QACI,MAAM;QACN,OAAO;QACP,QAAQ;YAAC;YAAW;YAAW;YAAW;SAAU;IACxD;IACA;QACI,MAAM;QACN,OAAO;QACP,QAAQ;YAAC;YAAW;YAAW;YAAW;SAAU;IACxD;CACH;AAEM,MAAM,YAAY;IACrB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACH;AAEM,MAAM,mBAAmB;IAC5B,SAAS;IACT,SAAS;IACT,QAAQ;IACR,QAAQ;IACR,UAAU;IACV,UAAU;IACV,QAAQ;IACR,OAAO;IACP,SAAS;IACT,YAAY;IACZ,QAAQ;IACR,SAAS;IACT,SAAS;IACT,OAAO;AACX","debugId":null}},
    {"offset": {"line": 473, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Bruce%20Vo/Documents/project/Streaming_Platform/frontend/app/%28protected%29/onBoarding/page.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useState } from \"react\";\r\nimport toast from \"react-hot-toast\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport { useAuth } from \"@/contexts/AuthContext\";\r\nimport { completeOnBoarding } from \"@/lib/api\";\r\nimport { LoaderIcon, MapPinIcon, ShipWheelIcon, ShuffleIcon, CameraIcon } from \"lucide-react\";\r\nimport { LANGUAGES } from \"@/constants\";\r\nimport Image from \"next/image\";\r\n\r\nexport default function OnboardingPage() {\r\n    const router = useRouter();\r\n    const { user, updateUser } = useAuth();\r\n    \r\n    const [profilePic, setProfilePic] = useState(user?.profilePic || \"\");\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [errors, setErrors] = useState<any>({});\r\n\r\n    const handleRandomAvatar = () => {\r\n        const idx = Math.floor(Math.random() * 100) + 1;\r\n        const randomAvatar = `https://avatar.iran.liara.run/public/${idx}.png`;\r\n        setProfilePic(randomAvatar);\r\n        toast.success(\"Random profile picture generated!\");\r\n    };\r\n\r\n    const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n        setIsLoading(true);\r\n        setErrors({});\r\n\r\n        const formData = new FormData(e.currentTarget);\r\n        const fullName = (formData.get('fullName') as string)?.trim();\r\n        const bio = (formData.get('bio') as string)?.trim();\r\n        const nativeLanguage = formData.get('nativeLanguage') as string;\r\n        const learningLanguage = formData.get('learningLanguage') as string;\r\n        const location = (formData.get('location') as string)?.trim();\r\n\r\n        // Client-side validation\r\n        const newErrors: any = {};\r\n        if (!fullName) newErrors.fullName = 'Full name is required';\r\n        if (!nativeLanguage) newErrors.nativeLanguage = 'Native language is required';\r\n        if (!learningLanguage) newErrors.learningLanguage = 'Learning language is required';\r\n        if (nativeLanguage === learningLanguage) {\r\n            newErrors.learningLanguage = 'Learning language must be different from native language';\r\n        }\r\n\r\n        if (Object.keys(newErrors).length > 0) {\r\n            setErrors(newErrors);\r\n            setIsLoading(false);\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const result = await completeOnBoarding({\r\n                fullName,\r\n                bio: bio || \"\",\r\n                nativeLanguage,\r\n                learningLanguage,\r\n                location: location || \"\",\r\n                profilePic,\r\n            });\r\n\r\n            if (result.success && result.user) {\r\n                // Update user in context\r\n                updateUser(result.user);\r\n                \r\n                toast.success(\"Profile completed successfully!\");\r\n                \r\n                setTimeout(() => {\r\n                    router.push('/');\r\n                }, 1000);\r\n            } else {\r\n                toast.error(result.message || \"Failed to complete onboarding\");\r\n            }\r\n        } catch (error) {\r\n            toast.error(\"An unexpected error occurred\");\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"min-h-screen bg-base-100 flex items-center justify-center p-4\">\r\n            <div className=\"card bg-base-200 w-full max-w-3xl shadow-xl\">\r\n                <div className=\"card-body p-6 sm:p-8\">\r\n                    <h1 className=\"text-2xl sm:text-3xl font-bold text-center mb-6\">\r\n                        Complete Your Profile\r\n                    </h1>\r\n\r\n                    <form onSubmit={handleSubmit} className=\"space-y-6\">\r\n                        {/* PROFILE PIC CONTAINER */}\r\n                        <div className=\"flex flex-col items-center justify-center space-y-4\">\r\n                            {/* IMAGE PREVIEW */}\r\n                            <div className=\"relative w-32 h-32 rounded-full bg-base-300 overflow-hidden\">\r\n                                {profilePic ? (\r\n                                    <Image\r\n                                        src={profilePic}\r\n                                        alt=\"Profile Preview\"\r\n                                        fill\r\n                                        priority\r\n                                        className=\"object-cover\"\r\n                                        sizes=\"(max-width: 768px) 100vw, 33vw\"\r\n                                    />\r\n                                ) : (\r\n                                    <div className=\"flex items-center justify-center w-full h-full\">\r\n                                        <CameraIcon className=\"w-12 h-12 text-base-content opacity-40\" />\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n\r\n                            {/* Generate Random Avatar BTN */}\r\n                            <button \r\n                                type=\"button\" \r\n                                onClick={handleRandomAvatar} \r\n                                className=\"btn btn-accent\"\r\n                                disabled={isLoading}\r\n                            >\r\n                                <ShuffleIcon className=\"w-4 h-4 mr-2\" />\r\n                                Generate Random Avatar\r\n                            </button>\r\n                        </div>\r\n\r\n                        {/* FULL NAME */}\r\n                        <fieldset className=\"fieldset\">\r\n                            <label className=\"label\" htmlFor=\"fullName\">\r\n                                <span>Full Name *</span>\r\n                            </label>\r\n                            <input\r\n                                id=\"fullName\"\r\n                                type=\"text\"\r\n                                name=\"fullName\"\r\n                                defaultValue={user?.fullName || \"\"}\r\n                                className=\"input w-full\"\r\n                                placeholder=\"Your full name\"\r\n                                disabled={isLoading}\r\n                            />\r\n                            {errors.fullName && (\r\n                                <label className=\"label\">\r\n                                    <span className=\"text-error text-sm\">{errors.fullName}</span>\r\n                                </label>\r\n                            )}\r\n                        </fieldset>\r\n\r\n                        {/* BIO */}\r\n                        <fieldset className=\"fieldset\">\r\n                            <label className=\"label\" htmlFor=\"bio\">\r\n                                <span>Bio</span>\r\n                            </label>\r\n                            <textarea\r\n                                id=\"bio\"\r\n                                name=\"bio\"\r\n                                defaultValue={user?.bio || \"\"}\r\n                                className=\"textarea w-full h-24 resize-none\"\r\n                                placeholder=\"Tell others about yourself and your language learning goals\"\r\n                                disabled={isLoading}\r\n                            />\r\n                        </fieldset>\r\n\r\n                        {/* LANGUAGES */}\r\n                        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                            {/* NATIVE LANGUAGE */}\r\n                            <fieldset className=\"fieldset\">\r\n                                <label className=\"label\" htmlFor=\"nativeLanguage\">\r\n                                    <span>Native Language *</span>\r\n                                </label>\r\n                                <select\r\n                                    id=\"nativeLanguage\"\r\n                                    name=\"nativeLanguage\"\r\n                                    className=\"select w-full\"\r\n                                    defaultValue={user?.nativeLanguage || \"\"}\r\n                                    disabled={isLoading}\r\n                                >\r\n                                    <option value=\"\" disabled hidden>Select your native language</option>\r\n                                    {LANGUAGES.map((lang) => (\r\n                                        <option key={`native-${lang}`} value={lang.toLowerCase()}>\r\n                                            {lang}\r\n                                        </option>\r\n                                    ))}\r\n                                </select>\r\n                                {errors.nativeLanguage && (\r\n                                    <label className=\"label\">\r\n                                        <span className=\"text-error text-sm\">{errors.nativeLanguage}</span>\r\n                                    </label>\r\n                                )}\r\n                            </fieldset>\r\n\r\n                            {/* LEARNING LANGUAGE */}\r\n                            <fieldset className=\"fieldset\">\r\n                                <label className=\"label\" htmlFor=\"learningLanguage\">\r\n                                    <span>Learning Language *</span>\r\n                                </label>\r\n                                <select\r\n                                    id=\"learningLanguage\"\r\n                                    name=\"learningLanguage\"\r\n                                    className=\"select w-full\"\r\n                                    defaultValue={user?.learningLanguage || \"\"}\r\n                                    disabled={isLoading}\r\n                                >\r\n                                    <option value=\"\" disabled hidden>Select the language you want to learn</option>\r\n                                    {LANGUAGES.map((lang) => (\r\n                                        <option key={`learning-${lang}`} value={lang.toLowerCase()}>\r\n                                            {lang}\r\n                                        </option>\r\n                                    ))}\r\n                                </select>\r\n                                {errors.learningLanguage && (\r\n                                    <label className=\"label\">\r\n                                        <span className=\"text-error text-sm\">{errors.learningLanguage}</span>\r\n                                    </label>\r\n                                )}\r\n                            </fieldset>\r\n                        </div>\r\n\r\n                        {/* LOCATION */}\r\n                        <fieldset className=\"fieldset\">\r\n                            <label className=\"label\" htmlFor=\"location\">\r\n                                <span>Location</span>\r\n                            </label>\r\n                            <div className=\"relative\">\r\n                                <MapPinIcon className=\"absolute top-1/2 transform -translate-y-1/2 left-3 w-5 h-5 text-base-content opacity-70\" />\r\n                                <input\r\n                                    id=\"location\"\r\n                                    type=\"text\"\r\n                                    name=\"location\"\r\n                                    defaultValue={user?.location || \"\"}\r\n                                    className=\"input w-full pl-[2.5rem]\"\r\n                                    placeholder=\"City, Country\"\r\n                                    disabled={isLoading}\r\n                                />\r\n                            </div>\r\n                        </fieldset>\r\n\r\n                        {/* SUBMIT BUTTON */}\r\n                        <button \r\n                            className=\"btn btn-primary w-full\" \r\n                            disabled={isLoading} \r\n                            type=\"submit\"\r\n                        >\r\n                            {isLoading ? (\r\n                                <>\r\n                                    <LoaderIcon className=\"animate-spin size-5 mr-2\" />\r\n                                    Completing Onboarding...\r\n                                </>\r\n                            ) : (\r\n                                <>\r\n                                    <ShipWheelIcon className=\"size-5 mr-2\" />\r\n                                    Complete Onboarding\r\n                                </>\r\n                            )}\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;;AATA;;;;;;;;;AAWe,SAAS;;IACpB,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,EAAE,IAAI,EAAE,UAAU,EAAE,GAAG,CAAA,GAAA,2HAAA,CAAA,UAAO,AAAD;IAEnC,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE,MAAM,cAAc;IACjE,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAO,CAAC;IAE3C,MAAM,qBAAqB;QACvB,MAAM,MAAM,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,OAAO;QAC9C,MAAM,eAAe,CAAC,qCAAqC,EAAE,IAAI,IAAI,CAAC;QACtE,cAAc;QACd,0JAAA,CAAA,UAAK,CAAC,OAAO,CAAC;IAClB;IAEA,MAAM,eAAe,OAAO;QACxB,EAAE,cAAc;QAChB,aAAa;QACb,UAAU,CAAC;QAEX,MAAM,WAAW,IAAI,SAAS,EAAE,aAAa;QAC7C,MAAM,WAAY,SAAS,GAAG,CAAC,aAAwB;QACvD,MAAM,MAAO,SAAS,GAAG,CAAC,QAAmB;QAC7C,MAAM,iBAAiB,SAAS,GAAG,CAAC;QACpC,MAAM,mBAAmB,SAAS,GAAG,CAAC;QACtC,MAAM,WAAY,SAAS,GAAG,CAAC,aAAwB;QAEvD,yBAAyB;QACzB,MAAM,YAAiB,CAAC;QACxB,IAAI,CAAC,UAAU,UAAU,QAAQ,GAAG;QACpC,IAAI,CAAC,gBAAgB,UAAU,cAAc,GAAG;QAChD,IAAI,CAAC,kBAAkB,UAAU,gBAAgB,GAAG;QACpD,IAAI,mBAAmB,kBAAkB;YACrC,UAAU,gBAAgB,GAAG;QACjC;QAEA,IAAI,OAAO,IAAI,CAAC,WAAW,MAAM,GAAG,GAAG;YACnC,UAAU;YACV,aAAa;YACb;QACJ;QAEA,IAAI;YACA,MAAM,SAAS,MAAM,CAAA,GAAA,6GAAA,CAAA,qBAAkB,AAAD,EAAE;gBACpC;gBACA,KAAK,OAAO;gBACZ;gBACA;gBACA,UAAU,YAAY;gBACtB;YACJ;YAEA,IAAI,OAAO,OAAO,IAAI,OAAO,IAAI,EAAE;gBAC/B,yBAAyB;gBACzB,WAAW,OAAO,IAAI;gBAEtB,0JAAA,CAAA,UAAK,CAAC,OAAO,CAAC;gBAEd,WAAW;oBACP,OAAO,IAAI,CAAC;gBAChB,GAAG;YACP,OAAO;gBACH,0JAAA,CAAA,UAAK,CAAC,KAAK,CAAC,OAAO,OAAO,IAAI;YAClC;QACJ,EAAE,OAAO,OAAO;YACZ,0JAAA,CAAA,UAAK,CAAC,KAAK,CAAC;QAChB,SAAU;YACN,aAAa;QACjB;IACJ;IAEA,qBACI,6LAAC;QAAI,WAAU;kBACX,cAAA,6LAAC;YAAI,WAAU;sBACX,cAAA,6LAAC;gBAAI,WAAU;;kCACX,6LAAC;wBAAG,WAAU;kCAAkD;;;;;;kCAIhE,6LAAC;wBAAK,UAAU;wBAAc,WAAU;;0CAEpC,6LAAC;gCAAI,WAAU;;kDAEX,6LAAC;wCAAI,WAAU;kDACV,2BACG,6LAAC,gIAAA,CAAA,UAAK;4CACF,KAAK;4CACL,KAAI;4CACJ,IAAI;4CACJ,QAAQ;4CACR,WAAU;4CACV,OAAM;;;;;iEAGV,6LAAC;4CAAI,WAAU;sDACX,cAAA,6LAAC,6MAAA,CAAA,aAAU;gDAAC,WAAU;;;;;;;;;;;;;;;;kDAMlC,6LAAC;wCACG,MAAK;wCACL,SAAS;wCACT,WAAU;wCACV,UAAU;;0DAEV,6LAAC,+MAAA,CAAA,cAAW;gDAAC,WAAU;;;;;;4CAAiB;;;;;;;;;;;;;0CAMhD,6LAAC;gCAAS,WAAU;;kDAChB,6LAAC;wCAAM,WAAU;wCAAQ,SAAQ;kDAC7B,cAAA,6LAAC;sDAAK;;;;;;;;;;;kDAEV,6LAAC;wCACG,IAAG;wCACH,MAAK;wCACL,MAAK;wCACL,cAAc,MAAM,YAAY;wCAChC,WAAU;wCACV,aAAY;wCACZ,UAAU;;;;;;oCAEb,OAAO,QAAQ,kBACZ,6LAAC;wCAAM,WAAU;kDACb,cAAA,6LAAC;4CAAK,WAAU;sDAAsB,OAAO,QAAQ;;;;;;;;;;;;;;;;;0CAMjE,6LAAC;gCAAS,WAAU;;kDAChB,6LAAC;wCAAM,WAAU;wCAAQ,SAAQ;kDAC7B,cAAA,6LAAC;sDAAK;;;;;;;;;;;kDAEV,6LAAC;wCACG,IAAG;wCACH,MAAK;wCACL,cAAc,MAAM,OAAO;wCAC3B,WAAU;wCACV,aAAY;wCACZ,UAAU;;;;;;;;;;;;0CAKlB,6LAAC;gCAAI,WAAU;;kDAEX,6LAAC;wCAAS,WAAU;;0DAChB,6LAAC;gDAAM,WAAU;gDAAQ,SAAQ;0DAC7B,cAAA,6LAAC;8DAAK;;;;;;;;;;;0DAEV,6LAAC;gDACG,IAAG;gDACH,MAAK;gDACL,WAAU;gDACV,cAAc,MAAM,kBAAkB;gDACtC,UAAU;;kEAEV,6LAAC;wDAAO,OAAM;wDAAG,QAAQ;wDAAC,MAAM;kEAAC;;;;;;oDAChC,qHAAA,CAAA,YAAS,CAAC,GAAG,CAAC,CAAC,qBACZ,6LAAC;4DAA8B,OAAO,KAAK,WAAW;sEACjD;2DADQ,CAAC,OAAO,EAAE,MAAM;;;;;;;;;;;4CAKpC,OAAO,cAAc,kBAClB,6LAAC;gDAAM,WAAU;0DACb,cAAA,6LAAC;oDAAK,WAAU;8DAAsB,OAAO,cAAc;;;;;;;;;;;;;;;;;kDAMvE,6LAAC;wCAAS,WAAU;;0DAChB,6LAAC;gDAAM,WAAU;gDAAQ,SAAQ;0DAC7B,cAAA,6LAAC;8DAAK;;;;;;;;;;;0DAEV,6LAAC;gDACG,IAAG;gDACH,MAAK;gDACL,WAAU;gDACV,cAAc,MAAM,oBAAoB;gDACxC,UAAU;;kEAEV,6LAAC;wDAAO,OAAM;wDAAG,QAAQ;wDAAC,MAAM;kEAAC;;;;;;oDAChC,qHAAA,CAAA,YAAS,CAAC,GAAG,CAAC,CAAC,qBACZ,6LAAC;4DAAgC,OAAO,KAAK,WAAW;sEACnD;2DADQ,CAAC,SAAS,EAAE,MAAM;;;;;;;;;;;4CAKtC,OAAO,gBAAgB,kBACpB,6LAAC;gDAAM,WAAU;0DACb,cAAA,6LAAC;oDAAK,WAAU;8DAAsB,OAAO,gBAAgB;;;;;;;;;;;;;;;;;;;;;;;0CAO7E,6LAAC;gCAAS,WAAU;;kDAChB,6LAAC;wCAAM,WAAU;wCAAQ,SAAQ;kDAC7B,cAAA,6LAAC;sDAAK;;;;;;;;;;;kDAEV,6LAAC;wCAAI,WAAU;;0DACX,6LAAC,iNAAA,CAAA,aAAU;gDAAC,WAAU;;;;;;0DACtB,6LAAC;gDACG,IAAG;gDACH,MAAK;gDACL,MAAK;gDACL,cAAc,MAAM,YAAY;gDAChC,WAAU;gDACV,aAAY;gDACZ,UAAU;;;;;;;;;;;;;;;;;;0CAMtB,6LAAC;gCACG,WAAU;gCACV,UAAU;gCACV,MAAK;0CAEJ,0BACG;;sDACI,6LAAC,6MAAA,CAAA,aAAU;4CAAC,WAAU;;;;;;wCAA6B;;iEAIvD;;sDACI,6LAAC,uNAAA,CAAA,gBAAa;4CAAC,WAAU;;;;;;wCAAgB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAU7E;GArPwB;;QACL,qIAAA,CAAA,YAAS;QACK,2HAAA,CAAA,UAAO;;;KAFhB","debugId":null}}]
}