(globalThis.TURBOPACK = globalThis.TURBOPACK || []).push([typeof document === "object" ? document.currentScript : undefined, {

"[project]/node_modules/stream-chat-react/dist/components/Message/utils.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "ACTIONS_NOT_WORKING_IN_THREAD": (()=>ACTIONS_NOT_WORKING_IN_THREAD),
    "MESSAGE_ACTIONS": (()=>MESSAGE_ACTIONS),
    "areMessagePropsEqual": (()=>areMessagePropsEqual),
    "areMessageUIPropsEqual": (()=>areMessageUIPropsEqual),
    "defaultPinPermissions": (()=>defaultPinPermissions),
    "getImages": (()=>getImages),
    "getMessageActions": (()=>getMessageActions),
    "getNonImageAttachments": (()=>getNonImageAttachments),
    "getReadByTooltipText": (()=>getReadByTooltipText),
    "isMessageBlocked": (()=>isMessageBlocked),
    "isMessageBounced": (()=>isMessageBounced),
    "isMessageEdited": (()=>isMessageEdited),
    "isOnlyEmojis": (()=>isOnlyEmojis),
    "isUserMuted": (()=>isUserMuted),
    "mapToUserNameOrId": (()=>mapToUserNameOrId),
    "messageHasAttachments": (()=>messageHasAttachments),
    "messageHasReactions": (()=>messageHasReactions),
    "shouldRenderMessageActions": (()=>shouldRenderMessageActions),
    "showMessageActionsBox": (()=>showMessageActionsBox),
    "validateAndGetMessage": (()=>validateAndGetMessage)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$fast$2d$compare$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/react-fast-compare/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$emoji$2d$regex$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/emoji-regex/index.js [app-client] (ecmascript)");
;
;
const validateAndGetMessage = (func, args)=>{
    if (!func || typeof func !== 'function') return null;
    // below is due to tests passing a single argument
    // rather than an array.
    if (!Array.isArray(args)) {
        args = [
            args
        ];
    }
    const returnValue = func(...args);
    if (typeof returnValue !== 'string') return null;
    return returnValue;
};
const isUserMuted = (message, mutes)=>{
    if (!mutes || !message) return false;
    const userMuted = mutes.filter((el)=>el.target.id === message.user?.id);
    return !!userMuted.length;
};
const MESSAGE_ACTIONS = {
    delete: 'delete',
    edit: 'edit',
    flag: 'flag',
    markUnread: 'markUnread',
    mute: 'mute',
    pin: 'pin',
    quote: 'quote',
    react: 'react',
    reply: 'reply'
};
const defaultPinPermissions = {
    commerce: {
        admin: true,
        anonymous: false,
        channel_member: false,
        channel_moderator: true,
        guest: false,
        member: false,
        moderator: true,
        owner: true,
        user: false
    },
    gaming: {
        admin: true,
        anonymous: false,
        channel_member: false,
        channel_moderator: true,
        guest: false,
        member: false,
        moderator: true,
        owner: false,
        user: false
    },
    livestream: {
        admin: true,
        anonymous: false,
        channel_member: false,
        channel_moderator: true,
        guest: false,
        member: false,
        moderator: true,
        owner: true,
        user: false
    },
    messaging: {
        admin: true,
        anonymous: false,
        channel_member: true,
        channel_moderator: true,
        guest: false,
        member: true,
        moderator: true,
        owner: true,
        user: false
    },
    team: {
        admin: true,
        anonymous: false,
        channel_member: true,
        channel_moderator: true,
        guest: false,
        member: true,
        moderator: true,
        owner: true,
        user: false
    }
};
const getMessageActions = (actions, { canDelete, canEdit, canFlag, canMarkUnread, canMute, canPin, canQuote, canReact, canReply })=>{
    const messageActionsAfterPermission = [];
    let messageActions = [];
    if (actions && typeof actions === 'boolean') {
        // If value of actions is true, then populate all the possible values
        messageActions = Object.keys(MESSAGE_ACTIONS);
    } else if (actions && actions.length > 0) {
        messageActions = [
            ...actions
        ];
    } else {
        return [];
    }
    if (canDelete && messageActions.indexOf(MESSAGE_ACTIONS.delete) > -1) {
        messageActionsAfterPermission.push(MESSAGE_ACTIONS.delete);
    }
    if (canEdit && messageActions.indexOf(MESSAGE_ACTIONS.edit) > -1) {
        messageActionsAfterPermission.push(MESSAGE_ACTIONS.edit);
    }
    if (canFlag && messageActions.indexOf(MESSAGE_ACTIONS.flag) > -1) {
        messageActionsAfterPermission.push(MESSAGE_ACTIONS.flag);
    }
    if (canMarkUnread && messageActions.indexOf(MESSAGE_ACTIONS.markUnread) > -1) {
        messageActionsAfterPermission.push(MESSAGE_ACTIONS.markUnread);
    }
    if (canMute && messageActions.indexOf(MESSAGE_ACTIONS.mute) > -1) {
        messageActionsAfterPermission.push(MESSAGE_ACTIONS.mute);
    }
    if (canPin && messageActions.indexOf(MESSAGE_ACTIONS.pin) > -1) {
        messageActionsAfterPermission.push(MESSAGE_ACTIONS.pin);
    }
    if (canQuote && messageActions.indexOf(MESSAGE_ACTIONS.quote) > -1) {
        messageActionsAfterPermission.push(MESSAGE_ACTIONS.quote);
    }
    if (canReact && messageActions.indexOf(MESSAGE_ACTIONS.react) > -1) {
        messageActionsAfterPermission.push(MESSAGE_ACTIONS.react);
    }
    if (canReply && messageActions.indexOf(MESSAGE_ACTIONS.reply) > -1) {
        messageActionsAfterPermission.push(MESSAGE_ACTIONS.reply);
    }
    return messageActionsAfterPermission;
};
const ACTIONS_NOT_WORKING_IN_THREAD = [
    MESSAGE_ACTIONS.pin,
    MESSAGE_ACTIONS.reply,
    MESSAGE_ACTIONS.markUnread
];
const showMessageActionsBox = (actions, inThread)=>shouldRenderMessageActions({
        inThread,
        messageActions: actions
    });
const shouldRenderMessageActions = ({ customMessageActions, CustomMessageActionsList, inThread, messageActions })=>{
    if (typeof CustomMessageActionsList !== 'undefined' || typeof customMessageActions !== 'undefined') return true;
    if (!messageActions.length) return false;
    if (inThread && messageActions.filter((action)=>!ACTIONS_NOT_WORKING_IN_THREAD.includes(action)).length === 0) {
        return false;
    }
    if (messageActions.length === 1 && (messageActions.includes(MESSAGE_ACTIONS.react) || messageActions.includes(MESSAGE_ACTIONS.reply))) {
        return false;
    }
    if (messageActions.length === 2 && messageActions.includes(MESSAGE_ACTIONS.react) && messageActions.includes(MESSAGE_ACTIONS.reply)) {
        return false;
    }
    return true;
};
function areMessagesEqual(prevMessage, nextMessage) {
    const areBaseMessagesEqual = (prevMessage, nextMessage)=>prevMessage.deleted_at === nextMessage.deleted_at && prevMessage.latest_reactions?.length === nextMessage.latest_reactions?.length && prevMessage.own_reactions?.length === nextMessage.own_reactions?.length && prevMessage.pinned === nextMessage.pinned && prevMessage.reply_count === nextMessage.reply_count && prevMessage.status === nextMessage.status && prevMessage.text === nextMessage.text && prevMessage.type === nextMessage.type && prevMessage.updated_at === nextMessage.updated_at && prevMessage.user?.updated_at === nextMessage.user?.updated_at;
    return areBaseMessagesEqual(prevMessage, nextMessage) && Boolean(prevMessage.quoted_message) === Boolean(nextMessage.quoted_message) && (!prevMessage.quoted_message && !nextMessage.quoted_message || areBaseMessagesEqual(prevMessage.quoted_message, nextMessage.quoted_message));
}
const areMessagePropsEqual = (prevProps, nextProps)=>{
    const { message: prevMessage, Message: prevMessageUI } = prevProps;
    const { message: nextMessage, Message: nextMessageUI } = nextProps;
    if (prevMessageUI !== nextMessageUI) return false;
    if (prevProps.endOfGroup !== nextProps.endOfGroup) return false;
    if (nextProps.showDetailedReactions !== prevProps.showDetailedReactions) {
        return false;
    }
    if (nextProps.closeReactionSelectorOnClick !== prevProps.closeReactionSelectorOnClick) {
        return false;
    }
    const messagesAreEqual = areMessagesEqual(prevMessage, nextMessage);
    if (!messagesAreEqual) return false;
    const deepEqualProps = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$fast$2d$compare$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"])(nextProps.messageActions, prevProps.messageActions) && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$fast$2d$compare$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"])(nextProps.readBy, prevProps.readBy) && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$fast$2d$compare$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"])(nextProps.highlighted, prevProps.highlighted) && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$fast$2d$compare$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"])(nextProps.groupStyles, prevProps.groupStyles) && // last 3 messages can have different group styles
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$fast$2d$compare$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"])(nextProps.mutes, prevProps.mutes) && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$fast$2d$compare$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"])(nextProps.lastReceivedId, prevProps.lastReceivedId);
    if (!deepEqualProps) return false;
    return prevProps.messageListRect === nextProps.messageListRect // MessageList wrapper layout changes
    ;
};
const areMessageUIPropsEqual = (prevProps, nextProps)=>{
    const { lastReceivedId: prevLastReceivedId, message: prevMessage } = prevProps;
    const { lastReceivedId: nextLastReceivedId, message: nextMessage } = nextProps;
    if (prevProps.editing !== nextProps.editing) return false;
    if (prevProps.highlighted !== nextProps.highlighted) return false;
    if (prevProps.endOfGroup !== nextProps.endOfGroup) return false;
    if (prevProps.mutes?.length !== nextProps.mutes?.length) return false;
    if (prevProps.readBy?.length !== nextProps.readBy?.length) return false;
    if (prevProps.groupStyles !== nextProps.groupStyles) return false;
    if (prevProps.showDetailedReactions !== nextProps.showDetailedReactions) {
        return false;
    }
    if ((prevMessage.id === prevLastReceivedId || prevMessage.id === nextLastReceivedId) && prevLastReceivedId !== nextLastReceivedId) {
        return false;
    }
    return areMessagesEqual(prevMessage, nextMessage);
};
const messageHasReactions = (message)=>Object.values(message?.reaction_groups ?? {}).some(({ count })=>count > 0);
const messageHasAttachments = (message)=>!!message?.attachments && !!message.attachments.length;
const getImages = (message)=>{
    if (!message?.attachments) {
        return [];
    }
    return message.attachments.filter((item)=>item.type === 'image');
};
const getNonImageAttachments = (message)=>{
    if (!message?.attachments) {
        return [];
    }
    return message.attachments.filter((item)=>item.type !== 'image');
};
const mapToUserNameOrId = (user)=>user.name || user.id;
const getReadByTooltipText = (users, t, client, tooltipUserNameMapper)=>{
    let outStr = '';
    if (!t) {
        throw new Error('getReadByTooltipText was called, but translation function is not available');
    }
    if (!tooltipUserNameMapper) {
        throw new Error('getReadByTooltipText was called, but tooltipUserNameMapper function is not available');
    }
    // first filter out client user, so restLength won't count it
    const otherUsers = users.filter((item)=>item && client?.user && item.id !== client.user.id).map(tooltipUserNameMapper);
    const slicedArr = otherUsers.slice(0, 5);
    const restLength = otherUsers.length - slicedArr.length;
    if (slicedArr.length === 1) {
        outStr = `${slicedArr[0]} `;
    } else if (slicedArr.length === 2) {
        // joins all with "and" but =no commas
        // example: "bob and sam"
        outStr = t('{{ firstUser }} and {{ secondUser }}', {
            firstUser: slicedArr[0],
            secondUser: slicedArr[1]
        });
    } else if (slicedArr.length > 2) {
        // joins all with commas, but last one gets ", and" (oxford comma!)
        // example: "bob, joe, sam and 4 more"
        if (restLength === 0) {
            // mutate slicedArr to remove last user to display it separately
            const lastUser = slicedArr.splice(slicedArr.length - 1, 1);
            outStr = t('{{ commaSeparatedUsers }}, and {{ lastUser }}', {
                commaSeparatedUsers: slicedArr.join(', '),
                lastUser
            });
        } else {
            outStr = t('{{ commaSeparatedUsers }} and {{ moreCount }} more', {
                commaSeparatedUsers: slicedArr.join(', '),
                moreCount: restLength
            });
        }
    }
    return outStr;
};
const isOnlyEmojis = (text)=>{
    if (!text) return false;
    const noEmojis = text.replace((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$emoji$2d$regex$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"])(), '');
    const noSpace = noEmojis.replace(/[\s\n]/gm, '');
    return !noSpace;
};
const isMessageBounced = (message)=>message.type === 'error' && (message.moderation_details?.action === 'MESSAGE_RESPONSE_ACTION_BOUNCE' || message.moderation?.action === 'bounce');
const isMessageBlocked = (message)=>message.type === 'error' && (message.moderation_details?.action === 'MESSAGE_RESPONSE_ACTION_REMOVE' || message.moderation?.action === 'remove');
const isMessageEdited = (message)=>!!message.message_text_updated_at;
}}),
"[project]/node_modules/stream-chat-react/dist/components/Message/hooks/useActionHandler.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "handleActionWarning": (()=>handleActionWarning),
    "useActionHandler": (()=>useActionHandler)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$ChannelActionContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/context/ChannelActionContext.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$ChannelStateContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/context/ChannelStateContext.js [app-client] (ecmascript)");
;
;
const handleActionWarning = `Action handler was called, but it is missing one of its required arguments. 
Make sure the ChannelAction and ChannelState contexts are properly set and the hook is initialized with a valid message.`;
function useActionHandler(message) {
    const { removeMessage, updateMessage } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$ChannelActionContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useChannelActionContext"])('useActionHandler');
    const { channel } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$ChannelStateContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useChannelStateContext"])('useActionHandler');
    return async (dataOrName, value, event)=>{
        if (event) event.preventDefault();
        if (!message || !updateMessage || !removeMessage || !channel) {
            console.warn(handleActionWarning);
            return;
        }
        const messageID = message.id;
        let formData = {};
        // deprecated: value&name should be removed in favor of data obj
        if (typeof dataOrName === 'string') {
            formData[dataOrName] = value;
        } else {
            formData = {
                ...dataOrName
            };
        }
        if (messageID) {
            const data = await channel.sendAction(messageID, formData);
            if (data?.message) {
                updateMessage(data.message);
            } else {
                removeMessage(message);
            }
        }
    };
}
}}),
"[project]/node_modules/stream-chat-react/dist/components/Message/hooks/useDeleteHandler.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "useDeleteHandler": (()=>useDeleteHandler)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/Message/utils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$ChannelActionContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/context/ChannelActionContext.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$ChatContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/context/ChatContext.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$TranslationContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/context/TranslationContext.js [app-client] (ecmascript)");
;
;
;
;
const useDeleteHandler = (message, notifications = {})=>{
    const { getErrorNotification, notify } = notifications;
    const { deleteMessage, updateMessage } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$ChannelActionContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useChannelActionContext"])('useDeleteHandler');
    const { client } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$ChatContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useChatContext"])('useDeleteHandler');
    const { t } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$TranslationContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useTranslationContext"])('useDeleteHandler');
    return async (event)=>{
        event.preventDefault();
        if (!message?.id || !client || !updateMessage) {
            return;
        }
        try {
            const deletedMessage = await deleteMessage(message);
            updateMessage(deletedMessage);
        } catch (e) {
            const errorMessage = getErrorNotification && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["validateAndGetMessage"])(getErrorNotification, [
                message
            ]);
            if (notify) notify(errorMessage || t('Error deleting message'), 'error');
        }
    };
};
}}),
"[project]/node_modules/stream-chat-react/dist/components/Message/hooks/useEditHandler.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "useEditHandler": (()=>useEditHandler)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
;
const useEditHandler = (customInitialState = false, customSetEditing, customClearEditingHandler)=>{
    const [editing, setEditing] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(customInitialState);
    const setEdit = customSetEditing || ((event)=>{
        if (event?.preventDefault) {
            event.preventDefault();
        }
        setEditing(true);
    });
    const clearEdit = customClearEditingHandler || ((event)=>{
        if (event?.preventDefault) {
            event.preventDefault();
        }
        setEditing(false);
    });
    return {
        clearEdit,
        editing,
        setEdit
    };
};
}}),
"[project]/node_modules/stream-chat-react/dist/components/Message/hooks/useFlagHandler.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "missingUseFlagHandlerParameterWarning": (()=>missingUseFlagHandlerParameterWarning),
    "useFlagHandler": (()=>useFlagHandler)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/Message/utils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$ChatContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/context/ChatContext.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$TranslationContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/context/TranslationContext.js [app-client] (ecmascript)");
;
;
;
const missingUseFlagHandlerParameterWarning = 'useFlagHandler was called but it is missing one or more necessary parameters.';
const useFlagHandler = (message, notifications = {})=>{
    const { client } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$ChatContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useChatContext"])('useFlagHandler');
    const { t } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$TranslationContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useTranslationContext"])('useFlagHandler');
    return async (event)=>{
        event.preventDefault();
        const { getErrorNotification, getSuccessNotification, notify } = notifications;
        if (!client || !t || !notify || !message?.id) {
            console.warn(missingUseFlagHandlerParameterWarning);
            return;
        }
        if (client.user?.banned) {
            return notify(t('Error adding flag'), 'error');
        }
        try {
            await client.flagMessage(message.id);
            const successMessage = getSuccessNotification && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["validateAndGetMessage"])(getSuccessNotification, [
                message
            ]);
            notify(successMessage || t('Message has been successfully flagged'), 'success');
        } catch (e) {
            const errorMessage = getErrorNotification && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["validateAndGetMessage"])(getErrorNotification, [
                message
            ]);
            notify(errorMessage || t('Error adding flag'), 'error');
        }
    };
};
}}),
"[project]/node_modules/stream-chat-react/dist/components/Message/hooks/useMarkUnreadHandler.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "useMarkUnreadHandler": (()=>useMarkUnreadHandler)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/Message/utils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$ChannelStateContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/context/ChannelStateContext.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$TranslationContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/context/TranslationContext.js [app-client] (ecmascript)");
;
;
const useMarkUnreadHandler = (message, notifications = {})=>{
    const { getErrorNotification, getSuccessNotification, notify } = notifications;
    const { channel } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$ChannelStateContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useChannelStateContext"])('useMarkUnreadHandler');
    const { t } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$TranslationContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useTranslationContext"])('useMarkUnreadHandler');
    return async (event)=>{
        event.preventDefault();
        if (!message?.id) {
            console.warn('Mark unread handler does not have access to message id');
            return;
        }
        try {
            await channel.markUnread({
                message_id: message.id
            });
            if (!notify) return;
            const successMessage = getSuccessNotification && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["validateAndGetMessage"])(getSuccessNotification, [
                message
            ]);
            if (successMessage) notify(successMessage, 'success');
        } catch (e) {
            if (!notify) return;
            const errorMessage = getErrorNotification && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["validateAndGetMessage"])(getErrorNotification, [
                message
            ]);
            if (getErrorNotification && !errorMessage) return;
            notify(errorMessage || t('Error marking message unread. Cannot mark unread messages older than the newest 100 channel messages.'), 'error');
        }
    };
};
}}),
"[project]/node_modules/stream-chat-react/dist/components/Message/hooks/useMentionsHandler.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "useMentionsHandler": (()=>useMentionsHandler)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$ChannelActionContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/context/ChannelActionContext.js [app-client] (ecmascript)");
;
function createEventHandler(fn, message) {
    return (event)=>{
        if (typeof fn !== 'function' || !message?.mentioned_users?.length) {
            return;
        }
        fn(event, message.mentioned_users);
    };
}
const useMentionsHandler = (message, customMentionHandler)=>{
    const { onMentionsClick: contextOnMentionsClick, onMentionsHover: contextOnMentionsHover } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$ChannelActionContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useChannelActionContext"])('useMentionsHandler');
    const onMentionsClick = customMentionHandler?.onMentionsClick || contextOnMentionsClick || (()=>null);
    const onMentionsHover = customMentionHandler?.onMentionsHover || contextOnMentionsHover || (()=>null);
    return {
        onMentionsClick: createEventHandler(onMentionsClick, message),
        onMentionsHover: createEventHandler(onMentionsHover, message)
    };
};
}}),
"[project]/node_modules/stream-chat-react/dist/components/Message/hooks/useMuteHandler.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "missingUseMuteHandlerParamsWarning": (()=>missingUseMuteHandlerParamsWarning),
    "useMuteHandler": (()=>useMuteHandler)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/Message/utils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$ChannelStateContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/context/ChannelStateContext.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$ChatContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/context/ChatContext.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$TranslationContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/context/TranslationContext.js [app-client] (ecmascript)");
;
;
;
;
const missingUseMuteHandlerParamsWarning = 'useMuteHandler was called but it is missing one or more necessary parameter.';
const useMuteHandler = (message, notifications = {})=>{
    const { mutes } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$ChannelStateContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useChannelStateContext"])('useMuteHandler');
    const { client } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$ChatContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useChatContext"])('useMuteHandler');
    const { t } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$TranslationContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useTranslationContext"])('useMuteHandler');
    return async (event)=>{
        event.preventDefault();
        const { getErrorNotification, getSuccessNotification, notify } = notifications;
        if (!t || !message?.user || !notify || !client) {
            console.warn(missingUseMuteHandlerParamsWarning);
            return;
        }
        if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isUserMuted"])(message, mutes)) {
            try {
                await client.muteUser(message.user.id);
                const successMessage = getSuccessNotification && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["validateAndGetMessage"])(getSuccessNotification, [
                    message.user
                ]);
                notify(successMessage || t(`{{ user }} has been muted`, {
                    user: message.user.name || message.user.id
                }), 'success');
            } catch (e) {
                const errorMessage = getErrorNotification && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["validateAndGetMessage"])(getErrorNotification, [
                    message.user
                ]);
                notify(errorMessage || t('Error muting a user ...'), 'error');
            }
        } else {
            try {
                await client.unmuteUser(message.user.id);
                const fallbackMessage = t(`{{ user }} has been unmuted`, {
                    user: message.user.name || message.user.id
                });
                const successMessage = getSuccessNotification && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["validateAndGetMessage"])(getSuccessNotification, [
                    message.user
                ]) || fallbackMessage;
                if (typeof successMessage === 'string') {
                    notify(successMessage, 'success');
                }
            } catch (e) {
                const errorMessage = getErrorNotification && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["validateAndGetMessage"])(getErrorNotification, [
                    message.user
                ]) || t('Error unmuting a user ...');
                if (typeof errorMessage === 'string') {
                    notify(errorMessage, 'error');
                }
            }
        }
    };
};
}}),
"[project]/node_modules/stream-chat-react/dist/components/Message/hooks/useOpenThreadHandler.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "useOpenThreadHandler": (()=>useOpenThreadHandler)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$ChannelActionContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/context/ChannelActionContext.js [app-client] (ecmascript)");
;
const useOpenThreadHandler = (message, customOpenThread)=>{
    const { openThread: channelOpenThread } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$ChannelActionContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useChannelActionContext"])('useOpenThreadHandler');
    const openThread = customOpenThread || channelOpenThread;
    return (event)=>{
        if (!openThread || !message) {
            console.warn('Open thread handler was called but it is missing one of its parameters');
            return;
        }
        openThread(message, event);
    };
};
}}),
"[project]/node_modules/stream-chat-react/dist/components/Message/hooks/usePinHandler.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "usePinHandler": (()=>usePinHandler)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/Message/utils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$ChannelActionContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/context/ChannelActionContext.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$ChannelStateContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/context/ChannelStateContext.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$ChatContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/context/ChatContext.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$TranslationContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/context/TranslationContext.js [app-client] (ecmascript)");
;
;
;
;
;
const usePinHandler = (message, // @deprecated in favor of `channelCapabilities` - TODO: remove in next major release
_permissions = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["defaultPinPermissions"], notifications = {})=>{
    const { getErrorNotification, notify } = notifications;
    const { updateMessage } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$ChannelActionContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useChannelActionContext"])('usePinHandler');
    const { channelCapabilities = {} } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$ChannelStateContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useChannelStateContext"])('usePinHandler');
    const { client } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$ChatContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useChatContext"])('usePinHandler');
    const { t } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$TranslationContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useTranslationContext"])('usePinHandler');
    const canPin = !!channelCapabilities['pin-message'];
    const handlePin = async (event)=>{
        event.preventDefault();
        if (!message) return;
        if (!message.pinned) {
            try {
                const optimisticMessage = {
                    ...message,
                    pinned: true,
                    pinned_at: new Date(),
                    pinned_by: client.user
                };
                updateMessage(optimisticMessage);
                await client.pinMessage(message);
            } catch (e) {
                const errorMessage = getErrorNotification && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["validateAndGetMessage"])(getErrorNotification, [
                    message
                ]);
                if (notify) notify(errorMessage || t('Error pinning message'), 'error');
                updateMessage(message);
            }
        } else {
            try {
                const optimisticMessage = {
                    ...message,
                    pin_expires: null,
                    pinned: false,
                    pinned_at: null,
                    pinned_by: null
                };
                updateMessage(optimisticMessage);
                await client.unpinMessage(message);
            } catch (e) {
                const errorMessage = getErrorNotification && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["validateAndGetMessage"])(getErrorNotification, [
                    message
                ]);
                if (notify) notify(errorMessage || t('Error removing message pin'), 'error');
                updateMessage(message);
            }
        }
    };
    return {
        canPin,
        handlePin
    };
};
}}),
"[project]/node_modules/stream-chat-react/dist/components/Message/hooks/useReactionHandler.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "reactionHandlerWarning": (()=>reactionHandlerWarning),
    "useReactionHandler": (()=>useReactionHandler)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lodash$2e$throttle$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/lodash.throttle/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Threads$2f$ThreadContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/Threads/ThreadContext.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$ChannelActionContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/context/ChannelActionContext.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$ChannelStateContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/context/ChannelStateContext.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$ChatContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/context/ChatContext.js [app-client] (ecmascript)");
;
;
;
;
;
;
const reactionHandlerWarning = `Reaction handler was called, but it is missing one of its required arguments.
Make sure the ChannelAction and ChannelState contexts are properly set and the hook is initialized with a valid message.`;
const useReactionHandler = (message)=>{
    const thread = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Threads$2f$ThreadContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useThreadContext"])();
    const { updateMessage } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$ChannelActionContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useChannelActionContext"])('useReactionHandler');
    const { channel, channelCapabilities } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$ChannelStateContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useChannelStateContext"])('useReactionHandler');
    const { client } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$ChatContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useChatContext"])('useReactionHandler');
    const createMessagePreview = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useCallback"])({
        "useReactionHandler.useCallback[createMessagePreview]": (add, reaction, message)=>{
            const newReactionGroups = message?.reaction_groups || {};
            const reactionType = reaction.type;
            const hasReaction = !!newReactionGroups[reactionType];
            if (add) {
                const timestamp = new Date().toISOString();
                newReactionGroups[reactionType] = hasReaction ? {
                    ...newReactionGroups[reactionType],
                    count: newReactionGroups[reactionType].count + 1
                } : {
                    count: 1,
                    first_reaction_at: timestamp,
                    last_reaction_at: timestamp,
                    sum_scores: 1
                };
            } else {
                if (hasReaction && newReactionGroups[reactionType].count > 1) {
                    newReactionGroups[reactionType] = {
                        ...newReactionGroups[reactionType],
                        count: newReactionGroups[reactionType].count - 1
                    };
                } else {
                    delete newReactionGroups[reactionType];
                }
            }
            const newReactions = add ? [
                reaction,
                ...message?.latest_reactions || []
            ] : message.latest_reactions?.filter({
                "useReactionHandler.useCallback[createMessagePreview]": (item)=>!(item.type === reaction.type && item.user_id === reaction.user_id)
            }["useReactionHandler.useCallback[createMessagePreview]"]);
            const newOwnReactions = add ? [
                reaction,
                ...message?.own_reactions || []
            ] : message?.own_reactions?.filter({
                "useReactionHandler.useCallback[createMessagePreview]": (item)=>item.type !== reaction.type
            }["useReactionHandler.useCallback[createMessagePreview]"]);
            return {
                ...message,
                latest_reactions: newReactions || message.latest_reactions,
                own_reactions: newOwnReactions,
                reaction_groups: newReactionGroups
            };
        }
    }["useReactionHandler.useCallback[createMessagePreview]"], // eslint-disable-next-line react-hooks/exhaustive-deps
    [
        client.user,
        client.userID
    ]);
    const createReactionPreview = (type)=>({
            message_id: message?.id,
            score: 1,
            type,
            user: client.user,
            user_id: client.user?.id
        });
    const toggleReaction = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lodash$2e$throttle$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"])(async (id, type, add)=>{
        if (!message || !channelCapabilities['send-reaction']) return;
        const newReaction = createReactionPreview(type);
        const tempMessage = createMessagePreview(add, newReaction, message);
        try {
            updateMessage(tempMessage);
            thread?.upsertReplyLocally({
                message: tempMessage
            });
            const messageResponse = add ? await channel.sendReaction(id, {
                type
            }) : await channel.deleteReaction(id, type);
            // seems useless as we're expecting WS event to come in and replace this anyway
            updateMessage(messageResponse.message);
        } catch (error) {
            // revert to the original message if the API call fails
            updateMessage(message);
            thread?.upsertReplyLocally({
                message
            });
        }
    }, 1000);
    return async (reactionType, event)=>{
        if (event?.preventDefault) {
            event.preventDefault();
        }
        if (!message) {
            return console.warn(reactionHandlerWarning);
        }
        let userExistingReaction = null;
        if (message.own_reactions) {
            message.own_reactions.forEach((reaction)=>{
                // own user should only ever contain the current user id
                // just in case we check to prevent bugs with message updates from breaking reactions
                if (reaction.user && client.userID === reaction.user.id && reaction.type === reactionType) {
                    userExistingReaction = reaction;
                } else if (reaction.user && client.userID !== reaction.user.id) {
                    console.warn(`message.own_reactions contained reactions from a different user, this indicates a bug`);
                }
            });
        }
        try {
            if (userExistingReaction) {
                await toggleReaction(message.id, userExistingReaction.type, false);
            } else {
                await toggleReaction(message.id, reactionType, true);
            }
        } catch (error) {
            console.log({
                error
            });
        }
    };
};
}}),
"[project]/node_modules/stream-chat-react/dist/components/Message/hooks/useReactionsFetcher.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "MAX_MESSAGE_REACTIONS_TO_FETCH": (()=>MAX_MESSAGE_REACTIONS_TO_FETCH),
    "useReactionsFetcher": (()=>useReactionsFetcher)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$ChatContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/context/ChatContext.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$TranslationContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/context/TranslationContext.js [app-client] (ecmascript)");
;
const MAX_MESSAGE_REACTIONS_TO_FETCH = 1000;
function useReactionsFetcher(message, notifications = {}) {
    const { client } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$ChatContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useChatContext"])('useRectionsFetcher');
    const { t } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$TranslationContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useTranslationContext"])('useReactionFetcher');
    const { getErrorNotification, notify } = notifications;
    return async (reactionType, sort)=>{
        try {
            return await fetchMessageReactions(client, message.id, reactionType, sort);
        } catch (e) {
            const errorMessage = getErrorNotification?.(message);
            notify?.(errorMessage || t('Error fetching reactions'), 'error');
            throw e;
        }
    };
}
async function fetchMessageReactions(client, messageId, reactionType, sort) {
    const reactions = [];
    const limit = 25;
    let next;
    let hasNext = true;
    while(hasNext && reactions.length < MAX_MESSAGE_REACTIONS_TO_FETCH){
        const response = await client.queryReactions(messageId, reactionType ? {
            type: reactionType
        } : {}, sort, {
            limit,
            next
        });
        reactions.push(...response.reactions);
        next = response.next;
        hasNext = Boolean(next);
    }
    return reactions;
}
}}),
"[project]/node_modules/stream-chat-react/dist/components/Message/hooks/useRetryHandler.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "useRetryHandler": (()=>useRetryHandler)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$ChannelActionContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/context/ChannelActionContext.js [app-client] (ecmascript)");
;
const useRetryHandler = (customRetrySendMessage)=>{
    const { retrySendMessage: contextRetrySendMessage } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$ChannelActionContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useChannelActionContext"])('useRetryHandler');
    const retrySendMessage = customRetrySendMessage || contextRetrySendMessage;
    return async (message)=>{
        if (message) {
            await retrySendMessage(message);
        }
    };
};
}}),
"[project]/node_modules/stream-chat-react/dist/components/Message/hooks/useUserHandler.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "useUserHandler": (()=>useUserHandler)
});
const useUserHandler = (message, eventHandlers)=>({
        onUserClick: (event)=>{
            if (typeof eventHandlers?.onUserClickHandler !== 'function' || !message?.user) {
                return;
            }
            eventHandlers.onUserClickHandler(event, message.user);
        },
        onUserHover: (event)=>{
            if (typeof eventHandlers?.onUserHoverHandler !== 'function' || !message?.user) {
                return;
            }
            eventHandlers.onUserHoverHandler(event, message.user);
        }
    });
}}),
"[project]/node_modules/stream-chat-react/dist/components/Message/hooks/useUserRole.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "useUserRole": (()=>useUserRole)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$ChannelStateContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/context/ChannelStateContext.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$ChatContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/context/ChatContext.js [app-client] (ecmascript)");
;
;
const useUserRole = (message, onlySenderCanEdit, disableQuotedMessages)=>{
    const { channel, channelCapabilities = {} } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$ChannelStateContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useChannelStateContext"])('useUserRole');
    const { client } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$ChatContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useChatContext"])('useUserRole');
    /**
     * @deprecated as it relies on `membership.role` check which is already deprecated and shouldn't be used anymore.
     * `isAdmin` will be removed in future release. See `channelCapabilities`.
     */ const isAdmin = client.user?.role === 'admin' || channel.state.membership.role === 'admin';
    /**
     * @deprecated as it relies on `membership.role` check which is already deprecated and shouldn't be used anymore.
     * `isOwner` will be removed in future release. See `channelCapabilities`.
     */ const isOwner = channel.state.membership.role === 'owner';
    /**
     * @deprecated as it relies on `membership.role` check which is already deprecated and shouldn't be used anymore.
     * `isModerator` will be removed in future release. See `channelCapabilities`.
     */ const isModerator = client.user?.role === 'channel_moderator' || channel.state.membership.role === 'channel_moderator' || channel.state.membership.role === 'moderator' || channel.state.membership.is_moderator === true || channel.state.membership.channel_role === 'channel_moderator';
    const isMyMessage = client.userID === message.user?.id;
    const canEdit = !message.poll && (!onlySenderCanEdit && channelCapabilities['update-any-message'] || isMyMessage && channelCapabilities['update-own-message']);
    const canDelete = channelCapabilities['delete-any-message'] || isMyMessage && channelCapabilities['delete-own-message'];
    const canFlag = !isMyMessage && channelCapabilities['flag-message'];
    const canMarkUnread = channelCapabilities['read-events'];
    const canMute = !isMyMessage && channelCapabilities['mute-channel'];
    const canQuote = !disableQuotedMessages && channelCapabilities['quote-message'];
    const canReact = channelCapabilities['send-reaction'];
    const canReply = channelCapabilities['send-reply'];
    return {
        canDelete,
        canEdit,
        canFlag,
        canMarkUnread,
        canMute,
        canQuote,
        canReact,
        canReply,
        isAdmin,
        isModerator,
        isMyMessage,
        isOwner
    };
};
}}),
"[project]/node_modules/stream-chat-react/dist/components/Message/icons.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "ActionsIcon": (()=>ActionsIcon),
    "MessageDeliveredIcon": (()=>MessageDeliveredIcon),
    "MessageErrorIcon": (()=>MessageErrorIcon),
    "PinIcon": (()=>PinIcon),
    "PinIndicator": (()=>PinIndicator),
    "ReactionIcon": (()=>ReactionIcon),
    "ThreadIcon": (()=>ThreadIcon)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
;
const ActionsIcon = ({ className = '' })=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement("svg", {
        className: className,
        height: '4',
        viewBox: '0 0 11 4',
        width: '11',
        xmlns: 'http://www.w3.org/2000/svg'
    }, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement("path", {
        d: 'M1.5 3a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3zm4 0a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3zm4 0a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3z',
        fillRule: 'nonzero'
    }));
const ReactionIcon = ({ className = '' })=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement("svg", {
        className: className,
        height: '12',
        viewBox: '0 0 12 12',
        width: '12',
        xmlns: 'http://www.w3.org/2000/svg'
    }, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement("g", {
        clipRule: 'evenodd',
        fillRule: 'evenodd'
    }, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement("path", {
        d: 'M6 1.2C3.3 1.2 1.2 3.3 1.2 6c0 2.7 2.1 4.8 4.8 4.8 2.7 0 4.8-2.1 4.8-4.8 0-2.7-2.1-4.8-4.8-4.8zM0 6c0-3.3 2.7-6 6-6s6 2.7 6 6-2.7 6-6 6-6-2.7-6-6z'
    }), __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement("path", {
        d: 'M5.4 4.5c0 .5-.4.9-.9.9s-.9-.4-.9-.9.4-.9.9-.9.9.4.9.9zM8.4 4.5c0 .5-.4.9-.9.9s-.9-.4-.9-.9.4-.9.9-.9.9.4.9.9zM3.3 6.7c.3-.2.6-.1.8.1.3.4.8.9 1.5 1 .6.2 1.4.1 2.4-1 .2-.2.6-.3.8 0 .2.2.3.6 0 .8-1.1 1.3-2.4 1.7-3.5 1.5-1-.2-1.8-.9-2.2-1.5-.2-.3-.1-.7.2-.9z'
    })));
const ThreadIcon = ({ className = '' })=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement("svg", {
        className: className,
        height: '10',
        width: '14',
        xmlns: 'http://www.w3.org/2000/svg'
    }, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement("path", {
        d: 'M8.516 3c4.78 0 4.972 6.5 4.972 6.5-1.6-2.906-2.847-3.184-4.972-3.184v2.872L3.772 4.994 8.516.5V3zM.484 5l4.5-4.237v1.78L2.416 5l2.568 2.125v1.828L.484 5z',
        fillRule: 'evenodd'
    }));
const PinIcon = ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement("svg", {
        height: '13',
        viewBox: '0 0 14 13',
        width: '14',
        xmlns: 'http://www.w3.org/2000/svg'
    }, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement("path", {
        d: 'M13.3518 6.686L6.75251 0.0866699L5.80984 1.02867L6.75318 1.972V1.97334L3.45318 5.272L3.45251 5.27334L2.50984 4.32934L1.56718 5.27267L4.39584 8.10067L0.624512 11.8713L1.56718 12.814L5.33851 9.04334L8.16718 11.8713L9.10984 10.9293L8.16718 9.986L11.4672 6.686L12.4098 7.62867L13.3518 6.686ZM7.22451 9.04267L7.22385 9.04334L4.39584 6.21467L7.69518 2.91467L10.5232 5.74267L7.22451 9.04267Z',
        fillRule: 'evenodd'
    }));
const PinIndicator = ({ message, t })=>{
    if (!message || !t) return null;
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement("div", {
        style: {
            alignItems: 'center',
            display: 'flex'
        }
    }, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement(PinIcon, null), __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement("div", {
        style: {
            fontSize: '14px',
            marginBottom: '0',
            marginLeft: '8px',
            marginTop: '0'
        }
    }, message.pinned_by ? `${t('Pinned by')} ${message.pinned_by?.name || message.pinned_by?.id}` : t('Message pinned')));
};
const MessageDeliveredIcon = ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement("svg", {
        "data-testid": 'delivered-icon',
        fill: 'none',
        height: '24',
        viewBox: '0 0 24 24',
        width: '24',
        xmlns: 'http://www.w3.org/2000/svg'
    }, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement("path", {
        clipRule: 'evenodd',
        d: 'M8.9999 16.2L4.7999 12L3.3999 13.4L8.9999 19L20.9999 6.99998L19.5999 5.59998L8.9999 16.2Z',
        fill: 'black',
        fillRule: 'evenodd'
    }));
const MessageErrorIcon = ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement("div", {
        className: 'str-chat__message-error-icon'
    }, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement("svg", {
        "data-testid": 'error',
        fill: 'none',
        height: '24',
        viewBox: '0 0 24 24',
        width: '24',
        xmlns: 'http://www.w3.org/2000/svg'
    }, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement("path", {
        d: 'M12 2C6.48 2 2 6.48 2 12C2 17.52 6.48 22 12 22C17.52 22 22 17.52 22 12C22 6.48 17.52 2 12 2Z',
        fill: 'black',
        id: 'background'
    }), __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement("path", {
        d: 'M13 17H11V15H13V17ZM13 13H11V7H13V13Z',
        fill: 'white'
    })));
}}),
"[project]/node_modules/stream-chat-react/dist/components/Message/MessageDeleted.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "MessageDeleted": (()=>MessageDeleted)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$hooks$2f$useUserRole$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/Message/hooks/useUserRole.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$TranslationContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/context/TranslationContext.js [app-client] (ecmascript)");
;
;
;
const MessageDeleted = (props)=>{
    const { message } = props;
    const { t } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$TranslationContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useTranslationContext"])('MessageDeleted');
    const { isMyMessage } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$hooks$2f$useUserRole$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useUserRole"])(message);
    const messageClasses = isMyMessage ? 'str-chat__message str-chat__message--me str-chat__message-simple str-chat__message-simple--me' : 'str-chat__message str-chat__message-simple str-chat__message--other';
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement("div", {
        className: `${messageClasses} str-chat__message--deleted ${message.type} `,
        "data-testid": 'message-deleted-component',
        key: message.id
    }, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement("div", {
        className: 'str-chat__message--deleted-inner'
    }, t('This message was deleted...')));
};
}}),
"[project]/node_modules/stream-chat-react/dist/components/Message/MessageBlocked.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "MessageBlocked": (()=>MessageBlocked)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$clsx$2f$dist$2f$clsx$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/clsx/dist/clsx.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$hooks$2f$useUserRole$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/Message/hooks/useUserRole.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$TranslationContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/context/TranslationContext.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$MessageContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/context/MessageContext.js [app-client] (ecmascript)");
;
;
;
;
;
const MessageBlocked = ()=>{
    const { message } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$MessageContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useMessageContext"])();
    const { t } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$TranslationContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useTranslationContext"])('MessageBlocked');
    const { isMyMessage } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$hooks$2f$useUserRole$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useUserRole"])(message);
    const messageClasses = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$clsx$2f$dist$2f$clsx$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"])('str-chat__message str-chat__message-simple str-chat__message--blocked', message.type, {
        'str-chat__message--me str-chat__message-simple--me': isMyMessage,
        'str-chat__message--other': !isMyMessage
    });
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement("div", {
        className: messageClasses,
        "data-testid": 'message-blocked-component',
        key: message.id
    }, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement("div", {
        className: 'str-chat__message--blocked-inner'
    }, t('Message was blocked by moderation policies')));
};
}}),
"[project]/node_modules/stream-chat-react/dist/components/Message/MessageOptions.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "MessageOptions": (()=>MessageOptions)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$clsx$2f$dist$2f$clsx$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/clsx/dist/clsx.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$icons$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/Message/icons.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/Message/utils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$MessageActions$2f$MessageActions$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/MessageActions/MessageActions.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Dialog$2f$hooks$2f$useDialog$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/Dialog/hooks/useDialog.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Reactions$2f$ReactionSelectorWithButton$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/Reactions/ReactionSelectorWithButton.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$MessageContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/context/MessageContext.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$TranslationContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/context/TranslationContext.js [app-client] (ecmascript)");
;
;
;
;
;
;
;
;
const UnMemoizedMessageOptions = (props)=>{
    const { ActionsIcon = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$icons$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ActionsIcon"], displayReplies = true, handleOpenThread: propHandleOpenThread, ReactionIcon = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$icons$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ReactionIcon"], theme = 'simple', ThreadIcon = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$icons$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ThreadIcon"] } = props;
    const { getMessageActions, handleOpenThread: contextHandleOpenThread, initialMessage, message, threadList } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$MessageContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useMessageContext"])('MessageOptions');
    const { t } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$TranslationContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useTranslationContext"])('MessageOptions');
    const messageActionsDialogIsOpen = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Dialog$2f$hooks$2f$useDialog$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useDialogIsOpen"])(`message-actions--${message.id}`);
    const reactionSelectorDialogIsOpen = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Dialog$2f$hooks$2f$useDialog$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useDialogIsOpen"])(`reaction-selector--${message.id}`);
    const handleOpenThread = propHandleOpenThread || contextHandleOpenThread;
    const messageActions = getMessageActions();
    const shouldShowReactions = messageActions.indexOf(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["MESSAGE_ACTIONS"].react) > -1;
    const shouldShowReplies = messageActions.indexOf(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["MESSAGE_ACTIONS"].reply) > -1 && displayReplies && !threadList;
    if (!message.type || message.type === 'error' || message.type === 'system' || message.type === 'ephemeral' || message.status === 'failed' || message.status === 'sending' || initialMessage) {
        return null;
    }
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement("div", {
        className: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$clsx$2f$dist$2f$clsx$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"])(`str-chat__message-${theme}__actions str-chat__message-options`, {
            'str-chat__message-options--active': messageActionsDialogIsOpen || reactionSelectorDialogIsOpen
        }),
        "data-testid": 'message-options'
    }, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$MessageActions$2f$MessageActions$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["MessageActions"], {
        ActionsIcon: ActionsIcon
    }), shouldShowReplies && __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement("button", {
        "aria-label": t('aria/Open Thread'),
        className: `str-chat__message-${theme}__actions__action str-chat__message-${theme}__actions__action--thread str-chat__message-reply-in-thread-button`,
        "data-testid": 'thread-action',
        onClick: handleOpenThread
    }, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement(ThreadIcon, {
        className: 'str-chat__message-action-icon'
    })), shouldShowReactions && __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Reactions$2f$ReactionSelectorWithButton$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ReactionSelectorWithButton"], {
        ReactionIcon: ReactionIcon
    }));
};
const MessageOptions = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].memo(UnMemoizedMessageOptions);
}}),
"[project]/node_modules/stream-chat-react/dist/components/Message/MessageRepliesCountButton.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "MessageRepliesCountButton": (()=>MessageRepliesCountButton)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$TranslationContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/context/TranslationContext.js [app-client] (ecmascript)");
;
;
const UnMemoizedMessageRepliesCountButton = (props)=>{
    const { labelPlural, labelSingle, onClick, reply_count = 0 } = props;
    const { t } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$TranslationContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useTranslationContext"])('MessageRepliesCountButton');
    if (!reply_count) return null;
    let replyCountText = t('replyCount', {
        count: reply_count
    });
    if (labelPlural && reply_count > 1) {
        replyCountText = `${reply_count} ${labelPlural}`;
    } else if (labelSingle) {
        replyCountText = `1 ${labelSingle}`;
    }
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement("div", {
        className: 'str-chat__message-replies-count-button-wrapper'
    }, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement("button", {
        className: 'str-chat__message-replies-count-button',
        "data-testid": 'replies-count-button',
        onClick: onClick
    }, replyCountText));
};
const MessageRepliesCountButton = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].memo(UnMemoizedMessageRepliesCountButton);
}}),
"[project]/node_modules/stream-chat-react/dist/components/Message/MessageStatus.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "MessageStatus": (()=>MessageStatus)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$clsx$2f$dist$2f$clsx$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/clsx/dist/clsx.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$icons$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/Message/icons.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/Message/utils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Avatar$2f$Avatar$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/Avatar/Avatar.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Loading$2f$LoadingIndicator$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/Loading/LoadingIndicator.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Tooltip$2f$Tooltip$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/Tooltip/Tooltip.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Tooltip$2f$hooks$2f$useEnterLeaveHandlers$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/Tooltip/hooks/useEnterLeaveHandlers.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$ChatContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/context/ChatContext.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$ComponentContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/context/ComponentContext.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$MessageContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/context/MessageContext.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$TranslationContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/context/TranslationContext.js [app-client] (ecmascript)");
;
;
;
;
;
;
;
;
;
;
;
;
const UnMemoizedMessageStatus = (props)=>{
    const { Avatar: propAvatar, MessageDeliveredStatus, MessageReadStatus, MessageSendingStatus, messageType = 'simple', tooltipUserNameMapper = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["mapToUserNameOrId"] } = props;
    const { handleEnter, handleLeave, tooltipVisible } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Tooltip$2f$hooks$2f$useEnterLeaveHandlers$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useEnterLeaveHandlers"])();
    const { client } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$ChatContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useChatContext"])('MessageStatus');
    const { Avatar: contextAvatar } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$ComponentContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useComponentContext"])('MessageStatus');
    const { isMyMessage, lastReceivedId, message, readBy, threadList } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$MessageContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useMessageContext"])('MessageStatus');
    const { t } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$TranslationContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useTranslationContext"])('MessageStatus');
    const [referenceElement, setReferenceElement] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(null);
    const Avatar = propAvatar || contextAvatar || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Avatar$2f$Avatar$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Avatar"];
    if (!isMyMessage() || message.type === 'error') return null;
    const justReadByMe = readBy?.length === 1 && readBy[0].id === client.user?.id;
    const rootClassName = `str-chat__message-${messageType}-status str-chat__message-status`;
    const sending = message.status === 'sending';
    const delivered = message.status === 'received' && message.id === lastReceivedId && !threadList;
    const deliveredAndRead = !!(readBy?.length && !threadList && !justReadByMe);
    const readersWithoutOwnUser = deliveredAndRead ? readBy.filter((item)=>item.id !== client.user?.id) : [];
    const [lastReadUser] = readersWithoutOwnUser;
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement("span", {
        className: rootClassName,
        "data-testid": (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$clsx$2f$dist$2f$clsx$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"])({
            'message-status-read-by': deliveredAndRead,
            'message-status-received': delivered && !deliveredAndRead,
            'message-status-sending': sending
        }),
        onMouseEnter: handleEnter,
        onMouseLeave: handleLeave,
        ref: setReferenceElement
    }, sending && (MessageSendingStatus ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement(MessageSendingStatus, null) : __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].Fragment, null, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Tooltip$2f$Tooltip$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PopperTooltip"], {
        offset: [
            0,
            5
        ],
        referenceElement: referenceElement,
        visible: tooltipVisible
    }, t('Sending...')), __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Loading$2f$LoadingIndicator$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["LoadingIndicator"], null))), delivered && !deliveredAndRead && (MessageDeliveredStatus ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement(MessageDeliveredStatus, null) : __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].Fragment, null, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Tooltip$2f$Tooltip$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PopperTooltip"], {
        offset: [
            0,
            5
        ],
        referenceElement: referenceElement,
        visible: tooltipVisible
    }, t('Delivered')), __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$icons$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["MessageDeliveredIcon"], null))), deliveredAndRead && (MessageReadStatus ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement(MessageReadStatus, null) : __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].Fragment, null, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Tooltip$2f$Tooltip$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PopperTooltip"], {
        offset: [
            0,
            5
        ],
        referenceElement: referenceElement,
        visible: tooltipVisible
    }, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getReadByTooltipText"])(readBy, t, client, tooltipUserNameMapper)), __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement(Avatar, {
        className: 'str-chat__avatar--message-status',
        image: lastReadUser.image,
        name: lastReadUser.name || lastReadUser.id,
        user: lastReadUser
    }), readersWithoutOwnUser.length > 1 && __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement("span", {
        className: `str-chat__message-${messageType}-status-number`,
        "data-testid": 'message-status-read-by-many'
    }, readersWithoutOwnUser.length))));
};
const MessageStatus = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].memo(UnMemoizedMessageStatus);
}}),
"[project]/node_modules/stream-chat-react/dist/components/Message/renderText/componentRenderers/Anchor.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "Anchor": (()=>Anchor)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$clsx$2f$dist$2f$clsx$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/clsx/dist/clsx.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
;
;
const Anchor = ({ children, href })=>{
    const isEmail = href?.startsWith('mailto:');
    const isUrl = href?.startsWith('http');
    if (!href || !isEmail && !isUrl) return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].Fragment, null, children);
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement("a", {
        className: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$clsx$2f$dist$2f$clsx$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"])({
            'str-chat__message-url-link': isUrl
        }),
        href: href,
        rel: 'nofollow noreferrer noopener',
        target: '_blank'
    }, children);
};
}}),
"[project]/node_modules/stream-chat-react/dist/components/Message/renderText/componentRenderers/Emoji.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "Emoji": (()=>Emoji)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
;
const Emoji = ({ children })=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement("span", {
        className: 'inline-text-emoji',
        "data-testid": 'inline-text-emoji'
    }, children);
}}),
"[project]/node_modules/stream-chat-react/dist/components/Message/renderText/componentRenderers/Mention.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "Mention": (()=>Mention)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
;
const Mention = ({ children, node: { mentionedUser } })=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement("span", {
        className: 'str-chat__message-mention',
        "data-user-id": mentionedUser.id
    }, children);
}}),
"[project]/node_modules/stream-chat-react/dist/components/Message/renderText/regex.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "detectHttp": (()=>detectHttp),
    "escapeRegExp": (()=>escapeRegExp),
    "matchMarkdownLinks": (()=>matchMarkdownLinks),
    "messageCodeBlocks": (()=>messageCodeBlocks)
});
function escapeRegExp(text) {
    return text.replace(/[-[\]{}()*+?.,/\\^$|#]/g, '\\$&');
}
const detectHttp = /(http(s?):\/\/)?(www\.)?/;
const messageCodeBlocks = (message)=>{
    const codeRegex = /```[a-z]*\n[\s\S]*?\n```|`[a-z]*[\s\S]*?`/gm;
    const matches = message.match(codeRegex);
    return matches || [];
};
const matchMarkdownLinks = (message)=>{
    const regexMdLinks = /\[([^[]+)\](\(.*\))/gm;
    const matches = message.match(regexMdLinks);
    const singleMatch = /\[([^[]+)\]\((.*)\)/;
    const links = matches ? matches.map((match)=>{
        const i = singleMatch.exec(match);
        return i && [
            i[1],
            i[2]
        ];
    }) : [];
    return links.flat();
};
}}),
"[project]/node_modules/stream-chat-react/dist/components/Message/renderText/rehypePlugins/emojiMarkdownPlugin.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "emojiMarkdownPlugin": (()=>emojiMarkdownPlugin)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hast$2d$util$2d$find$2d$and$2d$replace$2f$lib$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/hast-util-find-and-replace/lib/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$unist$2d$builder$2f$lib$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/unist-builder/lib/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$emoji$2d$regex$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/emoji-regex/index.js [app-client] (ecmascript)");
;
;
;
const emojiMarkdownPlugin = ()=>{
    const replace = (match)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$unist$2d$builder$2f$lib$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["u"])('element', {
            properties: {},
            tagName: 'emoji'
        }, [
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$unist$2d$builder$2f$lib$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["u"])('text', match)
        ]);
    const transform = (node)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hast$2d$util$2d$find$2d$and$2d$replace$2f$lib$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["findAndReplace"])(node, [
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$emoji$2d$regex$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"])(),
            replace
        ]);
    return transform;
};
}}),
"[project]/node_modules/stream-chat-react/dist/components/Message/renderText/rehypePlugins/mentionsMarkdownPlugin.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "mentionsMarkdownPlugin": (()=>mentionsMarkdownPlugin)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$renderText$2f$regex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/Message/renderText/regex.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hast$2d$util$2d$find$2d$and$2d$replace$2f$lib$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/hast-util-find-and-replace/lib/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$unist$2d$builder$2f$lib$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/unist-builder/lib/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$unist$2d$util$2d$visit$2f$lib$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/unist-util-visit/lib/index.js [app-client] (ecmascript) <locals>");
;
;
;
;
const mentionsMarkdownPlugin = (mentioned_users)=>()=>{
        const mentioned_usernames = mentioned_users.map((user)=>user.name || user.id).filter(Boolean).map(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$renderText$2f$regex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["escapeRegExp"]);
        const mentionedUsersRegex = new RegExp(mentioned_usernames.map((username)=>`@${username}`).join('|'), 'g');
        const replace = (match)=>{
            const usernameOrId = match.replace('@', '');
            const user = mentioned_users.find(({ id, name })=>name === usernameOrId || id === usernameOrId);
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$unist$2d$builder$2f$lib$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["u"])('element', {
                mentionedUser: user,
                properties: {},
                tagName: 'mention'
            }, [
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$unist$2d$builder$2f$lib$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["u"])('text', match)
            ]);
        };
        const transform = (tree)=>{
            if (!mentioned_usernames.length) return;
            // handles special cases of mentions where user.name is an e-mail
            // Remark GFM translates all e-mail-like text nodes to links creating
            // two separate child nodes "@" and "your.name@as.email" instead of
            // keeping it as one text node with value "@your.name@as.email"
            // this piece finds these two separated nodes and merges them together
            // before "replace" function takes over
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$unist$2d$util$2d$visit$2f$lib$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["visit"])(tree, (node, index, parent)=>{
                if (typeof index === 'undefined') return;
                if (!parent) return;
                const nextChild = parent.children.at(index + 1);
                const nextChildHref = nextChild?.properties?.href;
                if (node.type === 'text' && // text value has to have @ sign at the end of the string
                // and no other characters except whitespace can precede it
                // valid cases:   "text @", "@", " @"
                // invalid cases: "text@", "@text",
                /.?\s?@$|^@$/.test(node.value) && nextChildHref?.startsWith('mailto:')) {
                    const newTextValue = node.value.replace(/@$/, '');
                    const username = nextChildHref.replace('mailto:', '');
                    parent.children[index] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$unist$2d$builder$2f$lib$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["u"])('text', newTextValue);
                    parent.children[index + 1] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$unist$2d$builder$2f$lib$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["u"])('text', `@${username}`);
                }
            });
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hast$2d$util$2d$find$2d$and$2d$replace$2f$lib$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["findAndReplace"])(tree, [
                mentionedUsersRegex,
                replace
            ]);
        };
        return transform;
    };
}}),
"[project]/node_modules/stream-chat-react/dist/components/Message/renderText/remarkPlugins/htmlToTextPlugin.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "htmlToTextPlugin": (()=>htmlToTextPlugin)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$unist$2d$util$2d$visit$2f$lib$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/unist-util-visit/lib/index.js [app-client] (ecmascript) <locals>");
;
const visitor = (node)=>{
    if (node.type !== 'html') return;
    node.type = 'text';
};
const transform = (tree)=>{
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$unist$2d$util$2d$visit$2f$lib$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["visit"])(tree, visitor);
};
const htmlToTextPlugin = ()=>transform;
}}),
"[project]/node_modules/stream-chat-react/dist/components/Message/renderText/remarkPlugins/keepLineBreaksPlugin.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "keepLineBreaksPlugin": (()=>keepLineBreaksPlugin)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$unist$2d$util$2d$visit$2f$lib$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/unist-util-visit/lib/index.js [app-client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$unist$2d$builder$2f$lib$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/unist-builder/lib/index.js [app-client] (ecmascript)");
;
;
const visitor = (node, index, parent)=>{
    if (!(index && parent && node.position)) return;
    const prevSibling = parent.children.at(index - 1);
    if (!prevSibling?.position) return;
    if (node.position.start.line === prevSibling.position.start.line) return;
    const ownStartLine = node.position.start.line;
    const prevEndLine = prevSibling.position.end.line;
    // the -1 is adjustment for the single line break into which multiple line breaks are converted
    const countTruncatedLineBreaks = ownStartLine - prevEndLine - 1;
    if (countTruncatedLineBreaks < 1) return;
    const lineBreaks = Array.from({
        length: countTruncatedLineBreaks
    }, ()=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$unist$2d$builder$2f$lib$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["u"])('break', {
            tagName: 'br'
        }));
    parent.children = [
        ...parent.children.slice(0, index),
        ...lineBreaks,
        ...parent.children.slice(index)
    ];
    return;
};
const transform = (tree)=>{
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$unist$2d$util$2d$visit$2f$lib$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["visit"])(tree, visitor);
};
const keepLineBreaksPlugin = ()=>transform;
}}),
"[project]/node_modules/stream-chat-react/dist/components/Message/renderText/renderText.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "defaultAllowedTagNames": (()=>defaultAllowedTagNames),
    "markDownRenderers": (()=>markDownRenderers),
    "renderText": (()=>renderText)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$markdown$2f$lib$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__Markdown__as__default$3e$__ = __turbopack_context__.i("[project]/node_modules/react-markdown/lib/index.js [app-client] (ecmascript) <export Markdown as default>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$markdown$2f$lib$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/react-markdown/lib/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$linkifyjs$2f$dist$2f$linkify$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/linkifyjs/dist/linkify.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lodash$2e$uniqby$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/lodash.uniqby/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$remark$2d$gfm$2f$lib$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/remark-gfm/lib/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$renderText$2f$componentRenderers$2f$Anchor$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/Message/renderText/componentRenderers/Anchor.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$renderText$2f$componentRenderers$2f$Emoji$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/Message/renderText/componentRenderers/Emoji.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$renderText$2f$componentRenderers$2f$Mention$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/Message/renderText/componentRenderers/Mention.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$renderText$2f$regex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/Message/renderText/regex.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$renderText$2f$rehypePlugins$2f$emojiMarkdownPlugin$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/Message/renderText/rehypePlugins/emojiMarkdownPlugin.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$renderText$2f$rehypePlugins$2f$mentionsMarkdownPlugin$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/Message/renderText/rehypePlugins/mentionsMarkdownPlugin.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$renderText$2f$remarkPlugins$2f$htmlToTextPlugin$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/Message/renderText/remarkPlugins/htmlToTextPlugin.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$renderText$2f$remarkPlugins$2f$keepLineBreaksPlugin$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/Message/renderText/remarkPlugins/keepLineBreaksPlugin.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$UtilityComponents$2f$ErrorBoundary$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/UtilityComponents/ErrorBoundary.js [app-client] (ecmascript)");
;
;
;
;
;
;
;
;
;
;
const defaultAllowedTagNames = [
    'html',
    'text',
    'br',
    'p',
    'em',
    'strong',
    'a',
    'ol',
    'ul',
    'li',
    'code',
    'pre',
    'blockquote',
    'del',
    'table',
    'thead',
    'tbody',
    'th',
    'tr',
    'td',
    'tfoot',
    // custom types (tagNames)
    'emoji',
    'mention'
];
function formatUrlForDisplay(url) {
    try {
        return decodeURIComponent(url).replace(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$renderText$2f$regex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["detectHttp"], '');
    } catch (e) {
        return url;
    }
}
function encodeDecode(url) {
    try {
        return encodeURI(decodeURIComponent(url));
    } catch (error) {
        return url;
    }
}
const urlTransform = (uri)=>uri.startsWith('app://') ? uri : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$markdown$2f$lib$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["defaultUrlTransform"])(uri);
const getPluginsForward = (plugins)=>plugins;
const markDownRenderers = {
    a: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$renderText$2f$componentRenderers$2f$Anchor$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Anchor"],
    emoji: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$renderText$2f$componentRenderers$2f$Emoji$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Emoji"],
    mention: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$renderText$2f$componentRenderers$2f$Mention$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Mention"]
};
const renderText = (text, mentionedUsers, { allowedTagNames = defaultAllowedTagNames, customMarkDownRenderers, getRehypePlugins = getPluginsForward, getRemarkPlugins = getPluginsForward } = {})=>{
    // take the @ mentions and turn them into markdown?
    // translate links
    if (!text) return null;
    if (text.trim().length === 1) return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].Fragment, null, text);
    let newText = text;
    const markdownLinks = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$renderText$2f$regex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["matchMarkdownLinks"])(newText);
    const codeBlocks = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$renderText$2f$regex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["messageCodeBlocks"])(newText);
    // extract all valid links/emails within text and replace it with proper markup
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lodash$2e$uniqby$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"])([
        ...(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$linkifyjs$2f$dist$2f$linkify$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["find"])(newText, 'email'),
        ...(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$linkifyjs$2f$dist$2f$linkify$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["find"])(newText, 'url')
    ], 'value').forEach(({ href, type, value })=>{
        const linkIsInBlock = codeBlocks.some((block)=>block?.includes(value));
        // check if message is already  markdown
        const noParsingNeeded = markdownLinks && markdownLinks.filter((text)=>{
            const strippedHref = href?.replace(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$renderText$2f$regex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["detectHttp"], '');
            const strippedText = text?.replace(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$renderText$2f$regex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["detectHttp"], '');
            if (!strippedHref || !strippedText) return false;
            return strippedHref.includes(strippedText) || strippedText.includes(strippedHref);
        });
        if (noParsingNeeded.length > 0 || linkIsInBlock) return;
        try {
            // special case for mentions:
            // it could happen that a user's name matches with an e-mail format pattern.
            // in that case, we check whether the found e-mail is actually a mention
            // by naively checking for an existence of @ sign in front of it.
            if (type === 'email' && mentionedUsers) {
                const emailMatchesWithName = mentionedUsers.some((u)=>u.name === value);
                if (emailMatchesWithName) {
                    newText = newText.replace(new RegExp((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$renderText$2f$regex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["escapeRegExp"])(value), 'g'), (match, position)=>{
                        const isMention = newText.charAt(position - 1) === '@';
                        // in case of mention, we leave the match in its original form,
                        // and we let `mentionsMarkdownPlugin` to do its job
                        return isMention ? match : `[${match}](${encodeDecode(href)})`;
                    });
                    return;
                }
            }
            const displayLink = type === 'email' ? value : formatUrlForDisplay(href);
            newText = newText.replace(new RegExp((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$renderText$2f$regex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["escapeRegExp"])(value), 'g'), `[${displayLink}](${encodeDecode(href)})`);
        } catch (e) {
            void e;
        }
    });
    const remarkPlugins = [
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$renderText$2f$remarkPlugins$2f$htmlToTextPlugin$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["htmlToTextPlugin"],
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$renderText$2f$remarkPlugins$2f$keepLineBreaksPlugin$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["keepLineBreaksPlugin"],
        [
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$remark$2d$gfm$2f$lib$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"],
            {
                singleTilde: false
            }
        ]
    ];
    const rehypePlugins = [
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$renderText$2f$rehypePlugins$2f$emojiMarkdownPlugin$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["emojiMarkdownPlugin"]
    ];
    if (mentionedUsers?.length) {
        rehypePlugins.push((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$renderText$2f$rehypePlugins$2f$mentionsMarkdownPlugin$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["mentionsMarkdownPlugin"])(mentionedUsers));
    }
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$UtilityComponents$2f$ErrorBoundary$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ErrorBoundary"], {
        fallback: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].Fragment, null, text)
    }, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$markdown$2f$lib$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__Markdown__as__default$3e$__["default"], {
        allowedElements: allowedTagNames,
        components: {
            ...markDownRenderers,
            ...customMarkDownRenderers
        },
        rehypePlugins: getRehypePlugins(rehypePlugins),
        remarkPlugins: getRemarkPlugins(remarkPlugins),
        skipHtml: true,
        unwrapDisallowed: true,
        urlTransform: urlTransform
    }, newText));
};
}}),
"[project]/node_modules/stream-chat-react/dist/components/Message/QuotedMessage.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "QuotedMessage": (()=>QuotedMessage)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$clsx$2f$dist$2f$clsx$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/clsx/dist/clsx.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Attachment$2f$Attachment$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/Attachment/Attachment.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Avatar$2f$Avatar$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/Avatar/Avatar.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Poll$2f$Poll$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/Poll/Poll.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$ChatContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/context/ChatContext.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$ComponentContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/context/ComponentContext.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$MessageContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/context/MessageContext.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$TranslationContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/context/TranslationContext.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$ChannelActionContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/context/ChannelActionContext.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$renderText$2f$renderText$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/Message/renderText/renderText.js [app-client] (ecmascript)");
;
;
;
;
;
;
;
;
;
;
;
const QuotedMessage = ({ renderText: propsRenderText })=>{
    const { Attachment = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Attachment$2f$Attachment$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Attachment"], Avatar: ContextAvatar } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$ComponentContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useComponentContext"])('QuotedMessage');
    const { client } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$ChatContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useChatContext"])();
    const { isMyMessage, message, renderText: contextRenderText } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$MessageContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useMessageContext"])('QuotedMessage');
    const { t, userLanguage } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$TranslationContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useTranslationContext"])('QuotedMessage');
    const { jumpToMessage } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$ChannelActionContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useChannelActionContext"])('QuotedMessage');
    const renderText = propsRenderText ?? contextRenderText ?? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$renderText$2f$renderText$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["renderText"];
    const Avatar = ContextAvatar || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Avatar$2f$Avatar$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Avatar"];
    const { quoted_message } = message;
    const poll = quoted_message?.poll_id && client.polls.fromState(quoted_message.poll_id);
    const quotedMessageDeleted = quoted_message?.deleted_at || quoted_message?.type === 'deleted';
    const quotedMessageText = quotedMessageDeleted ? t('This message was deleted...') : quoted_message?.i18n?.[`${userLanguage}_text`] || quoted_message?.text;
    const quotedMessageAttachment = quoted_message?.attachments?.length && !quotedMessageDeleted ? quoted_message.attachments[0] : null;
    const renderedText = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useMemo"])({
        "QuotedMessage.useMemo[renderedText]": ()=>renderText(quotedMessageText, quoted_message?.mentioned_users)
    }["QuotedMessage.useMemo[renderedText]"], [
        quotedMessageText,
        quoted_message?.mentioned_users,
        renderText
    ]);
    if (!quoted_message) return null;
    if (!quoted_message.poll && !quotedMessageText && !quotedMessageAttachment) return null;
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].Fragment, null, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement("div", {
        className: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$clsx$2f$dist$2f$clsx$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"])('str-chat__quoted-message-preview', {
            mine: isMyMessage()
        }),
        "data-testid": 'quoted-message',
        onClickCapture: (e)=>{
            e.stopPropagation();
            e.preventDefault();
            jumpToMessage(quoted_message.id);
        }
    }, quoted_message.user && __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement(Avatar, {
        className: 'str-chat__avatar--quoted-message-sender',
        image: quoted_message.user.image,
        name: quoted_message.user.name || quoted_message.user.id,
        user: quoted_message.user
    }), __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement("div", {
        className: 'str-chat__quoted-message-bubble',
        "data-testid": 'quoted-message-contents'
    }, poll ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Poll$2f$Poll$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Poll"], {
        isQuoted: true,
        poll: poll
    }) : __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].Fragment, null, quotedMessageAttachment && __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement(Attachment, {
        attachments: [
            quotedMessageAttachment
        ],
        isQuoted: true
    }), __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement("div", {
        className: 'str-chat__quoted-message-bubble__text',
        "data-testid": 'quoted-message-text'
    }, renderedText)))), message.attachments?.length ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement(Attachment, {
        attachments: message.attachments
    }) : null);
};
}}),
"[project]/node_modules/stream-chat-react/dist/components/Message/MessageErrorText.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "MessageErrorText": (()=>MessageErrorText)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/Message/utils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$TranslationContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/context/TranslationContext.js [app-client] (ecmascript)");
;
;
;
function MessageErrorText({ message, theme }) {
    const { t } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$TranslationContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useTranslationContext"])('MessageText');
    if (message.type === 'error' && !(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isMessageBounced"])(message)) {
        return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement("div", {
            className: `str-chat__${theme}-message--error-message str-chat__message--error-message`
        }, t('Error · Unsent'));
    }
    if (message.status === 'failed') {
        return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement("div", {
            className: `str-chat__${theme}-message--error-message str-chat__message--error-message`
        }, message.error?.status !== 403 ? t('Message Failed · Click to try again') : t('Message Failed · Unauthorized'));
    }
    return null;
}
}}),
"[project]/node_modules/stream-chat-react/dist/components/Message/MessageText.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "MessageText": (()=>MessageText)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$clsx$2f$dist$2f$clsx$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/clsx/dist/clsx.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$QuotedMessage$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/Message/QuotedMessage.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/Message/utils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$ComponentContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/context/ComponentContext.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$MessageContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/context/MessageContext.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$TranslationContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/context/TranslationContext.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$renderText$2f$renderText$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/Message/renderText/renderText.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$MessageErrorText$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/Message/MessageErrorText.js [app-client] (ecmascript)");
;
;
;
;
;
;
;
const UnMemoizedMessageTextComponent = (props)=>{
    const { customInnerClass, customWrapperClass = '', message: propMessage, renderText: propsRenderText, theme = 'simple' } = props;
    const { QuotedMessage = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$QuotedMessage$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["QuotedMessage"] } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$ComponentContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useComponentContext"])('MessageText');
    const { message: contextMessage, onMentionsClickMessage, onMentionsHoverMessage, renderText: contextRenderText, unsafeHTML } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$MessageContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useMessageContext"])('MessageText');
    const renderText = propsRenderText ?? contextRenderText ?? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$renderText$2f$renderText$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["renderText"];
    const { userLanguage } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$TranslationContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useTranslationContext"])('MessageText');
    const message = propMessage || contextMessage;
    const hasAttachment = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["messageHasAttachments"])(message);
    const messageTextToRender = message.i18n?.[`${userLanguage}_text`] || message.text;
    const messageText = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useMemo"])({
        "UnMemoizedMessageTextComponent.useMemo[messageText]": ()=>renderText(messageTextToRender, message.mentioned_users)
    }["UnMemoizedMessageTextComponent.useMemo[messageText]"], // eslint-disable-next-line react-hooks/exhaustive-deps
    [
        message.mentioned_users,
        messageTextToRender
    ]);
    const wrapperClass = customWrapperClass || 'str-chat__message-text';
    const innerClass = customInnerClass || `str-chat__message-text-inner str-chat__message-${theme}-text-inner`;
    if (!messageTextToRender && !message.quoted_message) return null;
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement("div", {
        className: wrapperClass,
        tabIndex: 0
    }, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement("div", {
        className: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$clsx$2f$dist$2f$clsx$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"])(innerClass, {
            [`str-chat__message-${theme}-text-inner--has-attachment`]: hasAttachment,
            [` str-chat__message-${theme}-text-inner--is-emoji`]: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isOnlyEmojis"])(message.text) && !message.quoted_message
        }),
        "data-testid": 'message-text-inner-wrapper',
        onClick: onMentionsClickMessage,
        onMouseOver: onMentionsHoverMessage
    }, message.quoted_message && __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement(QuotedMessage, null), __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$MessageErrorText$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["MessageErrorText"], {
        message: message,
        theme: theme
    }), unsafeHTML && message.html ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement("div", {
        dangerouslySetInnerHTML: {
            __html: message.html
        }
    }) : __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement("div", null, messageText)));
};
const MessageText = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].memo(UnMemoizedMessageTextComponent);
}}),
"[project]/node_modules/stream-chat-react/dist/components/Message/Timestamp.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "Timestamp": (()=>Timestamp)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$MessageContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/context/MessageContext.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$TranslationContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/context/TranslationContext.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$i18n$2f$utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/i18n/utils.js [app-client] (ecmascript)");
;
;
;
;
function Timestamp(props) {
    const { calendar, calendarFormats, customClass, format, timestamp } = props;
    const { formatDate } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$MessageContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useMessageContext"])('MessageTimestamp');
    const { t, tDateTimeParser } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$TranslationContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useTranslationContext"])('MessageTimestamp');
    const normalizedTimestamp = timestamp && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$i18n$2f$utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isDate"])(timestamp) ? timestamp.toISOString() : timestamp;
    const when = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useMemo"])({
        "Timestamp.useMemo[when]": ()=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$i18n$2f$utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getDateString"])({
                calendar,
                calendarFormats,
                format,
                formatDate,
                messageCreatedAt: normalizedTimestamp,
                t,
                tDateTimeParser,
                timestampTranslationKey: 'timestamp/MessageTimestamp'
            })
    }["Timestamp.useMemo[when]"], [
        calendar,
        calendarFormats,
        format,
        formatDate,
        normalizedTimestamp,
        t,
        tDateTimeParser
    ]);
    if (!when) {
        return null;
    }
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement("time", {
        className: customClass,
        dateTime: normalizedTimestamp,
        title: normalizedTimestamp
    }, when);
}
}}),
"[project]/node_modules/stream-chat-react/dist/components/Message/MessageTimestamp.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "MessageTimestamp": (()=>MessageTimestamp)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$MessageContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/context/MessageContext.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$Timestamp$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/Message/Timestamp.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$ComponentContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/context/ComponentContext.js [app-client] (ecmascript)");
;
;
;
;
const UnMemoizedMessageTimestamp = (props)=>{
    const { message: propMessage, ...timestampProps } = props;
    const { message: contextMessage } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$MessageContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useMessageContext"])('MessageTimestamp');
    const { Timestamp = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$Timestamp$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Timestamp"] } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$ComponentContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useComponentContext"])('MessageTimestamp');
    const message = propMessage || contextMessage;
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement(Timestamp, {
        timestamp: message.created_at,
        ...timestampProps
    });
};
const MessageTimestamp = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].memo(UnMemoizedMessageTimestamp);
}}),
"[project]/node_modules/stream-chat-react/dist/components/Message/MessageEditedTimestamp.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "MessageEditedTimestamp": (()=>MessageEditedTimestamp)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$clsx$2f$dist$2f$clsx$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/clsx/dist/clsx.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$ComponentContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/context/ComponentContext.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$MessageContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/context/MessageContext.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$TranslationContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/context/TranslationContext.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$Timestamp$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/Message/Timestamp.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/Message/utils.js [app-client] (ecmascript)");
;
;
;
;
;
function MessageEditedTimestamp({ message: propMessage, open, ...timestampProps }) {
    const { t } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$TranslationContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useTranslationContext"])('MessageEditedTimestamp');
    const { message: contextMessage } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$MessageContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useMessageContext"])('MessageEditedTimestamp');
    const { Timestamp = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$Timestamp$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Timestamp"] } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$ComponentContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useComponentContext"])('MessageEditedTimestamp');
    const message = propMessage || contextMessage;
    if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isMessageEdited"])(message)) {
        return null;
    }
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement("div", {
        className: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$clsx$2f$dist$2f$clsx$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"])('str-chat__message-edited-timestamp', open ? 'str-chat__message-edited-timestamp--open' : 'str-chat__message-edited-timestamp--collapsed'),
        "data-testid": 'message-edited-timestamp'
    }, t('Edited'), ' ', __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement(Timestamp, {
        timestamp: message.message_text_updated_at,
        ...timestampProps
    }));
}
}}),
"[project]/node_modules/stream-chat-react/dist/components/Message/hooks/useMessageTextStreaming.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "useMessageTextStreaming": (()=>useMessageTextStreaming)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
;
const DEFAULT_LETTER_INTERVAL = 30;
const DEFAULT_RENDERING_LETTER_COUNT = 2;
const useMessageTextStreaming = ({ renderingLetterCount = DEFAULT_RENDERING_LETTER_COUNT, streamingLetterIntervalMs = DEFAULT_LETTER_INTERVAL, text })=>{
    const [streamedMessageText, setStreamedMessageText] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(text);
    const textCursor = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useRef"])(text.length);
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useEffect"])({
        "useMessageTextStreaming.useEffect": ()=>{
            const textLength = text.length;
            const interval = setInterval({
                "useMessageTextStreaming.useEffect.interval": ()=>{
                    if (!text || textCursor.current >= textLength) {
                        clearInterval(interval);
                    }
                    const newCursorValue = textCursor.current + renderingLetterCount;
                    const newText = text.substring(0, newCursorValue);
                    textCursor.current += newText.length - textCursor.current;
                    setStreamedMessageText(newText);
                }
            }["useMessageTextStreaming.useEffect.interval"], streamingLetterIntervalMs);
            return ({
                "useMessageTextStreaming.useEffect": ()=>{
                    clearInterval(interval);
                }
            })["useMessageTextStreaming.useEffect"];
        }
    }["useMessageTextStreaming.useEffect"], [
        streamingLetterIntervalMs,
        renderingLetterCount,
        text
    ]);
    return {
        streamedMessageText
    };
};
}}),
"[project]/node_modules/stream-chat-react/dist/components/Message/StreamedMessageText.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "StreamedMessageText": (()=>StreamedMessageText)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$MessageText$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/Message/MessageText.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$MessageContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/context/MessageContext.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$hooks$2f$useMessageTextStreaming$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/Message/hooks/useMessageTextStreaming.js [app-client] (ecmascript)");
;
;
;
;
const StreamedMessageText = (props)=>{
    const { message: messageFromProps, renderingLetterCount, renderText, streamingLetterIntervalMs } = props;
    const { message: messageFromContext } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$MessageContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useMessageContext"])('StreamedMessageText');
    const message = messageFromProps || messageFromContext;
    const { text = '' } = message;
    const { streamedMessageText } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$hooks$2f$useMessageTextStreaming$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useMessageTextStreaming"])({
        renderingLetterCount,
        streamingLetterIntervalMs,
        text
    });
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$MessageText$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["MessageText"], {
        message: {
            ...message,
            text: streamedMessageText
        },
        renderText: renderText
    });
};
}}),
"[project]/node_modules/stream-chat-react/dist/components/Message/MessageSimple.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "MessageSimple": (()=>MessageSimple)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$clsx$2f$dist$2f$clsx$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/clsx/dist/clsx.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$icons$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/Message/icons.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$MessageBounce$2f$MessageBouncePrompt$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/MessageBounce/MessageBouncePrompt.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$MessageDeleted$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/Message/MessageDeleted.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$MessageBlocked$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/Message/MessageBlocked.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$MessageOptions$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/Message/MessageOptions.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$MessageRepliesCountButton$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/Message/MessageRepliesCountButton.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$MessageStatus$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/Message/MessageStatus.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$MessageText$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/Message/MessageText.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$MessageTimestamp$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/Message/MessageTimestamp.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/Message/utils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Avatar$2f$Avatar$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/Avatar/Avatar.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Attachment$2f$Attachment$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/Attachment/Attachment.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$MessageInput$2f$EditMessageForm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/MessageInput/EditMessageForm.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$MML$2f$MML$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/MML/MML.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Poll$2f$Poll$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/Poll/Poll.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Reactions$2f$ReactionsList$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/Reactions/ReactionsList.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$MessageBounce$2f$MessageBounceModal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/MessageBounce/MessageBounceModal.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$ComponentContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/context/ComponentContext.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$MessageContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/context/MessageContext.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$ChatContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/context/ChatContext.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$TranslationContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/context/TranslationContext.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$MessageEditedTimestamp$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/Message/MessageEditedTimestamp.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$StreamedMessageText$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/Message/StreamedMessageText.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$MessageList$2f$utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/MessageList/utils.js [app-client] (ecmascript)");
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
const MessageSimpleWithContext = (props)=>{
    const { additionalMessageInputProps, editing, endOfGroup, firstOfGroup, groupedByUser, handleAction, handleOpenThread, handleRetry, highlighted, isMessageAIGenerated, isMyMessage, message, onUserClick, onUserHover, renderText, threadList } = props;
    const { client } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$ChatContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useChatContext"])('MessageSimple');
    const { t } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$TranslationContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useTranslationContext"])('MessageSimple');
    const [isBounceDialogOpen, setIsBounceDialogOpen] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(false);
    const [isEditedTimestampOpen, setEditedTimestampOpen] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(false);
    const { Attachment = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Attachment$2f$Attachment$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Attachment"], Avatar = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Avatar$2f$Avatar$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Avatar"], MessageOptions = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$MessageOptions$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["MessageOptions"], // TODO: remove this "passthrough" in the next
    // major release and use the new default instead
    MessageActions = MessageOptions, MessageBlocked = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$MessageBlocked$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["MessageBlocked"], MessageDeleted = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$MessageDeleted$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["MessageDeleted"], MessageBouncePrompt = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$MessageBounce$2f$MessageBouncePrompt$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["MessageBouncePrompt"], MessageRepliesCountButton = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$MessageRepliesCountButton$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["MessageRepliesCountButton"], MessageStatus = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$MessageStatus$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["MessageStatus"], MessageTimestamp = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$MessageTimestamp$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["MessageTimestamp"], ReactionsList = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Reactions$2f$ReactionsList$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ReactionsList"], StreamedMessageText = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$StreamedMessageText$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["StreamedMessageText"], PinIndicator } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$ComponentContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useComponentContext"])('MessageSimple');
    const hasAttachment = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["messageHasAttachments"])(message);
    const hasReactions = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["messageHasReactions"])(message);
    const isAIGenerated = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useMemo"])({
        "MessageSimpleWithContext.useMemo[isAIGenerated]": ()=>isMessageAIGenerated?.(message)
    }["MessageSimpleWithContext.useMemo[isAIGenerated]"], [
        isMessageAIGenerated,
        message
    ]);
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$MessageList$2f$utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isDateSeparatorMessage"])(message)) {
        return null;
    }
    if (message.deleted_at || message.type === 'deleted') {
        return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement(MessageDeleted, {
            message: message
        });
    }
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isMessageBlocked"])(message)) {
        return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement(MessageBlocked, null);
    }
    const showMetadata = !groupedByUser || endOfGroup;
    const showReplyCountButton = !threadList && !!message.reply_count;
    const allowRetry = message.status === 'failed' && message.error?.status !== 403;
    const isBounced = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isMessageBounced"])(message);
    const isEdited = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isMessageEdited"])(message) && !isAIGenerated;
    let handleClick = undefined;
    if (allowRetry) {
        handleClick = ()=>handleRetry(message);
    } else if (isBounced) {
        handleClick = ()=>setIsBounceDialogOpen(true);
    } else if (isEdited) {
        handleClick = ()=>setEditedTimestampOpen((prev)=>!prev);
    }
    const rootClassName = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$clsx$2f$dist$2f$clsx$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"])('str-chat__message str-chat__message-simple', `str-chat__message--${message.type}`, `str-chat__message--${message.status}`, isMyMessage() ? 'str-chat__message--me str-chat__message-simple--me' : 'str-chat__message--other', message.text ? 'str-chat__message--has-text' : 'has-no-text', {
        'str-chat__message--has-attachment': hasAttachment,
        'str-chat__message--highlighted': highlighted,
        'str-chat__message--pinned pinned-message': message.pinned,
        'str-chat__message--with-reactions': hasReactions,
        'str-chat__message-send-can-be-retried': message?.status === 'failed' && message?.error?.status !== 403,
        'str-chat__message-with-thread-link': showReplyCountButton,
        'str-chat__virtual-message__wrapper--end': endOfGroup,
        'str-chat__virtual-message__wrapper--first': firstOfGroup,
        'str-chat__virtual-message__wrapper--group': groupedByUser
    });
    const poll = message.poll_id && client.polls.fromState(message.poll_id);
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].Fragment, null, editing && __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$MessageInput$2f$EditMessageForm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["EditMessageModal"], {
        additionalMessageInputProps: additionalMessageInputProps
    }), isBounceDialogOpen && __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$MessageBounce$2f$MessageBounceModal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["MessageBounceModal"], {
        MessageBouncePrompt: MessageBouncePrompt,
        onClose: ()=>setIsBounceDialogOpen(false),
        open: isBounceDialogOpen
    }), __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement("div", {
        className: rootClassName,
        key: message.id
    }, PinIndicator && __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement(PinIndicator, null), message.user && __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement(Avatar, {
        image: message.user.image,
        name: message.user.name || message.user.id,
        onClick: onUserClick,
        onMouseOver: onUserHover,
        user: message.user
    }), __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement("div", {
        className: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$clsx$2f$dist$2f$clsx$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"])('str-chat__message-inner', {
            'str-chat__simple-message--error-failed': allowRetry || isBounced
        }),
        "data-testid": 'message-inner',
        onClick: handleClick,
        onKeyUp: handleClick
    }, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement(MessageActions, null), __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement("div", {
        className: 'str-chat__message-reactions-host'
    }, hasReactions && __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement(ReactionsList, {
        reverse: true
    })), __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement("div", {
        className: 'str-chat__message-bubble'
    }, poll && __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Poll$2f$Poll$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Poll"], {
        poll: poll
    }), message.attachments?.length && !message.quoted_message ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement(Attachment, {
        actionHandler: handleAction,
        attachments: message.attachments
    }) : null, isAIGenerated ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement(StreamedMessageText, {
        message: message,
        renderText: renderText
    }) : __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$MessageText$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["MessageText"], {
        message: message,
        renderText: renderText
    }), message.mml && __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$MML$2f$MML$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["MML"], {
        actionHandler: handleAction,
        align: isMyMessage() ? 'right' : 'left',
        source: message.mml
    }), __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$icons$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["MessageErrorIcon"], null))), showReplyCountButton && __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement(MessageRepliesCountButton, {
        onClick: handleOpenThread,
        reply_count: message.reply_count
    }), showMetadata && __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement("div", {
        className: 'str-chat__message-metadata'
    }, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement(MessageStatus, null), !isMyMessage() && !!message.user && __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement("span", {
        className: 'str-chat__message-simple-name'
    }, message.user.name || message.user.id), __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement(MessageTimestamp, {
        customClass: 'str-chat__message-simple-timestamp'
    }), isEdited && __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement("span", {
        className: 'str-chat__mesage-simple-edited'
    }, t('Edited')), isEdited && __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$MessageEditedTimestamp$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["MessageEditedTimestamp"], {
        calendar: true,
        open: isEditedTimestampOpen
    }))));
};
const MemoizedMessageSimple = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].memo(MessageSimpleWithContext, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["areMessageUIPropsEqual"]);
const MessageSimple = (props)=>{
    const messageContext = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$MessageContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useMessageContext"])('MessageSimple');
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement(MemoizedMessageSimple, {
        ...messageContext,
        ...props
    });
};
}}),
"[project]/node_modules/stream-chat-react/dist/components/Message/Message.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "Message": (()=>Message)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$hooks$2f$useActionHandler$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/Message/hooks/useActionHandler.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$hooks$2f$useDeleteHandler$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/Message/hooks/useDeleteHandler.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$hooks$2f$useEditHandler$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/Message/hooks/useEditHandler.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$hooks$2f$useFlagHandler$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/Message/hooks/useFlagHandler.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$hooks$2f$useMarkUnreadHandler$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/Message/hooks/useMarkUnreadHandler.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$hooks$2f$useMentionsHandler$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/Message/hooks/useMentionsHandler.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$hooks$2f$useMuteHandler$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/Message/hooks/useMuteHandler.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$hooks$2f$useOpenThreadHandler$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/Message/hooks/useOpenThreadHandler.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$hooks$2f$usePinHandler$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/Message/hooks/usePinHandler.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$hooks$2f$useReactionHandler$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/Message/hooks/useReactionHandler.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$hooks$2f$useReactionsFetcher$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/Message/hooks/useReactionsFetcher.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$hooks$2f$useRetryHandler$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/Message/hooks/useRetryHandler.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$hooks$2f$useUserHandler$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/Message/hooks/useUserHandler.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$hooks$2f$useUserRole$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/Message/hooks/useUserRole.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/Message/utils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$MessageContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/context/MessageContext.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$ChannelActionContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/context/ChannelActionContext.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$ChannelStateContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/context/ChannelStateContext.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$ChatContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/context/ChatContext.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$ComponentContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/context/ComponentContext.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$MessageSimple$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/Message/MessageSimple.js [app-client] (ecmascript)");
;
;
;
;
;
const MessageWithContext = (props)=>{
    const { canPin, groupedByUser, Message: propMessage, message, messageActions = Object.keys(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["MESSAGE_ACTIONS"]), onUserClick: propOnUserClick, onUserHover: propOnUserHover, userRoles } = props;
    const { client, isMessageAIGenerated } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$ChatContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useChatContext"])('Message');
    const { read } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$ChannelStateContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useChannelStateContext"])('Message');
    const { Message: contextMessage } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$ComponentContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useComponentContext"])('Message');
    const actionsEnabled = message.type === 'regular' && message.status === 'received';
    const MessageUIComponent = propMessage ?? contextMessage ?? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$MessageSimple$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["MessageSimple"];
    const { clearEdit, editing, setEdit } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$hooks$2f$useEditHandler$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useEditHandler"])();
    const { onUserClick, onUserHover } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$hooks$2f$useUserHandler$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useUserHandler"])(message, {
        onUserClickHandler: propOnUserClick,
        onUserHoverHandler: propOnUserHover
    });
    const { canDelete, canEdit, canFlag, canMarkUnread, canMute, canQuote, canReact, canReply, isMyMessage } = userRoles;
    const messageIsUnread = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useMemo"])({
        "MessageWithContext.useMemo[messageIsUnread]": ()=>!!(!isMyMessage && client.user?.id && read && (!read[client.user.id] || message?.created_at && new Date(message.created_at).getTime() > read[client.user.id].last_read.getTime()))
    }["MessageWithContext.useMemo[messageIsUnread]"], [
        client,
        isMyMessage,
        message.created_at,
        read
    ]);
    const messageActionsHandler = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useCallback"])({
        "MessageWithContext.useCallback[messageActionsHandler]": ()=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getMessageActions"])(messageActions, {
                canDelete,
                canEdit,
                canFlag,
                canMarkUnread,
                canMute,
                canPin,
                canQuote,
                canReact,
                canReply
            })
    }["MessageWithContext.useCallback[messageActionsHandler]"], [
        messageActions,
        canDelete,
        canEdit,
        canFlag,
        canMarkUnread,
        canMute,
        canPin,
        canQuote,
        canReact,
        canReply
    ]);
    const { canPin: canPinPropToNotPass, messageActions: messageActionsPropToNotPass, onlySenderCanEdit: onlySenderCanEditPropToNotPass, onUserClick: onUserClickPropToNotPass, onUserHover: onUserHoverPropToNotPass, userRoles: userRolesPropToNotPass, ...rest } = props;
    const messageContextValue = {
        ...rest,
        actionsEnabled,
        clearEditingState: clearEdit,
        editing,
        getMessageActions: messageActionsHandler,
        handleEdit: setEdit,
        isMessageAIGenerated,
        isMyMessage: ()=>isMyMessage,
        messageIsUnread,
        onUserClick,
        onUserHover,
        setEditingState: setEdit
    };
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$MessageContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["MessageProvider"], {
        value: messageContextValue
    }, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement(MessageUIComponent, {
        groupedByUser: groupedByUser
    }));
};
const MemoizedMessage = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].memo(MessageWithContext, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["areMessagePropsEqual"]);
const Message = (props)=>{
    const { closeReactionSelectorOnClick, disableQuotedMessages, getDeleteMessageErrorNotification, getFetchReactionsErrorNotification, getFlagMessageErrorNotification, getFlagMessageSuccessNotification, getMarkMessageUnreadErrorNotification, getMarkMessageUnreadSuccessNotification, getMuteUserErrorNotification, getMuteUserSuccessNotification, getPinMessageErrorNotification, message, onlySenderCanEdit = false, onMentionsClick: propOnMentionsClick, onMentionsHover: propOnMentionsHover, openThread: propOpenThread, pinPermissions, reactionDetailsSort, retrySendMessage: propRetrySendMessage, sortReactionDetails, sortReactions } = props;
    const { addNotification } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$ChannelActionContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useChannelActionContext"])('Message');
    const { highlightedMessageId, mutes } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$ChannelStateContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useChannelStateContext"])('Message');
    const handleAction = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$hooks$2f$useActionHandler$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useActionHandler"])(message);
    const handleOpenThread = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$hooks$2f$useOpenThreadHandler$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useOpenThreadHandler"])(message, propOpenThread);
    const handleReaction = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$hooks$2f$useReactionHandler$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useReactionHandler"])(message);
    const handleRetry = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$hooks$2f$useRetryHandler$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useRetryHandler"])(propRetrySendMessage);
    const userRoles = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$hooks$2f$useUserRole$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useUserRole"])(message, onlySenderCanEdit, disableQuotedMessages);
    const handleFetchReactions = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$hooks$2f$useReactionsFetcher$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useReactionsFetcher"])(message, {
        getErrorNotification: getFetchReactionsErrorNotification,
        notify: addNotification
    });
    const handleDelete = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$hooks$2f$useDeleteHandler$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useDeleteHandler"])(message, {
        getErrorNotification: getDeleteMessageErrorNotification,
        notify: addNotification
    });
    const handleFlag = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$hooks$2f$useFlagHandler$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useFlagHandler"])(message, {
        getErrorNotification: getFlagMessageErrorNotification,
        getSuccessNotification: getFlagMessageSuccessNotification,
        notify: addNotification
    });
    const handleMarkUnread = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$hooks$2f$useMarkUnreadHandler$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useMarkUnreadHandler"])(message, {
        getErrorNotification: getMarkMessageUnreadErrorNotification,
        getSuccessNotification: getMarkMessageUnreadSuccessNotification,
        notify: addNotification
    });
    const handleMute = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$hooks$2f$useMuteHandler$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useMuteHandler"])(message, {
        getErrorNotification: getMuteUserErrorNotification,
        getSuccessNotification: getMuteUserSuccessNotification,
        notify: addNotification
    });
    const { onMentionsClick, onMentionsHover } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$hooks$2f$useMentionsHandler$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useMentionsHandler"])(message, {
        onMentionsClick: propOnMentionsClick,
        onMentionsHover: propOnMentionsHover
    });
    const { canPin, handlePin } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$hooks$2f$usePinHandler$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["usePinHandler"])(message, pinPermissions, {
        getErrorNotification: getPinMessageErrorNotification,
        notify: addNotification
    });
    const highlighted = highlightedMessageId === message.id;
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement(MemoizedMessage, {
        additionalMessageInputProps: props.additionalMessageInputProps,
        autoscrollToBottom: props.autoscrollToBottom,
        canPin: canPin,
        closeReactionSelectorOnClick: closeReactionSelectorOnClick,
        customMessageActions: props.customMessageActions,
        disableQuotedMessages: props.disableQuotedMessages,
        endOfGroup: props.endOfGroup,
        firstOfGroup: props.firstOfGroup,
        formatDate: props.formatDate,
        groupedByUser: props.groupedByUser,
        groupStyles: props.groupStyles,
        handleAction: handleAction,
        handleDelete: handleDelete,
        handleFetchReactions: handleFetchReactions,
        handleFlag: handleFlag,
        handleMarkUnread: handleMarkUnread,
        handleMute: handleMute,
        handleOpenThread: handleOpenThread,
        handlePin: handlePin,
        handleReaction: handleReaction,
        handleRetry: handleRetry,
        highlighted: highlighted,
        initialMessage: props.initialMessage,
        lastReceivedId: props.lastReceivedId,
        message: message,
        Message: props.Message,
        messageActions: props.messageActions,
        messageListRect: props.messageListRect,
        mutes: mutes,
        onMentionsClickMessage: onMentionsClick,
        onMentionsHoverMessage: onMentionsHover,
        onUserClick: props.onUserClick,
        onUserHover: props.onUserHover,
        pinPermissions: props.pinPermissions,
        reactionDetailsSort: reactionDetailsSort,
        readBy: props.readBy,
        renderText: props.renderText,
        sortReactionDetails: sortReactionDetails,
        sortReactions: sortReactions,
        threadList: props.threadList,
        unsafeHTML: props.unsafeHTML,
        userRoles: userRoles
    });
};
}}),
}]);

//# sourceMappingURL=node_modules_stream-chat-react_dist_components_Message_e7fb8125._.js.map