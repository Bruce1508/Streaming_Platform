{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Bruce%20Vo/Documents/project/linguex/Streaming_Platform/frontend/lib/api.ts"],"sourcesContent":["// lib/api.ts - SECURE CENTRALIZED API CLIENT\r\nimport axios, { AxiosInstance, AxiosRequestConfig, AxiosResponse } from 'axios';\r\nimport { getSession } from 'next-auth/react';\r\n\r\n// ===== API CLIENT CONFIGURATION =====\r\nconst BASE_URL = process.env.NEXT_PUBLIC_API_URL || 'http://localhost:5001/api';\r\n\r\n// Create axios instance\r\nconst apiClient: AxiosInstance = axios.create({\r\n    baseURL: BASE_URL,\r\n    timeout: 10000,\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n    },\r\n});\r\n\r\n// ===== REQUEST INTERCEPTOR =====\r\napiClient.interceptors.request.use(\r\n    async (config) => {\r\n        try {\r\n            const session = await getSession();\r\n            if (session?.accessToken) {\r\n                config.headers.Authorization = `Bearer ${session.accessToken}`;\r\n            }\r\n        } catch (error) {\r\n            console.error('❌ Error getting session token:', error);\r\n        }\r\n        return config;\r\n    },\r\n    (error) => Promise.reject(error)\r\n);\r\n\r\n// ===== RESPONSE INTERCEPTOR =====\r\napiClient.interceptors.response.use(\r\n    (response: AxiosResponse) => response,\r\n    (error) => {\r\n        if (error.response?.status === 401) {\r\n            console.error('🚫 Unauthorized');\r\n        }\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\n// ===== GENERIC API METHODS =====\r\nexport const api = {\r\n    get: async <T = any>(url: string, config?: AxiosRequestConfig): Promise<T> => {\r\n        const response = await apiClient.get(url, config);\r\n        return response.data;\r\n    },\r\n    post: async <T = any>(url: string, data?: any, config?: AxiosRequestConfig): Promise<T> => {\r\n        const response = await apiClient.post(url, data, config);\r\n        return response.data;\r\n    },\r\n    put: async <T = any>(url: string, data?: any, config?: AxiosRequestConfig): Promise<T> => {\r\n        const response = await apiClient.put(url, data, config);\r\n        return response.data;\r\n    },\r\n    delete: async <T = any>(url: string, config?: AxiosRequestConfig): Promise<T> => {\r\n        const response = await apiClient.delete(url, config);\r\n        return response.data;\r\n    },\r\n};\r\n\r\n// ===== API RESPONSE TYPES =====\r\nexport interface ApiResponse<T = any> {\r\n    success: boolean;\r\n    message: string;\r\n    data?: T;\r\n}\r\n\r\n// ===== AUTH APIs =====\r\nexport const authAPI = {\r\n    signUp: (data: any) => api.post('/auth/signUp', data),\r\n    signIn: (data: any) => api.post('/auth/signIn', data),\r\n    getMe: () => api.get('/auth/me'),\r\n    logout: () => api.post('/auth/logout'),\r\n};\r\n\r\n// ===== USER APIs =====\r\nexport const userAPI = {\r\n    getRecommended: () => api.get('/users/recommended'),\r\n    searchUsers: (query: string) => api.get(`/users/search?search=${encodeURIComponent(query)}`),\r\n    getFriends: () => api.get('/users/friends'),\r\n    getFriendRequests: () => api.get('/users/friend-requests'),\r\n    sendFriendRequest: (userId: string) => api.post(`/users/friend-request/${userId}`),\r\n    acceptFriendRequest: (requestId: string) => api.put(`/users/friend-request/${requestId}/accept`),\r\n    rejectFriendRequest: (requestId: string) => api.delete(`/users/friend-request/${requestId}/reject`),\r\n    cancelFriendRequest: (userId: string) => api.delete(`/users/friend-request/${userId}/cancel`),\r\n    getProfile: () => api.get('/users/profile'),\r\n    updateProfile: (data: any) => api.put('/users/profile', data),\r\n    completeOnBoarding: (data: any) => api.put('/users/onboarding', data),\r\n};\r\n\r\n// ===== MATERIAL APIs =====\r\nexport const materialAPI = {\r\n    getMaterials: (params?: any) => {\r\n        const queryString = params ? `?${new URLSearchParams(params).toString()}` : '';\r\n        return api.get(`/materials${queryString}`);\r\n    },\r\n    getMaterialById: (id: string) => api.get(`/materials/${id}`),\r\n    searchMaterials: (query: string) => api.get(`/materials/search?search=${encodeURIComponent(query)}`),\r\n    createMaterial: (data: any) => api.post('/materials', data),\r\n    saveMaterial: (id: string) => api.post(`/materials/${id}/save`),\r\n    rateMaterial: (id: string, rating: number) => api.post(`/materials/${id}/rate`, { rating }),\r\n};\r\n\r\n// ===== UPLOAD APIs =====\r\nexport const uploadAPI = {\r\n    uploadFile: (file: FormData) => api.post('/upload/file', file, {\r\n        headers: { 'Content-Type': 'multipart/form-data' }\r\n    }),\r\n    getUserFiles: () => api.get('/upload/files'),\r\n};\r\n\r\n// ===== CHAT APIs =====\r\nexport const chatAPI = {\r\n    getStreamToken: () => api.get('/chat/token'),\r\n};\r\n\r\n// ===== LEGACY EXPORTS (Để tương thích với code cũ) =====\r\nexport const signUp = authAPI.signUp;\r\nexport const signIn = authAPI.signIn;\r\nexport const getAuthUser = authAPI.getMe;\r\nexport const getUserFriends = userAPI.getFriends;\r\nexport const getRecommendedUsers = userAPI.getRecommended;\r\nexport const getFriendRequests = userAPI.getFriendRequests;\r\nexport const sendFriendRequest = userAPI.sendFriendRequest;\r\nexport const acceptFriendRequest = userAPI.acceptFriendRequest;\r\nexport const rejectFriendRequest = userAPI.rejectFriendRequest;\r\nexport const cancelFriendRequest = userAPI.cancelFriendRequest;\r\nexport const getMyProfile = userAPI.getProfile;\r\nexport const updateMyProfile = userAPI.updateProfile;\r\nexport const searchUsers = userAPI.searchUsers;\r\nexport const getStreamToken = chatAPI.getStreamToken;\r\nexport const completeOnBoarding = userAPI.completeOnBoarding;\r\n\r\nexport default apiClient; "],"names":[],"mappings":"AAAA,6CAA6C;;;;;;;;;;;;;;;;;;;;;;;;;AAK5B;AAJjB;AACA;;;AAEA,uCAAuC;AACvC,MAAM,WAAW,iEAAmC;AAEpD,wBAAwB;AACxB,MAAM,YAA2B,wIAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IAC1C,SAAS;IACT,SAAS;IACT,SAAS;QACL,gBAAgB;IACpB;AACJ;AAEA,kCAAkC;AAClC,UAAU,YAAY,CAAC,OAAO,CAAC,GAAG,CAC9B,OAAO;IACH,IAAI;QACA,MAAM,UAAU,MAAM,CAAA,GAAA,iJAAA,CAAA,aAAU,AAAD;QAC/B,IAAI,SAAS,aAAa;YACtB,OAAO,OAAO,CAAC,aAAa,GAAG,CAAC,OAAO,EAAE,QAAQ,WAAW,EAAE;QAClE;IACJ,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,kCAAkC;IACpD;IACA,OAAO;AACX,GACA,CAAC,QAAU,QAAQ,MAAM,CAAC;AAG9B,mCAAmC;AACnC,UAAU,YAAY,CAAC,QAAQ,CAAC,GAAG,CAC/B,CAAC,WAA4B,UAC7B,CAAC;IACG,IAAI,MAAM,QAAQ,EAAE,WAAW,KAAK;QAChC,QAAQ,KAAK,CAAC;IAClB;IACA,OAAO,QAAQ,MAAM,CAAC;AAC1B;AAIG,MAAM,MAAM;IACf,KAAK,OAAgB,KAAa;QAC9B,MAAM,WAAW,MAAM,UAAU,GAAG,CAAC,KAAK;QAC1C,OAAO,SAAS,IAAI;IACxB;IACA,MAAM,OAAgB,KAAa,MAAY;QAC3C,MAAM,WAAW,MAAM,UAAU,IAAI,CAAC,KAAK,MAAM;QACjD,OAAO,SAAS,IAAI;IACxB;IACA,KAAK,OAAgB,KAAa,MAAY;QAC1C,MAAM,WAAW,MAAM,UAAU,GAAG,CAAC,KAAK,MAAM;QAChD,OAAO,SAAS,IAAI;IACxB;IACA,QAAQ,OAAgB,KAAa;QACjC,MAAM,WAAW,MAAM,UAAU,MAAM,CAAC,KAAK;QAC7C,OAAO,SAAS,IAAI;IACxB;AACJ;AAUO,MAAM,UAAU;IACnB,QAAQ,CAAC,OAAc,IAAI,IAAI,CAAC,gBAAgB;IAChD,QAAQ,CAAC,OAAc,IAAI,IAAI,CAAC,gBAAgB;IAChD,OAAO,IAAM,IAAI,GAAG,CAAC;IACrB,QAAQ,IAAM,IAAI,IAAI,CAAC;AAC3B;AAGO,MAAM,UAAU;IACnB,gBAAgB,IAAM,IAAI,GAAG,CAAC;IAC9B,aAAa,CAAC,QAAkB,IAAI,GAAG,CAAC,CAAC,qBAAqB,EAAE,mBAAmB,QAAQ;IAC3F,YAAY,IAAM,IAAI,GAAG,CAAC;IAC1B,mBAAmB,IAAM,IAAI,GAAG,CAAC;IACjC,mBAAmB,CAAC,SAAmB,IAAI,IAAI,CAAC,CAAC,sBAAsB,EAAE,QAAQ;IACjF,qBAAqB,CAAC,YAAsB,IAAI,GAAG,CAAC,CAAC,sBAAsB,EAAE,UAAU,OAAO,CAAC;IAC/F,qBAAqB,CAAC,YAAsB,IAAI,MAAM,CAAC,CAAC,sBAAsB,EAAE,UAAU,OAAO,CAAC;IAClG,qBAAqB,CAAC,SAAmB,IAAI,MAAM,CAAC,CAAC,sBAAsB,EAAE,OAAO,OAAO,CAAC;IAC5F,YAAY,IAAM,IAAI,GAAG,CAAC;IAC1B,eAAe,CAAC,OAAc,IAAI,GAAG,CAAC,kBAAkB;IACxD,oBAAoB,CAAC,OAAc,IAAI,GAAG,CAAC,qBAAqB;AACpE;AAGO,MAAM,cAAc;IACvB,cAAc,CAAC;QACX,MAAM,cAAc,SAAS,CAAC,CAAC,EAAE,IAAI,gBAAgB,QAAQ,QAAQ,IAAI,GAAG;QAC5E,OAAO,IAAI,GAAG,CAAC,CAAC,UAAU,EAAE,aAAa;IAC7C;IACA,iBAAiB,CAAC,KAAe,IAAI,GAAG,CAAC,CAAC,WAAW,EAAE,IAAI;IAC3D,iBAAiB,CAAC,QAAkB,IAAI,GAAG,CAAC,CAAC,yBAAyB,EAAE,mBAAmB,QAAQ;IACnG,gBAAgB,CAAC,OAAc,IAAI,IAAI,CAAC,cAAc;IACtD,cAAc,CAAC,KAAe,IAAI,IAAI,CAAC,CAAC,WAAW,EAAE,GAAG,KAAK,CAAC;IAC9D,cAAc,CAAC,IAAY,SAAmB,IAAI,IAAI,CAAC,CAAC,WAAW,EAAE,GAAG,KAAK,CAAC,EAAE;YAAE;QAAO;AAC7F;AAGO,MAAM,YAAY;IACrB,YAAY,CAAC,OAAmB,IAAI,IAAI,CAAC,gBAAgB,MAAM;YAC3D,SAAS;gBAAE,gBAAgB;YAAsB;QACrD;IACA,cAAc,IAAM,IAAI,GAAG,CAAC;AAChC;AAGO,MAAM,UAAU;IACnB,gBAAgB,IAAM,IAAI,GAAG,CAAC;AAClC;AAGO,MAAM,SAAS,QAAQ,MAAM;AAC7B,MAAM,SAAS,QAAQ,MAAM;AAC7B,MAAM,cAAc,QAAQ,KAAK;AACjC,MAAM,iBAAiB,QAAQ,UAAU;AACzC,MAAM,sBAAsB,QAAQ,cAAc;AAClD,MAAM,oBAAoB,QAAQ,iBAAiB;AACnD,MAAM,oBAAoB,QAAQ,iBAAiB;AACnD,MAAM,sBAAsB,QAAQ,mBAAmB;AACvD,MAAM,sBAAsB,QAAQ,mBAAmB;AACvD,MAAM,sBAAsB,QAAQ,mBAAmB;AACvD,MAAM,eAAe,QAAQ,UAAU;AACvC,MAAM,kBAAkB,QAAQ,aAAa;AAC7C,MAAM,cAAc,QAAQ,WAAW;AACvC,MAAM,iBAAiB,QAAQ,cAAc;AAC7C,MAAM,qBAAqB,QAAQ,kBAAkB;uCAE7C","debugId":null}},
    {"offset": {"line": 152, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Bruce%20Vo/Documents/project/linguex/Streaming_Platform/frontend/contexts/AuthContext.tsx"],"sourcesContent":["// contexts/AuthContext.tsx\r\n'use client';\r\n\r\nimport { createContext, useContext, useEffect, useState, ReactNode, useCallback } from 'react';\r\nimport { useSession, signOut as nextAuthSignOut, signOut, getSession } from \"next-auth/react\";\r\nimport { useRouter } from 'next/navigation';\r\nimport { getAuthUser } from \"@/lib/api\"; \r\n\r\ninterface User {\r\n    _id: string;\r\n    fullName: string;\r\n    email: string;\r\n    profilePic: string;\r\n    isOnboarded: boolean;\r\n    bio: string;\r\n    nativeLanguage: string;\r\n    learningLanguage: string;\r\n    location: string;\r\n}\r\n\r\ninterface AuthContextType {\r\n    user: User | null;\r\n    token: string | null;\r\n    login: (userData: User, token: string) => void;\r\n    logout: () => void;\r\n    updateUser: (userData: User) => void;\r\n    refreshUser: () => Promise<void>; // ✅ Thêm vào interface\r\n    isLoading: boolean;\r\n    authMethod: 'oauth' | 'credentials' | null;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\nexport function AuthProvider({ children }: { children: ReactNode }) {\r\n    const { data: session, status } = useSession();\r\n    const router = useRouter();\r\n    \r\n    const [user, setUser] = useState<User | null>(null);\r\n    const [token, setToken] = useState<string | null>(null);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [authMethod, setAuthMethod] = useState<'oauth' | 'credentials' | null>(null);\r\n\r\n    // ✅ Sử dụng getAuthUser thay vì fetchUserData\r\n    const fetchUserData = useCallback(async (accessToken: string) => {\r\n        try {\r\n            // Token đã được set trong header bởi makeAuthenticationRequest\r\n            const response = await getAuthUser();\r\n            return response?.user || null;\r\n        } catch (error) {\r\n            console.error('Error fetching user data:', error);\r\n            return null;\r\n        }\r\n    }, []);\r\n\r\n    // Effect để xử lý authentication\r\n    useEffect(() => {\r\n        const initAuth = async () => {\r\n            if (status === 'loading') {\r\n                return;\r\n            }\r\n\r\n            if (session?.user && session?.accessToken) {\r\n                console.log('🔐 NextAuth session detected');\r\n                \r\n                // Set token để makeAuthenticationRequest có thể sử dụng\r\n                localStorage.setItem('auth_token', session.accessToken);\r\n                \r\n                const fullUserData = await fetchUserData(session.accessToken);\r\n                \r\n                if (fullUserData) {\r\n                    setUser(fullUserData);\r\n                    setToken(session.accessToken);\r\n                    setAuthMethod('oauth');\r\n                }\r\n                \r\n                // Clear localStorage sau khi dùng xong (OAuth không cần lưu)\r\n                localStorage.removeItem('auth_token');\r\n            } else {\r\n                console.log('🔑 Checking localStorage for credentials auth');\r\n                \r\n                const savedToken = localStorage.getItem('auth_token');\r\n                const savedUser = localStorage.getItem('auth_user');\r\n\r\n                if (savedToken && savedUser) {\r\n                    try {\r\n                        const userData = await fetchUserData(savedToken);\r\n                        \r\n                        if (userData) {\r\n                            setUser(userData);\r\n                            setToken(savedToken);\r\n                            setAuthMethod('credentials');\r\n                        } else {\r\n                            localStorage.removeItem('auth_token');\r\n                            localStorage.removeItem('auth_user');\r\n                        }\r\n                    } catch (error) {\r\n                        console.error('Error validating saved token:', error);\r\n                        localStorage.removeItem('auth_token');\r\n                        localStorage.removeItem('auth_user');\r\n                    }\r\n                }\r\n            }\r\n\r\n            setIsLoading(false);\r\n        };\r\n\r\n        initAuth();\r\n    }, [session, status, fetchUserData]);\r\n\r\n    // Login function cho credentials\r\n    const login = useCallback((userData: User, token: string) => {\r\n        console.log('🔐 LOGIN DEBUG - Input token:', {\r\n            tokenExists: !!token,\r\n            tokenType: typeof token,\r\n            tokenLength: token?.length,\r\n            tokenValue: token // Log full token để debug\r\n        });\r\n\r\n        const cleanToken = typeof token === 'string' ? token : String(token);\r\n\r\n        if (!cleanToken || cleanToken === 'undefined' || cleanToken === 'null') {\r\n            console.error('❌ Invalid token provided to login function');\r\n            return;\r\n        }\r\n\r\n        setUser(userData);\r\n        setToken(cleanToken); \r\n        setAuthMethod('credentials');\r\n        \r\n        localStorage.removeItem('auth_token');\r\n        localStorage.removeItem('auth_user');\r\n        \r\n        localStorage.setItem('auth_token', cleanToken); // ✅ Save as string\r\n        localStorage.setItem('auth_user', JSON.stringify(userData));\r\n\r\n        const savedToken = localStorage.getItem('auth_token');\r\n        console.log('🔐 Token verification after save:', {\r\n            saved: !!savedToken,\r\n            matches: savedToken === token,\r\n            savedLength: savedToken?.length\r\n        });\r\n    }, []);\r\n\r\n    // Logout function\r\n    const logout = async () => {\r\n        console.log(\"🔴 Logout started\");\r\n        try {\r\n            // Clear local storage\r\n            localStorage.removeItem('auth_token');\r\n            localStorage.removeItem(\"user\");\r\n            console.log(\"🗑️ Local storage cleared\");\r\n            \r\n            // Clear state\r\n            setUser(null);\r\n            setAuthMethod(null);\r\n            console.log(\"🔄 State cleared\");\r\n            \r\n            // Clear NextAuth session if exists\r\n            const session = await getSession();\r\n            if (session) {\r\n                console.log(\"🔐 Clearing NextAuth session\");\r\n                await signOut({ redirect: false });\r\n            }\r\n            \r\n            console.log(\"✅ Logout complete\");\r\n            \r\n            // Redirect to sign-in\r\n            router.push(\"/sign-in\");\r\n        } catch (error) {\r\n            console.error(\"❌ Logout error:\", error);\r\n        }\r\n    };\r\n\r\n    // Update user function\r\n    const updateUser = useCallback((userData: User) => {\r\n        console.log('🔄 Updating user data');\r\n        setUser(userData);\r\n        \r\n        if (authMethod === 'credentials') {\r\n            localStorage.setItem('auth_user', JSON.stringify(userData));\r\n        }\r\n    }, [authMethod]);\r\n\r\n    // ✅ Refresh user function\r\n    const refreshUser = useCallback(async () => {\r\n        try {\r\n            console.log('🔄 Refreshing user data...');\r\n            \r\n            // Đảm bảo có token\r\n            if (!token && authMethod === 'oauth' && session?.accessToken) {\r\n                // Tạm thời set token cho OAuth\r\n                localStorage.setItem('auth_token', session.accessToken);\r\n            }\r\n            \r\n            const response = await getAuthUser();\r\n            \r\n            if (response?.user) {\r\n                setUser(response.user);\r\n                console.log('✅ User data refreshed');\r\n            }\r\n            \r\n            // Clear temp token nếu là OAuth\r\n            if (authMethod === 'oauth') {\r\n                localStorage.removeItem('auth_token');\r\n            }\r\n        } catch (error) {\r\n            console.error('Failed to refresh user:', error);\r\n        }\r\n    }, [token, authMethod, session]);\r\n\r\n    return (\r\n        <AuthContext.Provider value={{ \r\n            user, \r\n            token, \r\n            login, \r\n            logout, \r\n            refreshUser, \r\n            updateUser, \r\n            isLoading,\r\n            authMethod\r\n        }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n}\r\n\r\nexport function useAuth() {\r\n    const context = useContext(AuthContext);\r\n    if (!context) {\r\n        throw new Error('useAuth must be used within AuthProvider');\r\n    }\r\n    return context;\r\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 384, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Bruce%20Vo/Documents/project/linguex/Streaming_Platform/frontend/contexts/ThemeContext.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { createContext, useContext, useEffect, useState, ReactNode } from 'react';\r\n\r\ninterface ThemeContextType {\r\n    theme: string;\r\n    setTheme: (theme: string) => void;\r\n}\r\n\r\nconst ThemeContext = createContext<ThemeContextType | undefined>(undefined);\r\n\r\nexport function ThemeProvider({ children }: { children: ReactNode }) {\r\n    const [theme, setThemeState] = useState('dark'); // default theme\r\n    const [mounted, setMounted] = useState(false);\r\n\r\n    // Load theme from localStorage on mount\r\n    useEffect(() => {\r\n        const savedTheme = localStorage.getItem('streamify-theme') || 'dark';\r\n        setThemeState(savedTheme);\r\n        document.documentElement.setAttribute('data-theme', savedTheme);\r\n        setMounted(true);\r\n    }, []);\r\n\r\n    const setTheme = (newTheme: string) => {\r\n        setThemeState(newTheme);\r\n        localStorage.setItem('streamify-theme', newTheme);\r\n        document.documentElement.setAttribute('data-theme', newTheme);\r\n    };\r\n\r\n    // Don't render until mounted to avoid hydration mismatch\r\n    if (!mounted) {\r\n        return <>{children}</>;\r\n    }\r\n\r\n    return (\r\n        <ThemeContext.Provider value={{ theme, setTheme }}>\r\n            {children}\r\n        </ThemeContext.Provider>\r\n    );\r\n}\r\n\r\nexport function useTheme() {\r\n    const context = useContext(ThemeContext);\r\n    if (context === undefined) {\r\n        throw new Error('useTheme must be used within a ThemeProvider');\r\n    }\r\n    return context;\r\n}"],"names":[],"mappings":";;;;;AAEA;;;AAFA;;AASA,MAAM,6BAAe,CAAA,GAAA,6JAAA,CAAA,gBAAa,AAAD,EAAgC;AAE1D,SAAS,cAAc,EAAE,QAAQ,EAA2B;;IAC/D,MAAM,CAAC,OAAO,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE,SAAS,gBAAgB;IACjE,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,wCAAwC;IACxC,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;mCAAE;YACN,MAAM,aAAa,aAAa,OAAO,CAAC,sBAAsB;YAC9D,cAAc;YACd,SAAS,eAAe,CAAC,YAAY,CAAC,cAAc;YACpD,WAAW;QACf;kCAAG,EAAE;IAEL,MAAM,WAAW,CAAC;QACd,cAAc;QACd,aAAa,OAAO,CAAC,mBAAmB;QACxC,SAAS,eAAe,CAAC,YAAY,CAAC,cAAc;IACxD;IAEA,yDAAyD;IACzD,IAAI,CAAC,SAAS;QACV,qBAAO;sBAAG;;IACd;IAEA,qBACI,6LAAC,aAAa,QAAQ;QAAC,OAAO;YAAE;YAAO;QAAS;kBAC3C;;;;;;AAGb;GA5BgB;KAAA;AA8BT,SAAS;;IACZ,MAAM,UAAU,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,YAAY,WAAW;QACvB,MAAM,IAAI,MAAM;IACpB;IACA,OAAO;AACX;IANgB","debugId":null}},
    {"offset": {"line": 453, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Bruce%20Vo/Documents/project/linguex/Streaming_Platform/frontend/components/ToasterProvider.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { Toaster } from \"react-hot-toast\";\r\n\r\nexport function ToasterProvider() {\r\n    return <Toaster />;\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AAFA;;;AAIO,SAAS;IACZ,qBAAO,6LAAC,0JAAA,CAAA,UAAO;;;;;AACnB;KAFgB","debugId":null}},
    {"offset": {"line": 480, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Bruce%20Vo/Documents/project/linguex/Streaming_Platform/frontend/providers/SessionProvider.tsx"],"sourcesContent":["'use client'\r\n\r\nimport { SessionProvider } from \"next-auth/react\"\r\n\r\nexport default function NextAuthSessionProvider({\r\n    children,\r\n}: {\r\n    children: React.ReactNode\r\n}) {\r\n    return (\r\n        <SessionProvider // Refetch session mỗi 5 phút thay vì liên tục\r\n            refetchInterval={5 * 60} // 5 minutes\r\n            refetchOnWindowFocus={false} // Tắt refetch khi focus window>\r\n        >\r\n            {children}\r\n        </ SessionProvider>\r\n    );\r\n}"],"names":[],"mappings":";;;;AAEA;AAFA;;;AAIe,SAAS,wBAAwB,EAC5C,QAAQ,EAGX;IACG,qBACI,6LAAC,kJAAgB,8CAA8C;IAA9D,CAAA,kBAAe;QACZ,iBAAiB,IAAI;QACrB,sBAAsB;kBAErB;;;;;;AAGb;KAbwB","debugId":null}}]
}