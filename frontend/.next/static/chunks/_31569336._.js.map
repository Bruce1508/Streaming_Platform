{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/ACER/Documents/code/streamify/Streaming_Platform/frontend/components/ui/PageLoader.tsx"],"sourcesContent":["import { LoaderIcon } from \"lucide-react\";\r\n\r\nconst PageLoader = () => {\r\n    return (\r\n        <div className=\"min-h-screen flex items-center justify-center\">\r\n            <LoaderIcon className=\"animate-spin size-10 text-primary\" />\r\n        </div>\r\n    );\r\n};\r\nexport default PageLoader;"],"names":[],"mappings":";;;;AAAA;;;AAEA,MAAM,aAAa;IACf,qBACI,6LAAC;QAAI,WAAU;kBACX,cAAA,6LAAC,6MAAA,CAAA,aAAU;YAAC,WAAU;;;;;;;;;;;AAGlC;KANM;uCAOS","debugId":null}},
    {"offset": {"line": 43, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/ACER/Documents/code/streamify/Streaming_Platform/frontend/lib/axios.ts"],"sourcesContent":["// lib/axiosInstance.ts\r\nimport axios from \"axios\";\r\n\r\nconst BASE_URL = process.env.NEXT_PUBLIC_API_URL || \"http://localhost:5001/api\";\r\n\r\nexport const axiosInstance = axios.create({\r\n  baseURL: BASE_URL,  // Đây là URL của backend của bạn\r\n  withCredentials: true,  // Cho phép gửi cookies (cần thiết cho authentication)\r\n});\r\n\r\naxiosInstance.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    // Xử lý lỗi globally, ví dụ: refresh token, redirect to login, v.v.\r\n    return Promise.reject(error);\r\n  }\r\n);"],"names":[],"mappings":"AAAA,uBAAuB;;;;AAGN;AAFjB;;AAEA,MAAM,WAAW,iEAAmC;AAE7C,MAAM,gBAAgB,wIAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IACxC,SAAS;IACT,iBAAiB;AACnB;AAEA,cAAc,YAAY,CAAC,QAAQ,CAAC,GAAG,CACrC,CAAC,WAAa,UACd,CAAC;IACC,oEAAoE;IACpE,OAAO,QAAQ,MAAM,CAAC;AACxB","debugId":null}},
    {"offset": {"line": 68, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/ACER/Documents/code/streamify/Streaming_Platform/frontend/lib/api.ts"],"sourcesContent":["// lib/api.ts\r\nimport { axiosInstance } from \"./axios\";\r\n\r\n// Định nghĩa các interfaces\r\ninterface SignupData {\r\n    fullName: string;\r\n    email: string;\r\n    password: string;\r\n}\r\n\r\ninterface LoginData {\r\n    email: string;\r\n    password: string;\r\n}\r\n\r\ninterface UserData {\r\n    fullName?: string;\r\n    bio?: string;\r\n    nativeLanguage?: string;\r\n    learningLanguage?: string;\r\n    location?: string;\r\n    profilePic?: string;\r\n}\r\n\r\ninterface AuthResponse {\r\n    success: boolean;\r\n    message?: string;\r\n    user?: {\r\n        _id: string;\r\n        fullName: string;\r\n        email: string;\r\n        profilePic: string;\r\n        isOnboarded: boolean;\r\n    };\r\n}\r\n\r\n// Authentication APIs\r\nexport const signup = async (signupData: SignupData): Promise <AuthResponse> => {\r\n    try {\r\n        console.log(\"Sending signup data:\", signupData);\r\n        const response = await axiosInstance.post(\"/auth/sign-up\", signupData);\r\n        console.log(\"Signup response:\", response.data);\r\n        return response.data;\r\n    } catch (error: any) {\r\n        if (error.response) {\r\n            // Thông tin chi tiết hơn về lỗi từ server\r\n            console.error(\"Error status:\", error.response.status);\r\n            console.error(\"Error data:\", error.response.data);\r\n            console.error(\"Error headers:\", error.response.headers);\r\n        } else if (error.request) {\r\n            // Request đã được gửi nhưng không nhận được response\r\n            console.error(\"Error request:\", error.request);\r\n        } else {\r\n            // Lỗi khi setting up request\r\n            console.error(\"Error message:\", error.message);\r\n        }\r\n        return {\r\n            success: false,\r\n            message: error.response?.data?.message || 'Failed to sign up'\r\n        };\r\n    }\r\n};\r\n\r\nexport const login = async (loginData: LoginData): Promise<AuthResponse> => {\r\n    try {\r\n        const response = await axiosInstance.post(\"/auth/login\", loginData);\r\n        return response.data;\r\n    } catch (error: any) {\r\n        return {\r\n            success: false,\r\n            message: error.response?.data?.message || 'Failed to sign in'\r\n        };\r\n    }\r\n\r\n};\r\n\r\nexport const logout = async (): Promise<{ success: boolean; message: string }> => {\r\n    const response = await axiosInstance.post(\"/auth/logout\");\r\n    return response.data;\r\n};\r\n\r\nexport const getAuthUser = async (): Promise <AuthResponse | null> => {\r\n    try {\r\n        const res = await axiosInstance.get(\"/auth/me\");\r\n        return res.data;\r\n    } catch (error) {\r\n        console.log(\"Error in getAuthUser:\", error);\r\n        return null;\r\n    }\r\n};\r\n\r\nexport const completeOnboarding = async (userData: UserData): Promise<AuthResponse> => {\r\n    const response = await axiosInstance.post(\"/auth/onboarding\", userData);\r\n    return response.data;\r\n};\r\n\r\n// User and Friends APIs\r\nexport async function getUserFriends() {\r\n    const response = await axiosInstance.get(\"/users/friends\");\r\n    return response.data;\r\n}\r\n\r\nexport async function getRecommendedUsers() {\r\n    const response = await axiosInstance.get(\"/users\");\r\n    return response.data;\r\n}\r\n\r\nexport async function getOutgoingFriendReqs() {\r\n    const response = await axiosInstance.get(\"/users/outgoing-friend-requests\");\r\n    return response.data;\r\n}\r\n\r\nexport async function sendFriendRequest(userId: string) {\r\n    const response = await axiosInstance.post(`/users/friend-request/${userId}`);\r\n    return response.data;\r\n}\r\n\r\nexport async function getFriendRequests() {\r\n    const response = await axiosInstance.get(\"/users/friend-requests\");\r\n    return response.data;\r\n}\r\n\r\nexport async function acceptFriendRequest(requestId: string) {\r\n    const response = await axiosInstance.put(`/users/friend-request/${requestId}/accept`);\r\n    return response.data;\r\n}\r\n\r\n// Chat APIs\r\nexport async function getStreamToken() {\r\n    const response = await axiosInstance.get(\"/chat/token\");\r\n    return response.data;\r\n}"],"names":[],"mappings":"AAAA,aAAa;;;;;;;;;;;;;;;AACb;;AAoCO,MAAM,SAAS,OAAO;IACzB,IAAI;QACA,QAAQ,GAAG,CAAC,wBAAwB;QACpC,MAAM,WAAW,MAAM,+GAAA,CAAA,gBAAa,CAAC,IAAI,CAAC,iBAAiB;QAC3D,QAAQ,GAAG,CAAC,oBAAoB,SAAS,IAAI;QAC7C,OAAO,SAAS,IAAI;IACxB,EAAE,OAAO,OAAY;QACjB,IAAI,MAAM,QAAQ,EAAE;YAChB,0CAA0C;YAC1C,QAAQ,KAAK,CAAC,iBAAiB,MAAM,QAAQ,CAAC,MAAM;YACpD,QAAQ,KAAK,CAAC,eAAe,MAAM,QAAQ,CAAC,IAAI;YAChD,QAAQ,KAAK,CAAC,kBAAkB,MAAM,QAAQ,CAAC,OAAO;QAC1D,OAAO,IAAI,MAAM,OAAO,EAAE;YACtB,qDAAqD;YACrD,QAAQ,KAAK,CAAC,kBAAkB,MAAM,OAAO;QACjD,OAAO;YACH,6BAA6B;YAC7B,QAAQ,KAAK,CAAC,kBAAkB,MAAM,OAAO;QACjD;QACA,OAAO;YACH,SAAS;YACT,SAAS,MAAM,QAAQ,EAAE,MAAM,WAAW;QAC9C;IACJ;AACJ;AAEO,MAAM,QAAQ,OAAO;IACxB,IAAI;QACA,MAAM,WAAW,MAAM,+GAAA,CAAA,gBAAa,CAAC,IAAI,CAAC,eAAe;QACzD,OAAO,SAAS,IAAI;IACxB,EAAE,OAAO,OAAY;QACjB,OAAO;YACH,SAAS;YACT,SAAS,MAAM,QAAQ,EAAE,MAAM,WAAW;QAC9C;IACJ;AAEJ;AAEO,MAAM,SAAS;IAClB,MAAM,WAAW,MAAM,+GAAA,CAAA,gBAAa,CAAC,IAAI,CAAC;IAC1C,OAAO,SAAS,IAAI;AACxB;AAEO,MAAM,cAAc;IACvB,IAAI;QACA,MAAM,MAAM,MAAM,+GAAA,CAAA,gBAAa,CAAC,GAAG,CAAC;QACpC,OAAO,IAAI,IAAI;IACnB,EAAE,OAAO,OAAO;QACZ,QAAQ,GAAG,CAAC,yBAAyB;QACrC,OAAO;IACX;AACJ;AAEO,MAAM,qBAAqB,OAAO;IACrC,MAAM,WAAW,MAAM,+GAAA,CAAA,gBAAa,CAAC,IAAI,CAAC,oBAAoB;IAC9D,OAAO,SAAS,IAAI;AACxB;AAGO,eAAe;IAClB,MAAM,WAAW,MAAM,+GAAA,CAAA,gBAAa,CAAC,GAAG,CAAC;IACzC,OAAO,SAAS,IAAI;AACxB;AAEO,eAAe;IAClB,MAAM,WAAW,MAAM,+GAAA,CAAA,gBAAa,CAAC,GAAG,CAAC;IACzC,OAAO,SAAS,IAAI;AACxB;AAEO,eAAe;IAClB,MAAM,WAAW,MAAM,+GAAA,CAAA,gBAAa,CAAC,GAAG,CAAC;IACzC,OAAO,SAAS,IAAI;AACxB;AAEO,eAAe,kBAAkB,MAAc;IAClD,MAAM,WAAW,MAAM,+GAAA,CAAA,gBAAa,CAAC,IAAI,CAAC,CAAC,sBAAsB,EAAE,QAAQ;IAC3E,OAAO,SAAS,IAAI;AACxB;AAEO,eAAe;IAClB,MAAM,WAAW,MAAM,+GAAA,CAAA,gBAAa,CAAC,GAAG,CAAC;IACzC,OAAO,SAAS,IAAI;AACxB;AAEO,eAAe,oBAAoB,SAAiB;IACvD,MAAM,WAAW,MAAM,+GAAA,CAAA,gBAAa,CAAC,GAAG,CAAC,CAAC,sBAAsB,EAAE,UAAU,OAAO,CAAC;IACpF,OAAO,SAAS,IAAI;AACxB;AAGO,eAAe;IAClB,MAAM,WAAW,MAAM,+GAAA,CAAA,gBAAa,CAAC,GAAG,CAAC;IACzC,OAAO,SAAS,IAAI;AACxB","debugId":null}},
    {"offset": {"line": 175, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/ACER/Documents/code/streamify/Streaming_Platform/frontend/hooks/useAuthUser.ts"],"sourcesContent":["import { getAuthUser } from \"@/lib/api\";\r\nimport { useQuery } from \"@tanstack/react-query\"\r\n\r\nconst useAuthUser = () => {\r\n    const authUser = useQuery({\r\n        queryKey: [\"authUser\"],\r\n        queryFn: getAuthUser,\r\n        retry: false, //auth check\r\n    })\r\n\r\n    return {\r\n        isLoading: authUser.isLoading,\r\n        authUser: authUser.data?.user\r\n    }\r\n}\r\n\r\nexport default useAuthUser;"],"names":[],"mappings":";;;AAAA;AACA;;;;AAEA,MAAM,cAAc;;IAChB,MAAM,WAAW,CAAA,GAAA,8KAAA,CAAA,WAAQ,AAAD,EAAE;QACtB,UAAU;YAAC;SAAW;QACtB,SAAS,6GAAA,CAAA,cAAW;QACpB,OAAO;IACX;IAEA,OAAO;QACH,WAAW,SAAS,SAAS;QAC7B,UAAU,SAAS,IAAI,EAAE;IAC7B;AACJ;GAXM;;QACe,8KAAA,CAAA,WAAQ;;;uCAYd","debugId":null}},
    {"offset": {"line": 212, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/ACER/Documents/code/streamify/Streaming_Platform/frontend/app/%28protected%29/layout.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useEffect, ReactNode } from \"react\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport PageLoader from \"@/components/ui/PageLoader\";\r\nimport { usePathname } from \"next/navigation\";\r\nimport useAuthUser from \"@/hooks/useAuthUser\";\r\n\r\nexport default function ProtectedLayout({ children }: { children: ReactNode }) {\r\n    const router = useRouter();\r\n    const pathname = usePathname();\r\n\r\n    // Kiểm tra nếu người dùng vừa đăng ký\r\n    const justSignedUp = typeof window !== 'undefined' &&\r\n        sessionStorage.getItem('justSignedUp') === 'true';\r\n\r\n    const { isLoading, authUser } = useAuthUser();\r\n\r\n    const isAuthenticated = Boolean(authUser) || justSignedUp;\r\n    const isOnboarded = authUser?.isOnboarded || justSignedUp;\r\n\r\n    console.log('Protected layout - Auth data:', authUser);\r\n    console.log('Protected layout - isAuthenticated:', isAuthenticated);\r\n    console.log('Protected layout - isOnboarded:', isOnboarded);\r\n    console.log('Protected layout - justSignedUp:', justSignedUp);\r\n\r\n    useEffect(() => {\r\n        if (isLoading) return;\r\n\r\n        if (!isAuthenticated) {\r\n            router.push(\"/sign-up\");\r\n            return;\r\n        }\r\n\r\n        switch (pathname) {\r\n            case \"/onBoarding\": break;\r\n\r\n            case \"/call\":\r\n            case \"/chat\":\r\n            case \"/notifications\":\r\n                if (!isOnboarded) {\r\n                    router.push(\"/onBoarding\");\r\n                };\r\n                break;\r\n            default:\r\n                // For other protected routes, require onboarding\r\n                if (!isOnboarded) {\r\n                    router.push(\"/onboarding\");\r\n                }\r\n        }\r\n\r\n        // Clear sign-up flag after use\r\n        if (justSignedUp && authUser) {\r\n            sessionStorage.removeItem('justSignedUp');\r\n        }\r\n    }, [isLoading, isAuthenticated, isOnboarded, router, pathname, authUser, justSignedUp]);\r\n\r\n    if (isLoading) return <PageLoader />;\r\n\r\n    // Don't render loader for onboarding page if user is authenticated but not onboarded\r\n    if (pathname === \"/onboarding\" && isAuthenticated) {\r\n        return <>{children}</>;\r\n    }\r\n\r\n    // Nếu không xác thực hoặc không onboarded (trừ trang onboarding),\r\n    if (!isAuthenticated || (!isOnboarded && pathname !== \"/onboarding\")) {\r\n        return <PageLoader />;\r\n    }\r\n\r\n    return <>{children}</>;\r\n}"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;;;AANA;;;;;;AAQe,SAAS,gBAAgB,EAAE,QAAQ,EAA2B;;IACzE,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,WAAW,CAAA,GAAA,qIAAA,CAAA,cAAW,AAAD;IAE3B,sCAAsC;IACtC,MAAM,eAAe,aAAkB,eACnC,eAAe,OAAO,CAAC,oBAAoB;IAE/C,MAAM,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,CAAA,GAAA,uHAAA,CAAA,UAAW,AAAD;IAE1C,MAAM,kBAAkB,QAAQ,aAAa;IAC7C,MAAM,cAAc,UAAU,eAAe;IAE7C,QAAQ,GAAG,CAAC,iCAAiC;IAC7C,QAAQ,GAAG,CAAC,uCAAuC;IACnD,QAAQ,GAAG,CAAC,mCAAmC;IAC/C,QAAQ,GAAG,CAAC,oCAAoC;IAEhD,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;qCAAE;YACN,IAAI,WAAW;YAEf,IAAI,CAAC,iBAAiB;gBAClB,OAAO,IAAI,CAAC;gBACZ;YACJ;YAEA,OAAQ;gBACJ,KAAK;oBAAe;gBAEpB,KAAK;gBACL,KAAK;gBACL,KAAK;oBACD,IAAI,CAAC,aAAa;wBACd,OAAO,IAAI,CAAC;oBAChB;;oBACA;gBACJ;oBACI,iDAAiD;oBACjD,IAAI,CAAC,aAAa;wBACd,OAAO,IAAI,CAAC;oBAChB;YACR;YAEA,+BAA+B;YAC/B,IAAI,gBAAgB,UAAU;gBAC1B,eAAe,UAAU,CAAC;YAC9B;QACJ;oCAAG;QAAC;QAAW;QAAiB;QAAa;QAAQ;QAAU;QAAU;KAAa;IAEtF,IAAI,WAAW,qBAAO,6LAAC,kIAAA,CAAA,UAAU;;;;;IAEjC,qFAAqF;IACrF,IAAI,aAAa,iBAAiB,iBAAiB;QAC/C,qBAAO;sBAAG;;IACd;IAEA,kEAAkE;IAClE,IAAI,CAAC,mBAAoB,CAAC,eAAe,aAAa,eAAgB;QAClE,qBAAO,6LAAC,kIAAA,CAAA,UAAU;;;;;IACtB;IAEA,qBAAO;kBAAG;;AACd;GA9DwB;;QACL,qIAAA,CAAA,YAAS;QACP,qIAAA,CAAA,cAAW;QAMI,uHAAA,CAAA,UAAW;;;KARvB","debugId":null}}]
}