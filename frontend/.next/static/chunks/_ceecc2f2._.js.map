{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Bruce%20Vo/Documents/project/Streaming_Platform/frontend/lib/api.ts"],"sourcesContent":["const BASE_URL = process.env.NEXT_PUBLIC_API_URL || 'http://localhost:5001/api';\r\n\r\ninterface ApiResponse<T = any> {\r\n    success: boolean;\r\n    message?: string;\r\n    user?: T;\r\n    token?: string;\r\n}\r\n\r\ninterface SignupData {\r\n    fullName: string;\r\n    email: string;\r\n    password: string;\r\n}\r\n\r\ninterface LoginData {\r\n    email: string;\r\n    password: string;\r\n}\r\n\r\ninterface OnboardingData {\r\n    fullName: string;\r\n    bio: string;\r\n    nativeLanguage: string;\r\n    learningLanguage: string;\r\n    location: string;\r\n    profilePic: string;\r\n}\r\n\r\nconst makeAuthenticationRequest = async (\r\n    endpoint: string, \r\n    options: RequestInit = {}\r\n): Promise<Response> => {\r\n    const token = localStorage.getItem('auth_token');\r\n\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        ...(token && { Authorization: `Bearer ${token}` }),\r\n        ...options.headers,\r\n    };\r\n\r\n    return fetch(`${BASE_URL}${endpoint}`, {\r\n        ...options,\r\n        headers,\r\n    });\r\n}\r\n\r\nexport const signUp = async (signUpData: SignupData): Promise<ApiResponse> => {\r\n    try {\r\n        const response = await fetch(`${BASE_URL}/auth/sign-up`, {\r\n            method: 'POST',\r\n            body: JSON.stringify(signUpData),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        });\r\n\r\n        const data = await response.json();\r\n        return data;\r\n    } catch (error: any) {\r\n        console.error('Signup error:', error);\r\n        return {\r\n            success: false,\r\n            message: 'Network error occurred with signUp function in api.ts'\r\n        };\r\n    }\r\n}\r\n\r\nexport const signIn = async (loginData: LoginData): Promise<ApiResponse> => {\r\n    try {\r\n        const response = await fetch(`${BASE_URL}/auth/sign-in`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(loginData),\r\n        });\r\n\r\n        const data = await response.json();\r\n        return data;\r\n    } catch (error: any) {\r\n        console.error('Login error in api.ts:', error);\r\n        return {\r\n            success: false,\r\n            message: 'Something wrong with signIn function in api.ts'\r\n        };\r\n    }\r\n};\r\n\r\nexport const getAuthUser = async (): Promise<ApiResponse | null> => {\r\n    try {\r\n        const response = await makeAuthenticationRequest(\"/auth/me\");\r\n        if (!response.ok) {\r\n            return null;\r\n        }\r\n\r\n        const data = await response.json();\r\n        return data;\r\n\r\n    } catch (error) {\r\n        console.error('Get auth user error in api.ts:', error);\r\n        return null;\r\n    }\r\n}\r\n\r\nexport const completeOnBoarding = async (userData: OnboardingData): Promise<ApiResponse> => {\r\n    try {\r\n        const response = await makeAuthenticationRequest('/auth/onBoarding', {\r\n            method: 'POST',\r\n            body: JSON.stringify(userData),\r\n        });\r\n\r\n        const data = await response.json();\r\n        return data;\r\n    } catch (error) {\r\n        console.error(\"Onboarding error in api.ts: \", error);\r\n        return {\r\n            success: false,\r\n            message: \"Internal error in Onboarding in api.ts\"\r\n        }\r\n    }\r\n}\r\n\r\nexport const\r\n"],"names":[],"mappings":";;;;;;AAAiB;AAAjB,MAAM,WAAW,iEAAmC;AA6BpD,MAAM,4BAA4B,OAC9B,UACA,UAAuB,CAAC,CAAC;IAEzB,MAAM,QAAQ,aAAa,OAAO,CAAC;IAEnC,MAAM,UAAU;QACZ,gBAAgB;QAChB,GAAI,SAAS;YAAE,eAAe,CAAC,OAAO,EAAE,OAAO;QAAC,CAAC;QACjD,GAAG,QAAQ,OAAO;IACtB;IAEA,OAAO,MAAM,GAAG,WAAW,UAAU,EAAE;QACnC,GAAG,OAAO;QACV;IACJ;AACJ;AAEO,MAAM,SAAS,OAAO;IACzB,IAAI;QACA,MAAM,WAAW,MAAM,MAAM,GAAG,SAAS,aAAa,CAAC,EAAE;YACrD,QAAQ;YACR,MAAM,KAAK,SAAS,CAAC;YACrB,SAAS;gBACL,gBAAgB;YACpB;QACJ;QAEA,MAAM,OAAO,MAAM,SAAS,IAAI;QAChC,OAAO;IACX,EAAE,OAAO,OAAY;QACjB,QAAQ,KAAK,CAAC,iBAAiB;QAC/B,OAAO;YACH,SAAS;YACT,SAAS;QACb;IACJ;AACJ;AAEO,MAAM,SAAS,OAAO;IACzB,IAAI;QACA,MAAM,WAAW,MAAM,MAAM,GAAG,SAAS,aAAa,CAAC,EAAE;YACrD,QAAQ;YACR,SAAS;gBACL,gBAAgB;YACpB;YACA,MAAM,KAAK,SAAS,CAAC;QACzB;QAEA,MAAM,OAAO,MAAM,SAAS,IAAI;QAChC,OAAO;IACX,EAAE,OAAO,OAAY;QACjB,QAAQ,KAAK,CAAC,0BAA0B;QACxC,OAAO;YACH,SAAS;YACT,SAAS;QACb;IACJ;AACJ;AAEO,MAAM,cAAc;IACvB,IAAI;QACA,MAAM,WAAW,MAAM,0BAA0B;QACjD,IAAI,CAAC,SAAS,EAAE,EAAE;YACd,OAAO;QACX;QAEA,MAAM,OAAO,MAAM,SAAS,IAAI;QAChC,OAAO;IAEX,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,kCAAkC;QAChD,OAAO;IACX;AACJ;AAEO,MAAM,qBAAqB,OAAO;IACrC,IAAI;QACA,MAAM,WAAW,MAAM,0BAA0B,oBAAoB;YACjE,QAAQ;YACR,MAAM,KAAK,SAAS,CAAC;QACzB;QAEA,MAAM,OAAO,MAAM,SAAS,IAAI;QAChC,OAAO;IACX,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,gCAAgC;QAC9C,OAAO;YACH,SAAS;YACT,SAAS;QACb;IACJ;AACJ;AAEO","debugId":null}},
    {"offset": {"line": 106, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Bruce%20Vo/Documents/project/Streaming_Platform/frontend/app/%28auth%29/sign-up/page.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { ShipWheelIcon } from \"lucide-react\";\r\nimport Link from \"next/link\";\r\nimport Image from \"next/image\";\r\nimport { useState } from \"react\";\r\nimport toast from 'react-hot-toast';\r\nimport { useRouter } from \"next/navigation\";\r\nimport { useAuth } from \"@/contexts/AuthContext\";\r\nimport { signUp } from \"@/lib/api\";\r\n\r\nexport default function SignUpPage() {\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [errors, setErrors] = useState<any>({});\r\n    const router = useRouter();\r\n    const { login } = useAuth();\r\n\r\n    const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n        setIsLoading(true);\r\n        setErrors({});\r\n\r\n        const formData = new FormData(e.currentTarget);\r\n        const fullName = formData.get('fullName') as string;\r\n        const email = formData.get('email') as string;\r\n        const password = formData.get('password') as string;\r\n        const termsAccepted = formData.get('terms') === 'on';\r\n\r\n        // Client-side validation\r\n        const newErrors: any = {};\r\n        if (!fullName) newErrors.fullName = 'Full name is required';\r\n        if (!email) newErrors.email = 'Email is required';\r\n        if (!password) newErrors.password = 'Password is required';\r\n        if (password && password.length < 6) newErrors.password = 'Password must be at least 6 characters';\r\n        if (!termsAccepted) newErrors.terms = 'You must accept the terms';\r\n\r\n        if (Object.keys(newErrors).length > 0) {\r\n            setErrors(newErrors);\r\n            setIsLoading(false);\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const result = await signUp({ fullName, email, password });\r\n\r\n            if (result.success && result.user && result.token) {\r\n                // Save to context and localStorage\r\n                login(result.user, result.token);\r\n                \r\n                // Mark as just signed up\r\n                sessionStorage.setItem('justSignedUp', 'true');\r\n                \r\n                toast.success(\"Registration successful!\");\r\n                \r\n                setTimeout(() => {\r\n                    router.push('/onBoarding');\r\n                }, 1000);\r\n            } else {\r\n                toast.error(result.message || \"Registration failed\");\r\n                if (result.message?.includes('email')) {\r\n                    setErrors({ email: result.message });\r\n                }\r\n            }\r\n        } catch (error) {\r\n            toast.error(\"An unexpected error occurred\");\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"h-screen flex items-center justify-center p-4 sm:p-6 md:p-8\" data-theme=\"dark\">\r\n            <div className=\"border border-primary/25 flex flex-col lg:flex-row w-full max-w-5xl mx-auto bg-base-100 rounded-xl shadow-lg overflow-hidden\">\r\n                {/* SIGNUP FORM - LEFT SIDE */}\r\n                <div className=\"w-full lg:w-1/2 p-4 sm:p-8 flex flex-col\">\r\n                    {/* LOGO */}\r\n                    <div className=\"mb-4 flex items-center justify-start gap-2\">\r\n                        <ShipWheelIcon className=\"size-9 text-primary\" />\r\n                        <span className=\"text-3xl font-bold font-mono bg-clip-text text-transparent bg-gradient-to-r from-primary to-secondary tracking-wider\">\r\n                            STREAMIFY\r\n                        </span>\r\n                    </div>\r\n\r\n                    <div className=\"w-full\">\r\n                        <form onSubmit={handleSubmit}>\r\n                            <div className=\"space-y-4\">\r\n                                <div>\r\n                                    <h2 className=\"text-xl font-semibold\">Create an Account</h2>\r\n                                    <p className=\"text-sm opacity-70\">\r\n                                        Join Streamify and start your language learning adventure!\r\n                                    </p>\r\n                                </div>\r\n\r\n                                <div className=\"space-y-3\">\r\n                                    {/* FULLNAME */}\r\n                                    <fieldset className=\"form-control w-full fieldset\">\r\n                                        <label className=\"label\">\r\n                                            <legend className=\"fieldset-legend text-sm font-medium text-gray-600\">Name</legend>\r\n                                        </label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            name=\"fullName\"\r\n                                            placeholder=\"John Doe\"\r\n                                            className=\"input w-full\"\r\n                                            disabled={isLoading}\r\n                                        />\r\n                                        {errors.fullName && (\r\n                                            <label className=\"label\">\r\n                                                <span className=\"text-error text-sm\">{errors.fullName}</span>\r\n                                            </label>\r\n                                        )}\r\n                                    </fieldset>\r\n\r\n                                    {/* EMAIL */}\r\n                                    <fieldset className=\"form-control w-full fieldset\">\r\n                                        <label className=\"label\">\r\n                                            <legend className=\"fieldset-legend text-sm font-medium text-gray-600\">Email</legend>\r\n                                        </label>\r\n                                        <input\r\n                                            type=\"email\"\r\n                                            name=\"email\"\r\n                                            placeholder=\"john@gmail.com\"\r\n                                            className=\"input input-bordered w-full\"\r\n                                            disabled={isLoading}\r\n                                        />\r\n                                        {errors.email && (\r\n                                            <label className=\"label\">\r\n                                                <span className=\"text-error text-sm\">{errors.email}</span>\r\n                                            </label>\r\n                                        )}\r\n                                    </fieldset>\r\n\r\n                                    {/* PASSWORD */}\r\n                                    <fieldset className=\"form-control w-full fieldset\">\r\n                                        <label className=\"label\">\r\n                                            <legend className=\"fieldset-legend text-sm font-medium text-gray-600\">Password</legend>\r\n                                        </label>\r\n                                        <input\r\n                                            type=\"password\"\r\n                                            name=\"password\"\r\n                                            placeholder=\"********\"\r\n                                            className=\"input input-bordered w-full\"\r\n                                            disabled={isLoading}\r\n                                        />\r\n                                        {errors.password && (\r\n                                            <label className=\"label\">\r\n                                                <span className=\"text-error text-sm\">{errors.password}</span>\r\n                                            </label>\r\n                                        )}\r\n                                        <p className=\"text-xs opacity-70 mt-1\">\r\n                                            Password must be at least 6 characters long\r\n                                        </p>\r\n                                    </fieldset>\r\n\r\n                                    <div className=\"form-control\">\r\n                                        <label className=\"label cursor-pointer justify-start gap-2\">\r\n                                            <input \r\n                                                type=\"checkbox\" \r\n                                                name=\"terms\" \r\n                                                className=\"checkbox checkbox-sm\" \r\n                                                disabled={isLoading}\r\n                                            />\r\n                                            <span className=\"text-xs leading-tight\">\r\n                                                I agree to the{\" \"}\r\n                                                <span className=\"text-primary hover:underline\">terms of service</span> and{\" \"}\r\n                                                <span className=\"text-primary hover:underline\">privacy policy</span>\r\n                                            </span>\r\n                                        </label>\r\n                                        {errors.terms && (\r\n                                            <label className=\"label\">\r\n                                                <span className=\"text-error text-sm\">{errors.terms}</span>\r\n                                            </label>\r\n                                        )}\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <button \r\n                                    type=\"submit\"\r\n                                    className=\"btn btn-primary w-full\"\r\n                                    disabled={isLoading}\r\n                                >\r\n                                    {isLoading ? (\r\n                                        <>\r\n                                            <span className=\"loading loading-spinner loading-xs\"></span>\r\n                                            Creating Account...\r\n                                        </>\r\n                                    ) : (\r\n                                        \"Create Account\"\r\n                                    )}\r\n                                </button>\r\n\r\n                                <div className=\"text-center mt-4\">\r\n                                    <p className=\"text-sm\">\r\n                                        Already have an account?{\" \"}\r\n                                        <Link href=\"/sign-in\" className=\"text-primary hover:underline\">\r\n                                            Sign in\r\n                                        </Link>\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* RIGHT SIDE */}\r\n                <div className=\"hidden lg:flex w-full lg:w-1/2 bg-primary/10 items-center justify-center\">\r\n                    <div className=\"max-w-md p-8\">\r\n                        <div className=\"relative aspect-square max-w-sm mx-auto\">\r\n                            <Image\r\n                                src=\"/i.png\"\r\n                                alt=\"Language connection illustration\"\r\n                                fill\r\n                                priority\r\n                                className=\"object-cover\"\r\n                                sizes=\"(max-width: 768px) 100vw, 33vw\"\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"text-center space-y-3 mt-6\">\r\n                            <h2 className=\"text-xl font-semibold\">Connect with language partners worldwide</h2>\r\n                            <p className=\"opacity-70\">\r\n                                Practice conversations, make friends, and improve your language skills together\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}"],"names":[],"mappings":"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","debugId":null}}]
}