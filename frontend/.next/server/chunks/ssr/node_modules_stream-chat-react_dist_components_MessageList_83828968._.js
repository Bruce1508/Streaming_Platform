module.exports = {

"[project]/node_modules/stream-chat-react/dist/components/MessageList/utils.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "getGroupStyles": (()=>getGroupStyles),
    "getIsFirstUnreadMessage": (()=>getIsFirstUnreadMessage),
    "getLastReceived": (()=>getLastReceived),
    "getReadStates": (()=>getReadStates),
    "hasMoreMessagesProbably": (()=>hasMoreMessagesProbably),
    "hasNotMoreMessages": (()=>hasNotMoreMessages),
    "insertIntro": (()=>insertIntro),
    "isDateSeparatorMessage": (()=>isDateSeparatorMessage),
    "isIntroMessage": (()=>isIntroMessage),
    "isLocalMessage": (()=>isLocalMessage),
    "makeDateMessageId": (()=>makeDateMessageId),
    "makeIntroMessage": (()=>makeIntroMessage),
    "processMessages": (()=>processMessages)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$nanoid$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/nanoid/index.js [app-ssr] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$constants$2f$messageTypes$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/constants/messageTypes.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/Message/utils.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$i18n$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/i18n/utils.js [app-ssr] (ecmascript)");
;
;
;
;
const processMessages = (params)=>{
    const { messages, reviewProcessedMessage, setGiphyPreviewMessage, ...context } = params;
    const { enableDateSeparator, hideDeletedMessages, hideNewMessageSeparator, lastRead, userId } = context;
    let unread = false;
    let ephemeralMessagePresent = false;
    let lastDateSeparator;
    const newMessages = [];
    for(let i = 0; i < messages.length; i += 1){
        const message = messages[i];
        if (hideDeletedMessages && message.type === 'deleted') {
            continue;
        }
        if (setGiphyPreviewMessage && message.type === 'ephemeral' && message.command === 'giphy') {
            ephemeralMessagePresent = true;
            setGiphyPreviewMessage(message);
            continue;
        }
        const changes = [];
        const messageDate = message.created_at && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$i18n$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isDate"])(message.created_at) && message.created_at.toDateString() || '';
        const previousMessage = messages[i - 1];
        let prevMessageDate = messageDate;
        if (enableDateSeparator && previousMessage?.created_at && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$i18n$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isDate"])(previousMessage.created_at)) {
            prevMessageDate = previousMessage.created_at.toDateString();
        }
        if (!unread && !hideNewMessageSeparator) {
            unread = lastRead && message.created_at && new Date(lastRead) < message.created_at || false;
            // do not show date separator for current user's messages
            if (enableDateSeparator && unread && message.user?.id !== userId) {
                changes.push({
                    customType: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$constants$2f$messageTypes$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["CUSTOM_MESSAGE_TYPE"].date,
                    date: message.created_at,
                    id: makeDateMessageId(message.created_at),
                    unread
                });
            }
        }
        if (enableDateSeparator && (i === 0 || // always put date separator before the first message
        messageDate !== prevMessageDate || hideDeletedMessages && previousMessage?.type === 'deleted' && lastDateSeparator !== messageDate) && !isDateSeparatorMessage(changes[changes.length - 1]) // do not show two date separators in a row)
        ) {
            lastDateSeparator = messageDate;
            changes.push({
                customType: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$constants$2f$messageTypes$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["CUSTOM_MESSAGE_TYPE"].date,
                date: message.created_at,
                id: makeDateMessageId(message.created_at)
            }, message);
        } else {
            changes.push(message);
        }
        newMessages.push(...reviewProcessedMessage?.({
            changes,
            context,
            index: i,
            messages,
            processedMessages: newMessages
        }) || changes);
    }
    // clean up the giphy preview component state after a Cancel action
    if (setGiphyPreviewMessage && !ephemeralMessagePresent) {
        setGiphyPreviewMessage(undefined);
    }
    return newMessages;
};
const makeIntroMessage = ()=>({
        customType: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$constants$2f$messageTypes$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["CUSTOM_MESSAGE_TYPE"].intro,
        id: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$nanoid$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__["nanoid"])()
    });
const makeDateMessageId = (date)=>{
    let idSuffix;
    try {
        idSuffix = !date ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$nanoid$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__["nanoid"])() : date instanceof Date ? date.toISOString() : date;
    } catch (e) {
        idSuffix = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$nanoid$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__["nanoid"])();
    }
    return `${__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$constants$2f$messageTypes$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["CUSTOM_MESSAGE_TYPE"].date}-${idSuffix}`;
};
const getLastReceived = (messages)=>{
    for(let i = messages.length - 1; i > 0; i -= 1){
        if (messages[i].status === 'received') {
            return messages[i].id;
        }
    }
    return null;
};
const getReadStates = (messages, read = {}, returnAllReadData)=>{
    // create object with empty array for each message id
    const readData = {};
    Object.values(read).forEach((readState)=>{
        if (!readState.last_read) return;
        let userLastReadMsgId;
        // loop messages sent by current user and add read data for other users in channel
        messages.forEach((msg)=>{
            if (msg.created_at && msg.created_at < readState.last_read) {
                userLastReadMsgId = msg.id;
                // if true, save other user's read data for all messages they've read
                if (returnAllReadData) {
                    if (!readData[userLastReadMsgId]) {
                        readData[userLastReadMsgId] = [];
                    }
                    readData[userLastReadMsgId].push(readState.user);
                }
            }
        });
        // if true, only save read data for other user's last read message
        if (userLastReadMsgId && !returnAllReadData) {
            if (!readData[userLastReadMsgId]) {
                readData[userLastReadMsgId] = [];
            }
            readData[userLastReadMsgId].push(readState.user);
        }
    });
    return readData;
};
const insertIntro = (messages, headerPosition)=>{
    const newMessages = messages;
    const intro = makeIntroMessage();
    // if no headerPosition is set, HeaderComponent will go at the top
    if (!headerPosition) {
        newMessages.unshift(intro);
        return newMessages;
    }
    // if no messages, intro gets inserted
    if (!newMessages.length) {
        newMessages.unshift(intro);
        return newMessages;
    }
    // else loop over the messages
    for(let i = 0; i < messages.length; i += 1){
        const messageTime = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$i18n$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isDate"])(messages[i].created_at) ? messages[i].created_at.getTime() : null;
        const nextMessageTime = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$i18n$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isDate"])(messages[i + 1].created_at) ? messages[i + 1].created_at.getTime() : null;
        // header position is smaller than message time so comes after;
        if (messageTime && messageTime < headerPosition) {
            // if header position is also smaller than message time continue;
            if (nextMessageTime && nextMessageTime < headerPosition) {
                if (messages[i + 1] && isDateSeparatorMessage(messages[i + 1])) continue;
                if (!nextMessageTime) {
                    newMessages.push(intro);
                    return newMessages;
                }
            } else {
                newMessages.splice(i + 1, 0, intro);
                return newMessages;
            }
        }
    }
    return newMessages;
};
const getGroupStyles = (message, previousMessage, nextMessage, noGroupByUser, maxTimeBetweenGroupedMessages)=>{
    if (isDateSeparatorMessage(message) || isIntroMessage(message)) return '';
    if (noGroupByUser || message.attachments?.length !== 0) return 'single';
    const isTopMessage = !previousMessage || isIntroMessage(previousMessage) || isDateSeparatorMessage(previousMessage) || previousMessage.type === 'system' || previousMessage.type === 'error' || previousMessage.attachments?.length !== 0 || message.user?.id !== previousMessage.user?.id || previousMessage.deleted_at || message.reaction_groups && Object.keys(message.reaction_groups).length > 0 || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isMessageEdited"])(previousMessage) || maxTimeBetweenGroupedMessages !== undefined && previousMessage.created_at && message.created_at && new Date(message.created_at).getTime() - new Date(previousMessage.created_at).getTime() > maxTimeBetweenGroupedMessages;
    const isBottomMessage = !nextMessage || isIntroMessage(nextMessage) || isDateSeparatorMessage(nextMessage) || nextMessage.type === 'system' || nextMessage.type === 'error' || nextMessage.attachments?.length !== 0 || message.user?.id !== nextMessage.user?.id || nextMessage.deleted_at || nextMessage.reaction_groups && Object.keys(nextMessage.reaction_groups).length > 0 || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isMessageEdited"])(message) || maxTimeBetweenGroupedMessages !== undefined && nextMessage.created_at && message.created_at && new Date(nextMessage.created_at).getTime() - new Date(message.created_at).getTime() > maxTimeBetweenGroupedMessages;
    if (!isTopMessage && !isBottomMessage) {
        if (message.deleted_at || message.type === 'error') return 'single';
        return 'middle';
    }
    if (isBottomMessage) {
        if (isTopMessage || message.deleted_at || message.type === 'error') return 'single';
        return 'bottom';
    }
    if (isTopMessage) return 'top';
    return '';
};
const hasMoreMessagesProbably = (returnedCountMessages, limit)=>returnedCountMessages >= limit;
const hasNotMoreMessages = (returnedCountMessages, limit)=>returnedCountMessages < limit;
function isIntroMessage(message) {
    return message.customType === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$constants$2f$messageTypes$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["CUSTOM_MESSAGE_TYPE"].intro;
}
function isDateSeparatorMessage(message) {
    return message !== null && typeof message === 'object' && message.customType === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$constants$2f$messageTypes$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["CUSTOM_MESSAGE_TYPE"].date && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$i18n$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isDate"])(message.date);
}
function isLocalMessage(message) {
    return !isDateSeparatorMessage(message) && !isIntroMessage(message);
}
const getIsFirstUnreadMessage = ({ firstUnreadMessageId, isFirstMessage, lastReadDate, lastReadMessageId, message, previousMessage, unreadMessageCount = 0 })=>{
    // prevent showing unread indicator in threads
    if (message.parent_id) return false;
    const createdAtTimestamp = message.created_at && new Date(message.created_at).getTime();
    const lastReadTimestamp = lastReadDate?.getTime();
    const messageIsUnread = !!createdAtTimestamp && !!lastReadTimestamp && createdAtTimestamp > lastReadTimestamp;
    const previousMessageIsLastRead = !!lastReadMessageId && lastReadMessageId === previousMessage?.id;
    return firstUnreadMessageId === message.id || !!unreadMessageCount && messageIsUnread && (isFirstMessage || previousMessageIsLastRead);
};
}}),
"[project]/node_modules/stream-chat-react/dist/components/MessageList/hooks/MessageList/useEnrichedMessages.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "useEnrichedMessages": (()=>useEnrichedMessages)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$MessageList$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/MessageList/utils.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$ChatContext$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/context/ChatContext.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$ComponentContext$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/context/ComponentContext.js [app-ssr] (ecmascript)");
;
;
;
;
const useEnrichedMessages = (args)=>{
    const { channel, disableDateSeparator, groupStyles, headerPosition, hideDeletedMessages, hideNewMessageSeparator, maxTimeBetweenGroupedMessages, messages, noGroupByUser, reviewProcessedMessage } = args;
    const { client } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$ChatContext$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useChatContext"])('useEnrichedMessages');
    const { HeaderComponent } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$ComponentContext$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useComponentContext"])('useEnrichedMessages');
    const lastRead = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useMemo"])(()=>channel.lastRead?.(), [
        channel
    ]);
    const enableDateSeparator = !disableDateSeparator;
    let messagesWithDates = !enableDateSeparator && !hideDeletedMessages && hideNewMessageSeparator ? messages : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$MessageList$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["processMessages"])({
        enableDateSeparator,
        hideDeletedMessages,
        hideNewMessageSeparator,
        lastRead,
        messages,
        reviewProcessedMessage,
        userId: client.userID || ''
    });
    if (HeaderComponent) {
        messagesWithDates = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$MessageList$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["insertIntro"])(messagesWithDates, headerPosition);
    }
    const groupStylesFn = groupStyles || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$MessageList$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getGroupStyles"];
    const messageGroupStyles = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useMemo"])(()=>messagesWithDates.reduce((acc, message, i)=>{
            const style = groupStylesFn(message, messagesWithDates[i - 1], messagesWithDates[i + 1], noGroupByUser, maxTimeBetweenGroupedMessages);
            if (style) acc[message.id] = style;
            return acc;
        }, {}), // eslint-disable-next-line react-hooks/exhaustive-deps
    [
        maxTimeBetweenGroupedMessages,
        messagesWithDates,
        noGroupByUser
    ]);
    return {
        messageGroupStyles,
        messages: messagesWithDates
    };
};
}}),
"[project]/node_modules/stream-chat-react/dist/components/MessageList/hooks/useLastReadData.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "useLastReadData": (()=>useLastReadData)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$MessageList$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/MessageList/utils.js [app-ssr] (ecmascript)");
;
;
;
const useLastReadData = (props)=>{
    const { messages, read, returnAllReadData, userID } = props;
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useMemo"])(()=>{
        const ownLocalMessages = messages.filter((msg)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$MessageList$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isLocalMessage"])(msg) && msg.user?.id === userID);
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$MessageList$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getReadStates"])(ownLocalMessages, read, returnAllReadData);
    }, [
        messages,
        read,
        returnAllReadData,
        userID
    ]);
};
}}),
"[project]/node_modules/stream-chat-react/dist/components/MessageList/hooks/MessageList/useMessageListElements.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "useMessageListElements": (()=>useMessageListElements)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$MessageList$2f$hooks$2f$useLastReadData$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/MessageList/hooks/useLastReadData.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$MessageList$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/MessageList/utils.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$ChatContext$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/context/ChatContext.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$ComponentContext$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/context/ComponentContext.js [app-ssr] (ecmascript)");
;
;
;
;
;
const useMessageListElements = (props)=>{
    const { channelUnreadUiState, enrichedMessages, internalMessageProps, messageGroupStyles, read, renderMessages, returnAllReadData, threadList } = props;
    const { client, customClasses } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$ChatContext$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useChatContext"])('useMessageListElements');
    const components = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$ComponentContext$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useComponentContext"])('useMessageListElements');
    // get the readData, but only for messages submitted by the user themselves
    const readData = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$MessageList$2f$hooks$2f$useLastReadData$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useLastReadData"])({
        messages: enrichedMessages,
        read,
        returnAllReadData,
        userID: client.userID
    });
    const lastReceivedMessageId = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useMemo"])(()=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$MessageList$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getLastReceived"])(enrichedMessages), [
        enrichedMessages
    ]);
    const elements = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useMemo"])(()=>renderMessages({
            channelUnreadUiState,
            components,
            customClasses,
            lastReceivedMessageId,
            messageGroupStyles,
            messages: enrichedMessages,
            readData,
            sharedMessageProps: {
                ...internalMessageProps,
                threadList
            }
        }), // eslint-disable-next-line react-hooks/exhaustive-deps
    [
        enrichedMessages,
        internalMessageProps,
        lastReceivedMessageId,
        messageGroupStyles,
        channelUnreadUiState,
        readData,
        renderMessages,
        threadList
    ]);
    return elements;
};
}}),
"[project]/node_modules/stream-chat-react/dist/components/MessageList/hooks/MessageList/useMessageListScrollManager.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "useMessageListScrollManager": (()=>useMessageListScrollManager)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$ChatContext$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/context/ChatContext.js [app-ssr] (ecmascript)");
;
;
function useMessageListScrollManager(params) {
    const { loadMoreScrollThreshold, onScrollBy, scrollContainerMeasures, scrolledUpThreshold, scrollToBottom, showNewMessages } = params;
    const { client } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$ChatContext$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useChatContext"])('useMessageListScrollManager');
    const measures = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useRef"])({
        offsetHeight: 0,
        scrollHeight: 0
    });
    const messages = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useRef"])(undefined);
    const scrollTop = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useRef"])(0);
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useLayoutEffect"])(()=>{
        const prevMeasures = measures.current;
        const prevMessages = messages.current;
        const newMessages = params.messages;
        const lastNewMessage = newMessages[newMessages.length - 1] || {};
        const lastPrevMessage = prevMessages?.[prevMessages.length - 1];
        const newMeasures = scrollContainerMeasures();
        const wasAtBottom = prevMeasures.scrollHeight - prevMeasures.offsetHeight - scrollTop.current < scrolledUpThreshold;
        if (typeof prevMessages !== 'undefined') {
            if (prevMessages.length < newMessages.length) {
                // messages added to the top
                if (lastPrevMessage?.id === lastNewMessage.id) {
                    if (scrollTop.current < loadMoreScrollThreshold) {
                        const listHeightDelta = newMeasures.scrollHeight - prevMeasures.scrollHeight;
                        onScrollBy(listHeightDelta);
                    }
                } else {
                    const lastMessageIsFromCurrentUser = lastNewMessage.user?.id === client.userID;
                    if (lastMessageIsFromCurrentUser || wasAtBottom) {
                        scrollToBottom();
                    } else {
                        showNewMessages();
                    }
                }
            } else {
                const hasNewReactions = lastPrevMessage?.latest_reactions?.length !== lastNewMessage.latest_reactions?.length;
                const hasNewReplies = lastPrevMessage?.reply_count !== lastNewMessage.reply_count;
                if ((hasNewReactions || hasNewReplies) && wasAtBottom) {
                    scrollToBottom();
                }
            }
        }
        messages.current = newMessages;
        measures.current = newMeasures;
    // eslint-disable-next-line react-hooks/exhaustive-deps
    }, [
        measures,
        messages,
        params.messages
    ]);
    return (scrollTopValue)=>{
        scrollTop.current = scrollTopValue;
    };
}
}}),
"[project]/node_modules/stream-chat-react/dist/components/MessageList/hooks/MessageList/useScrollLocationLogic.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "useScrollLocationLogic": (()=>useScrollLocationLogic)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$MessageList$2f$hooks$2f$MessageList$2f$useMessageListScrollManager$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/MessageList/hooks/MessageList/useMessageListScrollManager.js [app-ssr] (ecmascript)");
;
;
const useScrollLocationLogic = (params)=>{
    const { hasMoreNewer, listElement, loadMoreScrollThreshold, messages = [], scrolledUpThreshold = 200, suppressAutoscroll } = params;
    const [hasNewMessages, setHasNewMessages] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useState"])(false);
    const [wrapperRect, setWrapperRect] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useState"])();
    const [isMessageListScrolledToBottom, setIsMessageListScrolledToBottom] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useState"])(true);
    const closeToBottom = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useRef"])(false);
    const closeToTop = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useRef"])(false);
    const scrollToBottom = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useCallback"])(()=>{
        if (!listElement?.scrollTo || hasMoreNewer || suppressAutoscroll) {
            return;
        }
        listElement.scrollTo({
            top: listElement.scrollHeight
        });
        setHasNewMessages(false);
    }, [
        listElement,
        hasMoreNewer,
        suppressAutoscroll
    ]);
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useLayoutEffect"])(()=>{
        if (listElement) {
            setWrapperRect(listElement.getBoundingClientRect());
            scrollToBottom();
        }
    // eslint-disable-next-line react-hooks/exhaustive-deps
    }, [
        listElement,
        hasMoreNewer
    ]);
    const updateScrollTop = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$MessageList$2f$hooks$2f$MessageList$2f$useMessageListScrollManager$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useMessageListScrollManager"])({
        loadMoreScrollThreshold,
        messages,
        onScrollBy: (scrollBy)=>{
            listElement?.scrollBy({
                top: scrollBy
            });
        },
        scrollContainerMeasures: ()=>({
                offsetHeight: listElement?.offsetHeight || 0,
                scrollHeight: listElement?.scrollHeight || 0
            }),
        scrolledUpThreshold,
        scrollToBottom,
        showNewMessages: ()=>setHasNewMessages(true)
    });
    const onScroll = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useCallback"])((event)=>{
        const element = event.target;
        const scrollTop = element.scrollTop;
        updateScrollTop(scrollTop);
        const offsetHeight = element.offsetHeight;
        const scrollHeight = element.scrollHeight;
        const prevCloseToBottom = closeToBottom.current;
        closeToBottom.current = scrollHeight - (scrollTop + offsetHeight) < scrolledUpThreshold;
        closeToTop.current = scrollTop < scrolledUpThreshold;
        if (closeToBottom.current) {
            setHasNewMessages(false);
        }
        if (prevCloseToBottom && !closeToBottom.current) {
            setIsMessageListScrolledToBottom(false);
        } else if (!prevCloseToBottom && closeToBottom.current) {
            setIsMessageListScrolledToBottom(true);
        }
    }, [
        updateScrollTop,
        closeToTop,
        closeToBottom,
        scrolledUpThreshold
    ]);
    return {
        hasNewMessages,
        isMessageListScrolledToBottom,
        onScroll,
        scrollToBottom,
        wrapperRect
    };
};
}}),
"[project]/node_modules/stream-chat-react/dist/components/MessageList/MessageListMainPanel.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "MESSAGE_LIST_MAIN_PANEL_CLASS": (()=>MESSAGE_LIST_MAIN_PANEL_CLASS),
    "MessageListMainPanel": (()=>MessageListMainPanel)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js [app-ssr] (ecmascript)");
;
const MESSAGE_LIST_MAIN_PANEL_CLASS = 'str-chat__main-panel-inner str-chat__message-list-main-panel';
const MessageListMainPanel = ({ children })=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].createElement("div", {
        className: MESSAGE_LIST_MAIN_PANEL_CLASS
    }, children);
}}),
"[project]/node_modules/stream-chat-react/dist/components/MessageList/UnreadMessagesSeparator.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "UNREAD_MESSAGE_SEPARATOR_CLASS": (()=>UNREAD_MESSAGE_SEPARATOR_CLASS),
    "UnreadMessagesSeparator": (()=>UnreadMessagesSeparator)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$TranslationContext$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/context/TranslationContext.js [app-ssr] (ecmascript)");
;
;
const UNREAD_MESSAGE_SEPARATOR_CLASS = 'str-chat__unread-messages-separator';
const UnreadMessagesSeparator = ({ showCount, unreadCount })=>{
    const { t } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$TranslationContext$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useTranslationContext"])('UnreadMessagesSeparator');
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].createElement("div", {
        className: UNREAD_MESSAGE_SEPARATOR_CLASS,
        "data-testid": 'unread-messages-separator'
    }, unreadCount && showCount ? t('unreadMessagesSeparatorText', {
        count: unreadCount
    }) : t('Unread messages'));
};
}}),
"[project]/node_modules/stream-chat-react/dist/components/MessageList/hooks/MessageList/useUnreadMessagesNotification.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "useUnreadMessagesNotification": (()=>useUnreadMessagesNotification)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$ChannelStateContext$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/context/ChannelStateContext.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$MessageList$2f$MessageListMainPanel$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/MessageList/MessageListMainPanel.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$MessageList$2f$UnreadMessagesSeparator$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/MessageList/UnreadMessagesSeparator.js [app-ssr] (ecmascript)");
;
;
;
;
const targetScrolledAboveVisibleContainerArea = (element)=>{
    const { bottom: targetBottom } = element.getBoundingClientRect();
    return targetBottom < 0;
};
const targetScrolledBelowVisibleContainerArea = (element, container)=>{
    const { top: targetTop } = element.getBoundingClientRect();
    const { top: containerBottom } = container.getBoundingClientRect();
    return targetTop > containerBottom;
};
const useUnreadMessagesNotification = ({ isMessageListScrolledToBottom, showAlways, unreadCount })=>{
    const { messages } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$ChannelStateContext$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useChannelStateContext"])('UnreadMessagesNotification');
    const [show, setShow] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useState"])(false);
    const isScrolledAboveTargetTop = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useRef"])(false);
    const intersectionObserverIsSupported = typeof IntersectionObserver !== 'undefined';
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useEffect"])(()=>{
        if (!(unreadCount && intersectionObserverIsSupported)) {
            setShow(false);
            return;
        }
        const [msgListPanel] = document.getElementsByClassName(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$MessageList$2f$MessageListMainPanel$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["MESSAGE_LIST_MAIN_PANEL_CLASS"]);
        if (!msgListPanel) return;
        const [observedTarget] = document.getElementsByClassName(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$MessageList$2f$UnreadMessagesSeparator$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["UNREAD_MESSAGE_SEPARATOR_CLASS"]);
        if (!observedTarget) {
            setShow(true);
            return;
        }
        const scrolledBelowSeparator = targetScrolledAboveVisibleContainerArea(observedTarget);
        const scrolledAboveSeparator = targetScrolledBelowVisibleContainerArea(observedTarget, msgListPanel);
        setShow(showAlways ? scrolledBelowSeparator || scrolledAboveSeparator : scrolledBelowSeparator);
        const observer = new IntersectionObserver((elements)=>{
            if (!elements.length) return;
            const { boundingClientRect, isIntersecting } = elements[0];
            if (isIntersecting) {
                setShow(false);
                return;
            }
            const separatorIsAboveContainerTop = boundingClientRect.bottom < 0;
            setShow(showAlways || separatorIsAboveContainerTop);
            isScrolledAboveTargetTop.current = separatorIsAboveContainerTop;
        }, {
            root: msgListPanel
        });
        observer.observe(observedTarget);
        return ()=>{
            observer.disconnect();
        };
    }, [
        intersectionObserverIsSupported,
        isMessageListScrolledToBottom,
        messages,
        showAlways,
        unreadCount
    ]);
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useEffect"])(()=>{
        /**
         * Handle situation when scrollToBottom is called from another component when the msg list is scrolled above the observed target (unread separator).
         * The intersection observer is not triggered when Element.scrollTo() is called. So we end up in a situation when we are scrolled to the bottom
         * and at the same time scrolled above the observed target.
         */ if (unreadCount && isMessageListScrolledToBottom && isScrolledAboveTargetTop.current) {
            setShow(true);
            isScrolledAboveTargetTop.current = false;
        }
    }, [
        isMessageListScrolledToBottom,
        unreadCount
    ]);
    return {
        show: show && intersectionObserverIsSupported
    };
};
}}),
"[project]/node_modules/stream-chat-react/dist/components/MessageList/hooks/useMarkRead.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "useMarkRead": (()=>useMarkRead)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$ChannelActionContext$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/context/ChannelActionContext.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$ChannelStateContext$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/context/ChannelStateContext.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$ChatContext$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/context/ChatContext.js [app-ssr] (ecmascript)");
;
;
const hasReadLastMessage = (channel, userId)=>{
    const latestMessageIdInChannel = channel.state.latestMessages.slice(-1)[0]?.id;
    const lastReadMessageIdServer = channel.state.read[userId]?.last_read_message_id;
    return latestMessageIdInChannel === lastReadMessageIdServer;
};
const useMarkRead = ({ isMessageListScrolledToBottom, messageListIsThread, wasMarkedUnread })=>{
    const { client } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$ChatContext$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useChatContext"])('useMarkRead');
    const { markRead, setChannelUnreadUiState } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$ChannelActionContext$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useChannelActionContext"])('useMarkRead');
    const { channel } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$ChannelStateContext$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useChannelStateContext"])('useMarkRead');
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useEffect"])(()=>{
        const shouldMarkRead = ()=>!document.hidden && !wasMarkedUnread && !messageListIsThread && isMessageListScrolledToBottom && client.user?.id && !hasReadLastMessage(channel, client.user.id);
        const onVisibilityChange = ()=>{
            if (shouldMarkRead()) markRead();
        };
        const handleMessageNew = (event)=>{
            const mainChannelUpdated = !event.message?.parent_id || event.message?.show_in_channel;
            if (!isMessageListScrolledToBottom || wasMarkedUnread || document.hidden) {
                setChannelUnreadUiState((prev)=>{
                    const previousUnreadCount = prev?.unread_messages ?? 0;
                    const previousLastMessage = getPreviousLastMessage(channel.state.messages, event.message);
                    return {
                        ...prev || {},
                        last_read: prev?.last_read ?? (previousUnreadCount === 0 && previousLastMessage?.created_at ? new Date(previousLastMessage.created_at) : new Date(0)),
                        unread_messages: previousUnreadCount + 1
                    };
                });
            } else if (mainChannelUpdated && shouldMarkRead()) {
                markRead();
            }
        };
        channel.on('message.new', handleMessageNew);
        document.addEventListener('visibilitychange', onVisibilityChange);
        if (shouldMarkRead()) {
            markRead();
        }
        return ()=>{
            channel.off('message.new', handleMessageNew);
            document.removeEventListener('visibilitychange', onVisibilityChange);
        };
    }, [
        channel,
        client,
        isMessageListScrolledToBottom,
        markRead,
        messageListIsThread,
        setChannelUnreadUiState,
        wasMarkedUnread
    ]);
};
function getPreviousLastMessage(messages, newMessage) {
    if (!newMessage) return;
    let previousLastMessage;
    for(let i = messages.length - 1; i >= 0; i--){
        const msg = messages[i];
        if (!msg?.id) break;
        if (msg.id !== newMessage.id) {
            previousLastMessage = msg;
            break;
        }
    }
    return previousLastMessage;
}
}}),
"[project]/node_modules/stream-chat-react/dist/components/MessageList/MessageNotification.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "MessageNotification": (()=>MessageNotification)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js [app-ssr] (ecmascript)");
;
const UnMemoizedMessageNotification = (props)=>{
    const { children, onClick, showNotification = true } = props;
    if (!showNotification) return null;
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].createElement("button", {
        "aria-live": 'polite',
        className: `str-chat__message-notification`,
        "data-testid": 'message-notification',
        onClick: onClick
    }, children);
};
const MessageNotification = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].memo(UnMemoizedMessageNotification);
}}),
"[project]/node_modules/stream-chat-react/dist/components/MessageList/CustomNotification.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "CustomNotification": (()=>CustomNotification)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$clsx$2f$dist$2f$clsx$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/clsx/dist/clsx.mjs [app-ssr] (ecmascript)");
;
;
const UnMemoizedCustomNotification = (props)=>{
    const { active, children, className, type } = props;
    if (!active) return null;
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].createElement("div", {
        "aria-live": 'polite',
        className: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$clsx$2f$dist$2f$clsx$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"])(`str-chat__custom-notification notification-${type}`, `str-chat__notification`, `str-chat-react__notification`, className),
        "data-testid": 'custom-notification'
    }, children);
};
const CustomNotification = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].memo(UnMemoizedCustomNotification);
}}),
"[project]/node_modules/stream-chat-react/dist/components/MessageList/ConnectionStatus.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "ConnectionStatus": (()=>ConnectionStatus)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$MessageList$2f$CustomNotification$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/MessageList/CustomNotification.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$ChatContext$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/context/ChatContext.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$TranslationContext$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/context/TranslationContext.js [app-ssr] (ecmascript)");
;
;
;
const UnMemoizedConnectionStatus = ()=>{
    const { client } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$ChatContext$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useChatContext"])('ConnectionStatus');
    const { t } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$TranslationContext$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useTranslationContext"])('ConnectionStatus');
    const [online, setOnline] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useState"])(true);
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useEffect"])(()=>{
        const connectionChanged = ({ online: onlineStatus = false })=>{
            if (online !== onlineStatus) {
                setOnline(onlineStatus);
            }
        };
        client.on('connection.changed', connectionChanged);
        return ()=>client.off('connection.changed', connectionChanged);
    }, [
        client,
        online
    ]);
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].createElement(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$MessageList$2f$CustomNotification$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["CustomNotification"], {
        active: !online,
        className: 'str-chat__connection-status-notification',
        type: 'error'
    }, t('Connection failure, reconnecting now...'));
};
const ConnectionStatus = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].memo(UnMemoizedConnectionStatus);
}}),
"[project]/node_modules/stream-chat-react/dist/components/MessageList/MessageListNotifications.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "MessageListNotifications": (()=>MessageListNotifications)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$MessageList$2f$ConnectionStatus$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/MessageList/ConnectionStatus.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$MessageList$2f$CustomNotification$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/MessageList/CustomNotification.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$TranslationContext$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/context/TranslationContext.js [app-ssr] (ecmascript)");
;
;
;
;
const MessageListNotifications = (props)=>{
    const { hasNewMessages, isMessageListScrolledToBottom, isNotAtLatestMessageSet, MessageNotification, notifications, scrollToBottom, threadList, unreadCount } = props;
    const { t } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$TranslationContext$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useTranslationContext"])('MessageListNotifications');
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].createElement("div", {
        className: 'str-chat__list-notifications'
    }, notifications.map((notification)=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].createElement(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$MessageList$2f$CustomNotification$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["CustomNotification"], {
            active: true,
            key: notification.id,
            type: notification.type
        }, notification.text)), __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].createElement(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$MessageList$2f$ConnectionStatus$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ConnectionStatus"], null), __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].createElement(MessageNotification, {
        isMessageListScrolledToBottom: isMessageListScrolledToBottom,
        onClick: scrollToBottom,
        showNotification: hasNewMessages || isNotAtLatestMessageSet,
        threadList: threadList,
        unreadCount: unreadCount
    }, isNotAtLatestMessageSet ? t('Latest Messages') : t('New Messages!')));
};
}}),
"[project]/node_modules/stream-chat-react/dist/components/MessageList/icons.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "ArrowDown": (()=>ArrowDown),
    "ArrowUp": (()=>ArrowUp),
    "CloseIcon": (()=>CloseIcon)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js [app-ssr] (ecmascript)");
;
const ArrowUp = ({ className, color })=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].createElement("svg", {
        className: className,
        "data-testid": 'arrow-up',
        fill: 'none',
        height: '24',
        viewBox: '0 0 24 24',
        width: '24',
        xmlns: 'http://www.w3.org/2000/svg'
    }, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].createElement("path", {
        d: 'M16.59 15.7051L12 11.1251L7.41 15.7051L6 14.2951L12 8.29508L18 14.2951L16.59 15.7051Z',
        fill: color || 'var(--primary-color)'
    }));
const ArrowDown = ({ className, color })=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].createElement("svg", {
        className: className,
        "data-testid": 'arrow-down',
        fill: 'none',
        height: '24',
        viewBox: '0 0 24 24',
        width: '24',
        xmlns: 'http://www.w3.org/2000/svg'
    }, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].createElement("path", {
        d: 'M7.41 8.29504L12 12.875L16.59 8.29504L18 9.70504L12 15.705L6 9.70504L7.41 8.29504Z',
        fill: color || 'var(--primary-color)'
    }));
const CloseIcon = ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].createElement("svg", {
        fill: 'currentColor',
        viewBox: '0 0 14 13',
        xmlns: 'http://www.w3.org/2000/svg'
    }, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].createElement("path", {
        d: 'M1.32227 12.3408C0.944336 11.9629 0.953125 11.3213 1.32227 10.9521L5.60254 6.66309L1.32227 2.38281C0.953125 2.01367 0.944336 1.37207 1.32227 0.994141C1.7002 0.616211 2.3418 0.625 2.71094 0.985352L7 5.27441L11.2803 0.994141C11.6494 0.625 12.291 0.616211 12.6689 0.994141C13.0469 1.37207 13.0381 2.01367 12.6689 2.38281L8.38867 6.66309L12.6689 10.9521C13.0381 11.3213 13.0469 11.9629 12.6689 12.3408C12.291 12.7188 11.6494 12.71 11.2803 12.3408L7 8.06055L2.71094 12.3408C2.3418 12.71 1.7002 12.7188 1.32227 12.3408Z'
    }));
}}),
"[project]/node_modules/stream-chat-react/dist/components/MessageList/UnreadMessagesNotification.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "UnreadMessagesNotification": (()=>UnreadMessagesNotification)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$MessageList$2f$icons$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/MessageList/icons.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$ChannelActionContext$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/context/ChannelActionContext.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$TranslationContext$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/context/TranslationContext.js [app-ssr] (ecmascript)");
;
;
;
const UnreadMessagesNotification = ({ queryMessageLimit, showCount, unreadCount })=>{
    const { jumpToFirstUnreadMessage, markRead } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$ChannelActionContext$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useChannelActionContext"])('UnreadMessagesNotification');
    const { t } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$TranslationContext$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useTranslationContext"])('UnreadMessagesNotification');
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].createElement("div", {
        className: 'str-chat__unread-messages-notification',
        "data-testid": 'unread-messages-notification'
    }, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].createElement("button", {
        onClick: ()=>jumpToFirstUnreadMessage(queryMessageLimit)
    }, unreadCount && showCount ? t('{{count}} unread', {
        count: unreadCount ?? 0
    }) : t('Unread messages')), __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].createElement("button", {
        onClick: ()=>markRead()
    }, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].createElement(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$MessageList$2f$icons$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["CloseIcon"], null)));
};
}}),
"[project]/node_modules/stream-chat-react/dist/components/MessageList/renderMessages.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "defaultRenderMessages": (()=>defaultRenderMessages)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$MessageList$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/MessageList/utils.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$Message$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/Message/Message.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$DateSeparator$2f$DateSeparator$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/DateSeparator/DateSeparator.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$EventComponent$2f$EventComponent$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/EventComponent/EventComponent.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$MessageList$2f$UnreadMessagesSeparator$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/MessageList/UnreadMessagesSeparator.js [app-ssr] (ecmascript)");
;
;
;
;
;
;
function defaultRenderMessages({ channelUnreadUiState, components, customClasses, lastReceivedMessageId: lastReceivedId, messageGroupStyles, messages, readData, sharedMessageProps: messageProps }) {
    const { DateSeparator = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$DateSeparator$2f$DateSeparator$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["DateSeparator"], HeaderComponent, MessageSystem = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$EventComponent$2f$EventComponent$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["EventComponent"], UnreadMessagesSeparator = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$MessageList$2f$UnreadMessagesSeparator$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["UnreadMessagesSeparator"] } = components;
    const renderedMessages = [];
    let firstMessage;
    let previousMessage = undefined;
    for(let index = 0; index < messages.length; index++){
        const message = messages[index];
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$MessageList$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isDateSeparatorMessage"])(message)) {
            renderedMessages.push(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].createElement("li", {
                key: `${message.date.toISOString()}-i`
            }, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].createElement(DateSeparator, {
                date: message.date,
                formatDate: messageProps.formatDate,
                unread: message.unread
            })));
        } else if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$MessageList$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isIntroMessage"])(message)) {
            if (HeaderComponent) {
                renderedMessages.push(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].createElement("li", {
                    key: 'intro'
                }, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].createElement(HeaderComponent, null)));
            }
        } else if (message.type === 'system') {
            renderedMessages.push(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].createElement("li", {
                "data-message-id": message.id,
                key: message.id || message.created_at.toISOString()
            }, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].createElement(MessageSystem, {
                message: message
            })));
        } else {
            if (!firstMessage) {
                firstMessage = message;
            }
            const groupStyles = messageGroupStyles[message.id] || '';
            const messageClass = customClasses?.message || `str-chat__li str-chat__li--${groupStyles}`;
            const isFirstUnreadMessage = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$MessageList$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getIsFirstUnreadMessage"])({
                firstUnreadMessageId: channelUnreadUiState?.first_unread_message_id,
                isFirstMessage: !!firstMessage?.id && firstMessage.id === message.id,
                lastReadDate: channelUnreadUiState?.last_read,
                lastReadMessageId: channelUnreadUiState?.last_read_message_id,
                message,
                previousMessage,
                unreadMessageCount: channelUnreadUiState?.unread_messages
            });
            renderedMessages.push(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].createElement(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Fragment"], {
                key: message.id || message.created_at.toISOString()
            }, isFirstUnreadMessage && UnreadMessagesSeparator && __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].createElement("li", {
                className: 'str-chat__li str-chat__unread-messages-separator-wrapper'
            }, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].createElement(UnreadMessagesSeparator, {
                unreadCount: channelUnreadUiState?.unread_messages
            })), __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].createElement("li", {
                className: messageClass,
                "data-message-id": message.id,
                "data-testid": messageClass
            }, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].createElement(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$Message$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Message"], {
                groupStyles: [
                    groupStyles
                ],
                lastReceivedId: lastReceivedId,
                message: message,
                readBy: readData[message.id] || [],
                ...messageProps
            }))));
            previousMessage = message;
        }
    }
    return renderedMessages;
}
}}),
"[project]/node_modules/stream-chat-react/dist/components/MessageList/MessageList.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "MessageList": (()=>MessageList)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$clsx$2f$dist$2f$clsx$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/clsx/dist/clsx.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$MessageList$2f$hooks$2f$MessageList$2f$useEnrichedMessages$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/MessageList/hooks/MessageList/useEnrichedMessages.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$MessageList$2f$hooks$2f$MessageList$2f$useMessageListElements$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/MessageList/hooks/MessageList/useMessageListElements.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$MessageList$2f$hooks$2f$MessageList$2f$useScrollLocationLogic$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/MessageList/hooks/MessageList/useScrollLocationLogic.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$MessageList$2f$hooks$2f$MessageList$2f$useUnreadMessagesNotification$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/MessageList/hooks/MessageList/useUnreadMessagesNotification.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$MessageList$2f$hooks$2f$useMarkRead$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/MessageList/hooks/useMarkRead.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$MessageList$2f$MessageNotification$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/MessageList/MessageNotification.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$MessageList$2f$MessageListNotifications$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/MessageList/MessageListNotifications.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$MessageList$2f$UnreadMessagesNotification$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/MessageList/UnreadMessagesNotification.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$ChannelActionContext$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/context/ChannelActionContext.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$ChannelStateContext$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/context/ChannelStateContext.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$DialogManagerContext$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/context/DialogManagerContext.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$ChatContext$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/context/ChatContext.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$ComponentContext$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/context/ComponentContext.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$MessageListContext$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/context/MessageListContext.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$EmptyStateIndicator$2f$EmptyStateIndicator$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/EmptyStateIndicator/EmptyStateIndicator.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$InfiniteScrollPaginator$2f$InfiniteScroll$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/InfiniteScrollPaginator/InfiniteScroll.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Loading$2f$LoadingIndicator$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/Loading/LoadingIndicator.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/Message/utils.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$TypingIndicator$2f$TypingIndicator$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/TypingIndicator/TypingIndicator.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$MessageList$2f$MessageListMainPanel$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/MessageList/MessageListMainPanel.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$MessageList$2f$renderMessages$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/MessageList/renderMessages.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$UtilityComponents$2f$useStableId$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/UtilityComponents/useStableId.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$constants$2f$limits$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/constants/limits.js [app-ssr] (ecmascript)");
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
const MessageListWithContext = (props)=>{
    const { channel, channelUnreadUiState, disableDateSeparator = false, groupStyles, hasMoreNewer = false, headerPosition, hideDeletedMessages = false, hideNewMessageSeparator = false, highlightedMessageId, internalInfiniteScrollProps: { threshold: loadMoreScrollThreshold = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$constants$2f$limits$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["DEFAULT_LOAD_PAGE_SCROLL_THRESHOLD"], ...restInternalInfiniteScrollProps } = {}, jumpToLatestMessage = ()=>Promise.resolve(), loadMore: loadMoreCallback, loadMoreNewer: loadMoreNewerCallback, maxTimeBetweenGroupedMessages, messageActions = Object.keys(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["MESSAGE_ACTIONS"]), messageLimit = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$constants$2f$limits$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["DEFAULT_NEXT_CHANNEL_PAGE_SIZE"], messages = [], noGroupByUser = false, notifications, pinPermissions = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["defaultPinPermissions"], reactionDetailsSort, read, renderMessages = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$MessageList$2f$renderMessages$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["defaultRenderMessages"], returnAllReadData = false, reviewProcessedMessage, showUnreadNotificationAlways, sortReactionDetails, sortReactions, suppressAutoscroll, threadList = false, unsafeHTML = false } = props;
    const [listElement, setListElement] = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].useState(null);
    const [ulElement, setUlElement] = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].useState(null);
    const { customClasses } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$ChatContext$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useChatContext"])('MessageList');
    const { EmptyStateIndicator = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$EmptyStateIndicator$2f$EmptyStateIndicator$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["EmptyStateIndicator"], LoadingIndicator = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Loading$2f$LoadingIndicator$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["LoadingIndicator"], MessageListMainPanel = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$MessageList$2f$MessageListMainPanel$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["MessageListMainPanel"], MessageListNotifications = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$MessageList$2f$MessageListNotifications$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["MessageListNotifications"], MessageNotification = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$MessageList$2f$MessageNotification$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["MessageNotification"], TypingIndicator = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$TypingIndicator$2f$TypingIndicator$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypingIndicator"], UnreadMessagesNotification = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$MessageList$2f$UnreadMessagesNotification$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["UnreadMessagesNotification"] } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$ComponentContext$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useComponentContext"])('MessageList');
    const { hasNewMessages, isMessageListScrolledToBottom, onScroll, scrollToBottom, wrapperRect } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$MessageList$2f$hooks$2f$MessageList$2f$useScrollLocationLogic$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useScrollLocationLogic"])({
        hasMoreNewer,
        listElement,
        loadMoreScrollThreshold,
        messages,
        scrolledUpThreshold: props.scrolledUpThreshold,
        suppressAutoscroll
    });
    const { show: showUnreadMessagesNotification } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$MessageList$2f$hooks$2f$MessageList$2f$useUnreadMessagesNotification$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useUnreadMessagesNotification"])({
        isMessageListScrolledToBottom,
        showAlways: !!showUnreadNotificationAlways,
        unreadCount: channelUnreadUiState?.unread_messages
    });
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$MessageList$2f$hooks$2f$useMarkRead$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useMarkRead"])({
        isMessageListScrolledToBottom,
        messageListIsThread: threadList,
        wasMarkedUnread: !!channelUnreadUiState?.first_unread_message_id
    });
    const { messageGroupStyles, messages: enrichedMessages } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$MessageList$2f$hooks$2f$MessageList$2f$useEnrichedMessages$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useEnrichedMessages"])({
        channel,
        disableDateSeparator,
        groupStyles,
        headerPosition,
        hideDeletedMessages,
        hideNewMessageSeparator,
        maxTimeBetweenGroupedMessages,
        messages,
        noGroupByUser,
        reviewProcessedMessage
    });
    const elements = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$MessageList$2f$hooks$2f$MessageList$2f$useMessageListElements$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useMessageListElements"])({
        channelUnreadUiState,
        enrichedMessages,
        internalMessageProps: {
            additionalMessageInputProps: props.additionalMessageInputProps,
            closeReactionSelectorOnClick: props.closeReactionSelectorOnClick,
            customMessageActions: props.customMessageActions,
            disableQuotedMessages: props.disableQuotedMessages,
            formatDate: props.formatDate,
            getDeleteMessageErrorNotification: props.getDeleteMessageErrorNotification,
            getFlagMessageErrorNotification: props.getFlagMessageErrorNotification,
            getFlagMessageSuccessNotification: props.getFlagMessageSuccessNotification,
            getMarkMessageUnreadErrorNotification: props.getMarkMessageUnreadErrorNotification,
            getMarkMessageUnreadSuccessNotification: props.getMarkMessageUnreadSuccessNotification,
            getMuteUserErrorNotification: props.getMuteUserErrorNotification,
            getMuteUserSuccessNotification: props.getMuteUserSuccessNotification,
            getPinMessageErrorNotification: props.getPinMessageErrorNotification,
            Message: props.Message,
            messageActions,
            messageListRect: wrapperRect,
            onlySenderCanEdit: props.onlySenderCanEdit,
            onMentionsClick: props.onMentionsClick,
            onMentionsHover: props.onMentionsHover,
            onUserClick: props.onUserClick,
            onUserHover: props.onUserHover,
            openThread: props.openThread,
            pinPermissions,
            reactionDetailsSort,
            renderText: props.renderText,
            retrySendMessage: props.retrySendMessage,
            sortReactionDetails,
            sortReactions,
            unsafeHTML
        },
        messageGroupStyles,
        read,
        renderMessages,
        returnAllReadData,
        threadList
    });
    const messageListClass = customClasses?.messageList || 'str-chat__list';
    const loadMore = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].useCallback(()=>{
        if (loadMoreCallback) {
            loadMoreCallback(messageLimit);
        }
    }, [
        loadMoreCallback,
        messageLimit
    ]);
    const loadMoreNewer = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].useCallback(()=>{
        if (loadMoreNewerCallback) {
            loadMoreNewerCallback(messageLimit);
        }
    }, [
        loadMoreNewerCallback,
        messageLimit
    ]);
    const scrollToBottomFromNotification = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].useCallback(async ()=>{
        if (hasMoreNewer) {
            await jumpToLatestMessage();
        } else {
            scrollToBottom();
        }
    // eslint-disable-next-line react-hooks/exhaustive-deps
    }, [
        scrollToBottom,
        hasMoreNewer
    ]);
    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].useLayoutEffect(()=>{
        if (highlightedMessageId) {
            const element = ulElement?.querySelector(`[data-message-id='${highlightedMessageId}']`);
            element?.scrollIntoView({
                block: 'center'
            });
        }
    // eslint-disable-next-line react-hooks/exhaustive-deps
    }, [
        highlightedMessageId
    ]);
    const id = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$UtilityComponents$2f$useStableId$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useStableId"])();
    const showEmptyStateIndicator = elements.length === 0 && !threadList;
    const dialogManagerId = threadList ? `message-list-dialog-manager-thread-${id}` : `message-list-dialog-manager-${id}`;
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].createElement(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$MessageListContext$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["MessageListContextProvider"], {
        value: {
            listElement,
            scrollToBottom
        }
    }, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].createElement(MessageListMainPanel, null, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].createElement(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$DialogManagerContext$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["DialogManagerProvider"], {
        id: dialogManagerId
    }, !threadList && showUnreadMessagesNotification && __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].createElement(UnreadMessagesNotification, {
        unreadCount: channelUnreadUiState?.unread_messages
    }), __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].createElement("div", {
        className: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$clsx$2f$dist$2f$clsx$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"])(messageListClass, customClasses?.threadList),
        onScroll: onScroll,
        ref: setListElement,
        tabIndex: 0
    }, showEmptyStateIndicator ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].createElement(EmptyStateIndicator, {
        listType: threadList ? 'thread' : 'message'
    }) : __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].createElement(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$InfiniteScrollPaginator$2f$InfiniteScroll$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["InfiniteScroll"], {
        className: 'str-chat__message-list-scroll',
        "data-testid": 'reverse-infinite-scroll',
        hasNextPage: props.hasMoreNewer,
        hasPreviousPage: props.hasMore,
        head: props.head,
        isLoading: props.loadingMore,
        loader: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].createElement("div", {
            className: 'str-chat__list__loading',
            key: 'loading-indicator'
        }, props.loadingMore && __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].createElement(LoadingIndicator, {
            size: 20
        })),
        loadNextPage: loadMoreNewer,
        loadPreviousPage: loadMore,
        threshold: loadMoreScrollThreshold,
        ...restInternalInfiniteScrollProps
    }, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].createElement("ul", {
        className: 'str-chat__ul',
        ref: setUlElement
    }, elements), __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].createElement(TypingIndicator, {
        threadList: threadList
    }), __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].createElement("div", {
        key: 'bottom'
    }))))), __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].createElement(MessageListNotifications, {
        hasNewMessages: hasNewMessages,
        isMessageListScrolledToBottom: isMessageListScrolledToBottom,
        isNotAtLatestMessageSet: hasMoreNewer,
        MessageNotification: MessageNotification,
        notifications: notifications,
        scrollToBottom: scrollToBottomFromNotification,
        threadList: threadList,
        unreadCount: threadList ? undefined : channelUnreadUiState?.unread_messages
    }));
};
const MessageList = (props)=>{
    const { jumpToLatestMessage, loadMore, loadMoreNewer } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$ChannelActionContext$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useChannelActionContext"])('MessageList');
    const { members: membersPropToNotPass, mutes: mutesPropToNotPass, watchers: watchersPropToNotPass, ...restChannelStateContext } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$ChannelStateContext$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useChannelStateContext"])('MessageList');
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].createElement(MessageListWithContext, {
        jumpToLatestMessage: jumpToLatestMessage,
        loadMore: loadMore,
        loadMoreNewer: loadMoreNewer,
        ...restChannelStateContext,
        ...props
    });
};
}}),
"[project]/node_modules/stream-chat-react/dist/components/MessageList/GiphyPreviewMessage.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "GiphyPreviewMessage": (()=>GiphyPreviewMessage)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$Message$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/Message/Message.js [app-ssr] (ecmascript)");
;
;
const GiphyPreviewMessage = (props)=>{
    const { message } = props;
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].createElement("div", {
        className: 'giphy-preview-message'
    }, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].createElement(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$Message$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Message"], {
        message: message
    }));
};
}}),
"[project]/node_modules/stream-chat-react/dist/components/MessageList/hooks/VirtualizedMessageList/useGiphyPreview.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "useGiphyPreview": (()=>useGiphyPreview)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$ChatContext$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/context/ChatContext.js [app-ssr] (ecmascript)");
;
;
const useGiphyPreview = (separateGiphyPreview)=>{
    const [giphyPreviewMessage, setGiphyPreviewMessage] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useState"])();
    const { client } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$ChatContext$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useChatContext"])('useGiphyPreview');
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useEffect"])(()=>{
        if (!separateGiphyPreview) return;
        const handleEvent = (event)=>{
            const { message, user } = event;
            if (message?.command === 'giphy' && user?.id === client.userID) {
                setGiphyPreviewMessage(undefined);
            }
        };
        client.on('message.new', handleEvent);
        return ()=>client.off('message.new', handleEvent);
    }, [
        client,
        separateGiphyPreview
    ]);
    return {
        giphyPreviewMessage,
        setGiphyPreviewMessage: separateGiphyPreview ? setGiphyPreviewMessage : undefined
    };
};
}}),
"[project]/node_modules/stream-chat-react/dist/components/MessageList/hooks/VirtualizedMessageList/useMessageSetKey.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "useMessageSetKey": (()=>useMessageSetKey)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js [app-ssr] (ecmascript)");
;
const useMessageSetKey = ({ messages })=>{
    /**
     * Logic to update the key of the virtuoso component when the list jumps to a new location.
     */ const [messageSetKey, setMessageSetKey] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useState"])(+new Date());
    const firstMessageId = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useRef"])(undefined);
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useEffect"])(()=>{
        const continuousSet = messages?.find((message)=>message.id === firstMessageId.current);
        if (!continuousSet) {
            setMessageSetKey(+new Date());
        }
        firstMessageId.current = messages?.[0]?.id;
    }, [
        messages
    ]);
    return {
        messageSetKey
    };
};
}}),
"[project]/node_modules/stream-chat-react/dist/components/MessageList/hooks/VirtualizedMessageList/useNewMessageNotification.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "useNewMessageNotification": (()=>useNewMessageNotification)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js [app-ssr] (ecmascript)");
;
function useNewMessageNotification(messages, currentUserId, hasMoreNewer) {
    const [newMessagesNotification, setNewMessagesNotification] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useState"])(false);
    const [isMessageListScrolledToBottom, setIsMessageListScrolledToBottom] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useState"])(true);
    /**
     * use the flag to avoid the initial "new messages" quick blink
     */ const didMount = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useRef"])(false);
    const lastMessageId = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useRef"])('');
    const atBottom = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useRef"])(false);
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useEffect"])(()=>{
        if (hasMoreNewer) {
            setNewMessagesNotification(true);
            return;
        }
        /* handle scrolling behavior for new messages */ if (!messages?.length) return;
        const lastMessage = messages[messages.length - 1];
        const prevMessageId = lastMessageId.current;
        lastMessageId.current = lastMessage.id || ''; // update last message id
        /* do nothing if new messages are loaded from top(loadMore)  */ if (lastMessage.id === prevMessageId) return;
        /* if list is already at the bottom return, followOutput will do the job */ if (atBottom.current) return;
        /* if the new message belongs to current user scroll to bottom */ if (lastMessage.user?.id !== currentUserId && didMount.current) {
            /* otherwise just show newMessage notification  */ setNewMessagesNotification(true);
        }
        didMount.current = true;
    }, [
        currentUserId,
        messages,
        hasMoreNewer
    ]);
    return {
        atBottom,
        isMessageListScrolledToBottom,
        newMessagesNotification,
        setIsMessageListScrolledToBottom,
        setNewMessagesNotification
    };
}
}}),
"[project]/node_modules/stream-chat-react/dist/components/MessageList/hooks/VirtualizedMessageList/usePrependMessagesCount.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "usePrependedMessagesCount": (()=>usePrependedMessagesCount)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$MessageList$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/MessageList/utils.js [app-ssr] (ecmascript)");
;
;
const STATUSES_EXCLUDED_FROM_PREPEND = {
    failed: true,
    sending: true
};
function usePrependedMessagesCount(messages, hasDateSeparator) {
    const firstRealMessageIndex = hasDateSeparator ? 1 : 0;
    const firstMessageOnFirstLoadedPage = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useRef"])(undefined);
    const previousFirstMessageOnFirstLoadedPage = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useRef"])(undefined);
    const previousNumItemsPrepended = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useRef"])(0);
    const numItemsPrepended = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useMemo"])(()=>{
        if (!messages || !messages.length) {
            previousNumItemsPrepended.current = 0;
            return 0;
        }
        const currentFirstMessage = messages?.[firstRealMessageIndex];
        const noNewMessages = currentFirstMessage?.id === previousFirstMessageOnFirstLoadedPage.current?.id;
        // This is possible only, when sending messages very quickly (basically single char messages submitted like a crazy) in empty channel (first page)
        // Optimistic UI update, when sending messages, can lead to a situation, when
        // the order of the messages changes for a moment. This can happen, when a user
        // sends multiple messages withing few milliseconds. E.g. we send a message A
        // then message B. At first we have message array with both messages of status "sending"
        // then response for message A is received with a new - later - created_at timestamp
        // this leads to rearrangement of 1.B ("sending"), 2.A ("received"). Still firstMessageOnFirstLoadedPage.current
        // points to message A, but now this message has index 1 => previousNumItemsPrepended.current === 1
        // That in turn leads to incorrect index calculation in VirtualizedMessageList trying to access a message
        // at non-existent index. Therefore, we ignore messages of status "sending" / "failed" in order they are
        // not considered as prepended messages.
        const currentFirstMessageStatus = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$MessageList$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isLocalMessage"])(currentFirstMessage) ? currentFirstMessage.status : undefined;
        const firstMsgMovedAfterMessagesInExcludedStatus = !!(currentFirstMessageStatus && STATUSES_EXCLUDED_FROM_PREPEND[currentFirstMessageStatus]);
        if (noNewMessages || firstMsgMovedAfterMessagesInExcludedStatus) {
            return previousNumItemsPrepended.current;
        }
        if (!firstMessageOnFirstLoadedPage.current) {
            firstMessageOnFirstLoadedPage.current = currentFirstMessage;
        }
        previousFirstMessageOnFirstLoadedPage.current = currentFirstMessage;
        // if new messages were prepended, find out how many
        // start with this number because there cannot be fewer prepended items than before
        for(let prependedMessageCount = previousNumItemsPrepended.current; prependedMessageCount < messages.length; prependedMessageCount += 1){
            const messageIsFirstOnFirstLoadedPage = messages[prependedMessageCount].id === firstMessageOnFirstLoadedPage.current?.id;
            if (messageIsFirstOnFirstLoadedPage) {
                previousNumItemsPrepended.current = prependedMessageCount - firstRealMessageIndex;
                return previousNumItemsPrepended.current;
            }
        }
        // if no match has found, we have jumped - reset the prepended item count.
        firstMessageOnFirstLoadedPage.current = currentFirstMessage;
        previousNumItemsPrepended.current = 0;
        return 0;
    // TODO: there's a bug here, the messages prop is the same array instance (something mutates it)
    // that's why the second dependency is necessary
    // eslint-disable-next-line react-hooks/exhaustive-deps
    }, [
        firstRealMessageIndex,
        messages,
        messages?.length
    ]);
    return numItemsPrepended;
}
}}),
"[project]/node_modules/stream-chat-react/dist/components/MessageList/hooks/VirtualizedMessageList/useScrollToBottomOnNewMessage.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "useScrollToBottomOnNewMessage": (()=>useScrollToBottomOnNewMessage)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js [app-ssr] (ecmascript)");
;
const useScrollToBottomOnNewMessage = ({ messages, scrollToBottom, scrollToLatestMessageOnFocus })=>{
    const [newMessagesReceivedInBackground, setNewMessagesReceivedInBackground] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useState"])(false);
    const scrollToBottomIfConfigured = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useRef"])(undefined);
    scrollToBottomIfConfigured.current = (event)=>{
        if (!scrollToLatestMessageOnFocus || !newMessagesReceivedInBackground || event.target !== window) {
            return;
        }
        setTimeout(scrollToBottom, 100);
    };
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useEffect"])(()=>{
        setNewMessagesReceivedInBackground(true);
    }, [
        messages
    ]);
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useEffect"])(()=>{
        const handleFocus = (event)=>{
            scrollToBottomIfConfigured.current?.(event);
        };
        const handleBlur = ()=>{
            setNewMessagesReceivedInBackground(false);
        };
        if (typeof window !== 'undefined') {
            window.addEventListener('focus', handleFocus);
            window.addEventListener('blur', handleBlur);
        }
        return ()=>{
            window.removeEventListener('focus', handleFocus);
            window.removeEventListener('blur', handleBlur);
        };
    }, []);
};
}}),
"[project]/node_modules/stream-chat-react/dist/components/MessageList/hooks/VirtualizedMessageList/useShouldForceScrollToBottom.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "useShouldForceScrollToBottom": (()=>useShouldForceScrollToBottom)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js [app-ssr] (ecmascript)");
;
function useShouldForceScrollToBottom(messages, currentUserId) {
    const lastFocusedOwnMessage = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useRef"])('');
    const initialFocusRegistered = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useRef"])(false);
    function recheckForNewOwnMessage() {
        if (messages && messages.length > 0) {
            const lastMessage = messages[messages.length - 1];
            if (lastMessage.user?.id === currentUserId && lastFocusedOwnMessage.current !== lastMessage.id) {
                lastFocusedOwnMessage.current = lastMessage.id;
                return true;
            }
        }
        return false;
    }
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useEffect"])(()=>{
        if (messages && messages.length && !initialFocusRegistered.current) {
            initialFocusRegistered.current = true;
            recheckForNewOwnMessage();
        }
    // eslint-disable-next-line react-hooks/exhaustive-deps
    }, [
        messages,
        messages?.length
    ]);
    return recheckForNewOwnMessage;
}
}}),
"[project]/node_modules/stream-chat-react/dist/components/MessageList/hooks/VirtualizedMessageList/useUnreadMessagesNotificationVirtualized.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "useUnreadMessagesNotificationVirtualized": (()=>useUnreadMessagesNotificationVirtualized)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js [app-ssr] (ecmascript)");
;
const useUnreadMessagesNotificationVirtualized = ({ lastRead, showAlways, unreadCount })=>{
    const [show, setShow] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useState"])(false);
    const toggleShowUnreadMessagesNotification = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useCallback"])((renderedMessages)=>{
        if (!unreadCount) return;
        const firstRenderedMessage = renderedMessages[0];
        const lastRenderedMessage = renderedMessages.slice(-1)[0];
        if (!(firstRenderedMessage && lastRenderedMessage)) return;
        const firstRenderedMessageTime = new Date(firstRenderedMessage.created_at ?? 0).getTime();
        const lastRenderedMessageTime = new Date(lastRenderedMessage.created_at ?? 0).getTime();
        const lastReadTime = new Date(lastRead ?? 0).getTime();
        const scrolledBelowSeparator = !!lastReadTime && firstRenderedMessageTime > lastReadTime;
        const scrolledAboveSeparator = !!lastReadTime && lastRenderedMessageTime < lastReadTime;
        setShow(showAlways ? scrolledBelowSeparator || scrolledAboveSeparator : scrolledBelowSeparator);
    }, [
        lastRead,
        showAlways,
        unreadCount
    ]);
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useEffect"])(()=>{
        if (!unreadCount) setShow(false);
    }, [
        unreadCount
    ]);
    return {
        show,
        toggleShowUnreadMessagesNotification
    };
};
}}),
"[project]/node_modules/stream-chat-react/dist/components/MessageList/VirtualizedMessageListComponents.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "EmptyPlaceholder": (()=>EmptyPlaceholder),
    "Header": (()=>Header),
    "Item": (()=>Item),
    "calculateFirstItemIndex": (()=>calculateFirstItemIndex),
    "calculateItemIndex": (()=>calculateItemIndex),
    "makeItemsRenderedHandler": (()=>makeItemsRenderedHandler),
    "messageRenderer": (()=>messageRenderer)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$clsx$2f$dist$2f$clsx$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/clsx/dist/clsx.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lodash$2e$throttle$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/lodash.throttle/index.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$EmptyStateIndicator$2f$EmptyStateIndicator$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/EmptyStateIndicator/EmptyStateIndicator.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Loading$2f$LoadingIndicator$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/Loading/LoadingIndicator.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/Message/utils.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$Message$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/Message/Message.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$ComponentContext$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/context/ComponentContext.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$MessageList$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/MessageList/utils.js [app-ssr] (ecmascript)");
;
;
;
;
;
;
;
;
const PREPEND_OFFSET = 10 ** 7;
function calculateItemIndex(virtuosoIndex, numItemsPrepended) {
    return virtuosoIndex + numItemsPrepended - PREPEND_OFFSET;
}
function calculateFirstItemIndex(numItemsPrepended) {
    return PREPEND_OFFSET - numItemsPrepended;
}
const makeItemsRenderedHandler = (renderedItemsActions, processedMessages)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lodash$2e$throttle$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"])((items)=>{
        const renderedMessages = items.map((item)=>{
            if (!item.originalIndex) return undefined;
            return processedMessages[calculateItemIndex(item.originalIndex, PREPEND_OFFSET)];
        }).filter((msg)=>!!msg);
        renderedItemsActions.forEach((action)=>action(renderedMessages));
    }, 200);
const Item = ({ context, ...props })=>{
    if (!context) return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].createElement(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].Fragment, null);
    const message = context.processedMessages[calculateItemIndex(props['data-item-index'], context.numItemsPrepended)];
    const groupStyles = context.messageGroupStyles[message.id];
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].createElement("div", {
        ...props,
        className: context?.customClasses?.virtualMessage || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$clsx$2f$dist$2f$clsx$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"])('str-chat__virtual-list-message-wrapper str-chat__li', {
            [`str-chat__li--${groupStyles}`]: groupStyles
        })
    });
};
const Header = ({ context })=>{
    const { LoadingIndicator = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Loading$2f$LoadingIndicator$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["LoadingIndicator"] } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$ComponentContext$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useComponentContext"])('VirtualizedMessageListHeader');
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].createElement(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].Fragment, null, context?.head, context?.loadingMore && LoadingIndicator && __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].createElement("div", {
        className: 'str-chat__virtual-list__loading'
    }, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].createElement(LoadingIndicator, {
        size: 20
    })));
};
const EmptyPlaceholder = ({ context })=>{
    const { EmptyStateIndicator = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$EmptyStateIndicator$2f$EmptyStateIndicator$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["EmptyStateIndicator"] } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$ComponentContext$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useComponentContext"])('VirtualizedMessageList');
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].createElement(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].Fragment, null, EmptyStateIndicator && __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].createElement(EmptyStateIndicator, {
        listType: context?.threadList ? 'thread' : 'message'
    }));
};
const messageRenderer = (virtuosoIndex, _data, virtuosoContext)=>{
    const { additionalMessageInputProps, closeReactionSelectorOnClick, customMessageActions, customMessageRenderer, DateSeparator, firstUnreadMessageId, formatDate, lastReadDate, lastReadMessageId, lastReceivedMessageId, Message: MessageUIComponent, messageActions, messageGroupStyles, MessageSystem, numItemsPrepended, openThread, ownMessagesReadByOthers, processedMessages: messageList, reactionDetailsSort, shouldGroupByUser, sortReactionDetails, sortReactions, threadList, unreadMessageCount = 0, UnreadMessagesSeparator, virtuosoRef } = virtuosoContext;
    const streamMessageIndex = calculateItemIndex(virtuosoIndex, numItemsPrepended);
    if (customMessageRenderer) {
        return customMessageRenderer(messageList, streamMessageIndex);
    }
    const message = messageList[streamMessageIndex];
    if (!message || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$MessageList$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isIntroMessage"])(message)) return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].createElement("div", {
        style: {
            height: '1px'
        }
    }); // returning null or zero height breaks the virtuoso
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$MessageList$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isDateSeparatorMessage"])(message)) {
        return DateSeparator ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].createElement(DateSeparator, {
            date: message.date,
            unread: message.unread
        }) : null;
    }
    if (message.type === 'system') {
        return MessageSystem ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].createElement(MessageSystem, {
            message: message
        }) : null;
    }
    const maybePrevMessage = messageList[streamMessageIndex - 1];
    const maybeNextMessage = messageList[streamMessageIndex + 1];
    const groupedByUser = shouldGroupByUser && streamMessageIndex > 0 && message.user?.id === maybePrevMessage?.user?.id;
    // FIXME: firstOfGroup & endOfGroup should be derived from groupStyles which apply a more complex logic
    const firstOfGroup = shouldGroupByUser && (message.user?.id !== maybePrevMessage?.user?.id || maybePrevMessage && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isMessageEdited"])(maybePrevMessage));
    const endOfGroup = shouldGroupByUser && (message.user?.id !== maybeNextMessage?.user?.id || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isMessageEdited"])(message));
    const isFirstUnreadMessage = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$MessageList$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getIsFirstUnreadMessage"])({
        firstUnreadMessageId,
        isFirstMessage: streamMessageIndex === 0,
        lastReadDate,
        lastReadMessageId,
        message,
        previousMessage: streamMessageIndex ? messageList[streamMessageIndex - 1] : undefined,
        unreadMessageCount
    });
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].createElement(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].Fragment, null, isFirstUnreadMessage && __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].createElement("div", {
        className: 'str-chat__unread-messages-separator-wrapper'
    }, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].createElement(UnreadMessagesSeparator, {
        unreadCount: unreadMessageCount
    })), __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].createElement(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$Message$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Message"], {
        additionalMessageInputProps: additionalMessageInputProps,
        autoscrollToBottom: virtuosoRef.current?.autoscrollToBottom,
        closeReactionSelectorOnClick: closeReactionSelectorOnClick,
        customMessageActions: customMessageActions,
        endOfGroup: endOfGroup,
        firstOfGroup: firstOfGroup,
        formatDate: formatDate,
        groupedByUser: groupedByUser,
        groupStyles: [
            messageGroupStyles[message.id] ?? ''
        ],
        lastReceivedId: lastReceivedMessageId,
        message: message,
        Message: MessageUIComponent,
        messageActions: messageActions,
        openThread: openThread,
        reactionDetailsSort: reactionDetailsSort,
        readBy: ownMessagesReadByOthers[message.id] || [],
        sortReactionDetails: sortReactionDetails,
        sortReactions: sortReactions,
        threadList: threadList
    }));
};
}}),
"[project]/node_modules/stream-chat-react/dist/components/MessageList/VirtualizedMessageList.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "VirtualizedMessageList": (()=>VirtualizedMessageList)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$virtuoso$2f$dist$2f$index$2e$m$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/react-virtuoso/dist/index.m.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$MessageList$2f$GiphyPreviewMessage$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/MessageList/GiphyPreviewMessage.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$MessageList$2f$hooks$2f$useLastReadData$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/MessageList/hooks/useLastReadData.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$MessageList$2f$hooks$2f$VirtualizedMessageList$2f$useGiphyPreview$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/MessageList/hooks/VirtualizedMessageList/useGiphyPreview.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$MessageList$2f$hooks$2f$VirtualizedMessageList$2f$useMessageSetKey$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/MessageList/hooks/VirtualizedMessageList/useMessageSetKey.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$MessageList$2f$hooks$2f$VirtualizedMessageList$2f$useNewMessageNotification$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/MessageList/hooks/VirtualizedMessageList/useNewMessageNotification.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$MessageList$2f$hooks$2f$VirtualizedMessageList$2f$usePrependMessagesCount$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/MessageList/hooks/VirtualizedMessageList/usePrependMessagesCount.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$MessageList$2f$hooks$2f$VirtualizedMessageList$2f$useScrollToBottomOnNewMessage$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/MessageList/hooks/VirtualizedMessageList/useScrollToBottomOnNewMessage.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$MessageList$2f$hooks$2f$VirtualizedMessageList$2f$useShouldForceScrollToBottom$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/MessageList/hooks/VirtualizedMessageList/useShouldForceScrollToBottom.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$MessageList$2f$hooks$2f$VirtualizedMessageList$2f$useUnreadMessagesNotificationVirtualized$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/MessageList/hooks/VirtualizedMessageList/useUnreadMessagesNotificationVirtualized.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$MessageList$2f$hooks$2f$useMarkRead$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/MessageList/hooks/useMarkRead.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$MessageList$2f$MessageNotification$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/MessageList/MessageNotification.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$MessageList$2f$MessageListNotifications$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/MessageList/MessageListNotifications.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$MessageList$2f$MessageListMainPanel$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/MessageList/MessageListMainPanel.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$MessageList$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/MessageList/utils.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$MessageSimple$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/Message/MessageSimple.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$MessageList$2f$UnreadMessagesNotification$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/MessageList/UnreadMessagesNotification.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$MessageList$2f$VirtualizedMessageListComponents$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/MessageList/VirtualizedMessageListComponents.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$MessageList$2f$UnreadMessagesSeparator$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/MessageList/UnreadMessagesSeparator.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$DateSeparator$2f$DateSeparator$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/DateSeparator/DateSeparator.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$EventComponent$2f$EventComponent$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/EventComponent/EventComponent.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$DialogManagerContext$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/context/DialogManagerContext.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$ChannelActionContext$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/context/ChannelActionContext.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$ChannelStateContext$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/context/ChannelStateContext.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$ChatContext$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/context/ChatContext.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$ComponentContext$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/context/ComponentContext.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$VirtualizedMessageListContext$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/context/VirtualizedMessageListContext.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$constants$2f$limits$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/constants/limits.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$UtilityComponents$2f$useStableId$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-chat-react/dist/components/UtilityComponents/useStableId.js [app-ssr] (ecmascript)");
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
function captureResizeObserverExceededError(e) {
    if (e.message === 'ResizeObserver loop completed with undelivered notifications.' || e.message === 'ResizeObserver loop limit exceeded') {
        e.stopImmediatePropagation();
    }
}
function useCaptureResizeObserverExceededError() {
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useEffect"])(()=>{
        window.addEventListener('error', captureResizeObserverExceededError);
        return ()=>{
            window.removeEventListener('error', captureResizeObserverExceededError);
        };
    }, []);
}
function fractionalItemSize(element) {
    return element.getBoundingClientRect().height;
}
function findMessageIndex(messages, id) {
    return messages.findIndex((message)=>message.id === id);
}
function calculateInitialTopMostItemIndex(messages, highlightedMessageId) {
    if (highlightedMessageId) {
        const index = findMessageIndex(messages, highlightedMessageId);
        if (index !== -1) {
            return {
                align: 'center',
                index
            };
        }
    }
    return messages.length - 1;
}
const VirtualizedMessageListWithContext = (props)=>{
    const { additionalMessageInputProps, additionalVirtuosoProps = {}, channel, channelUnreadUiState, closeReactionSelectorOnClick, customMessageActions, customMessageRenderer, defaultItemHeight, disableDateSeparator = true, formatDate, groupStyles, hasMoreNewer, head, hideDeletedMessages = false, hideNewMessageSeparator = false, highlightedMessageId, jumpToLatestMessage, loadingMore, loadMore, loadMoreNewer, maxTimeBetweenGroupedMessages, Message: MessageUIComponentFromProps, messageActions, messageLimit = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$constants$2f$limits$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["DEFAULT_NEXT_CHANNEL_PAGE_SIZE"], messages, notifications, openThread, // TODO: refactor to scrollSeekPlaceHolderConfiguration and components.ScrollSeekPlaceholder, like the Virtuoso Component
    overscan = 0, reactionDetailsSort, read, returnAllReadData = false, reviewProcessedMessage, scrollSeekPlaceHolder, scrollToLatestMessageOnFocus = false, separateGiphyPreview = false, shouldGroupByUser = false, showUnreadNotificationAlways, sortReactionDetails, sortReactions, stickToBottomScrollBehavior = 'smooth', suppressAutoscroll, threadList } = props;
    const { components: virtuosoComponentsFromProps, ...overridingVirtuosoProps } = additionalVirtuosoProps;
    // Stops errors generated from react-virtuoso to bubble up
    // to Sentry or other tracking tools.
    useCaptureResizeObserverExceededError();
    const { DateSeparator = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$DateSeparator$2f$DateSeparator$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["DateSeparator"], GiphyPreviewMessage = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$MessageList$2f$GiphyPreviewMessage$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["GiphyPreviewMessage"], MessageListMainPanel = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$MessageList$2f$MessageListMainPanel$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["MessageListMainPanel"], MessageListNotifications = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$MessageList$2f$MessageListNotifications$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["MessageListNotifications"], MessageNotification = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$MessageList$2f$MessageNotification$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["MessageNotification"], MessageSystem = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$EventComponent$2f$EventComponent$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["EventComponent"], TypingIndicator, UnreadMessagesNotification = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$MessageList$2f$UnreadMessagesNotification$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["UnreadMessagesNotification"], UnreadMessagesSeparator = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$MessageList$2f$UnreadMessagesSeparator$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["UnreadMessagesSeparator"], VirtualMessage: MessageUIComponentFromContext = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$Message$2f$MessageSimple$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["MessageSimple"] } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$ComponentContext$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useComponentContext"])('VirtualizedMessageList');
    const MessageUIComponent = MessageUIComponentFromProps || MessageUIComponentFromContext;
    const { client, customClasses } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$ChatContext$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useChatContext"])('VirtualizedMessageList');
    const virtuoso = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useRef"])(null);
    const lastRead = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useMemo"])(()=>channel.lastRead?.(), [
        channel
    ]);
    const { show: showUnreadMessagesNotification, toggleShowUnreadMessagesNotification } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$MessageList$2f$hooks$2f$VirtualizedMessageList$2f$useUnreadMessagesNotificationVirtualized$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useUnreadMessagesNotificationVirtualized"])({
        lastRead: channelUnreadUiState?.last_read,
        showAlways: !!showUnreadNotificationAlways,
        unreadCount: channelUnreadUiState?.unread_messages ?? 0
    });
    const { giphyPreviewMessage, setGiphyPreviewMessage } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$MessageList$2f$hooks$2f$VirtualizedMessageList$2f$useGiphyPreview$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useGiphyPreview"])(separateGiphyPreview);
    const processedMessages = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useMemo"])(()=>{
        if (typeof messages === 'undefined') {
            return [];
        }
        if (disableDateSeparator && !hideDeletedMessages && hideNewMessageSeparator && !separateGiphyPreview) {
            return messages;
        }
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$MessageList$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["processMessages"])({
            enableDateSeparator: !disableDateSeparator,
            hideDeletedMessages,
            hideNewMessageSeparator,
            lastRead,
            messages,
            reviewProcessedMessage,
            setGiphyPreviewMessage,
            userId: client.userID || ''
        });
    // eslint-disable-next-line react-hooks/exhaustive-deps
    }, [
        disableDateSeparator,
        hideDeletedMessages,
        hideNewMessageSeparator,
        lastRead,
        messages,
        messages?.length,
        client.userID
    ]);
    // get the mapping of own messages to array of users who read them
    const ownMessagesReadByOthers = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$MessageList$2f$hooks$2f$useLastReadData$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useLastReadData"])({
        messages: processedMessages,
        read,
        returnAllReadData,
        userID: client.userID
    });
    const lastReceivedMessageId = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useMemo"])(()=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$MessageList$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getLastReceived"])(processedMessages), [
        processedMessages
    ]);
    const groupStylesFn = groupStyles || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$MessageList$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getGroupStyles"];
    const messageGroupStyles = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useMemo"])(()=>processedMessages.reduce((acc, message, i)=>{
            const style = groupStylesFn(message, processedMessages[i - 1], processedMessages[i + 1], !shouldGroupByUser, maxTimeBetweenGroupedMessages);
            if (style && message.id) acc[message.id] = style;
            return acc;
        }, {}), // processedMessages were incorrectly rebuilt with a new object identity at some point, hence the .length usage
    // eslint-disable-next-line react-hooks/exhaustive-deps
    [
        maxTimeBetweenGroupedMessages,
        processedMessages.length,
        shouldGroupByUser,
        groupStylesFn
    ]);
    const { atBottom, isMessageListScrolledToBottom, newMessagesNotification, setIsMessageListScrolledToBottom, setNewMessagesNotification } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$MessageList$2f$hooks$2f$VirtualizedMessageList$2f$useNewMessageNotification$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useNewMessageNotification"])(processedMessages, client.userID, hasMoreNewer);
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$MessageList$2f$hooks$2f$useMarkRead$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useMarkRead"])({
        isMessageListScrolledToBottom,
        messageListIsThread: !!threadList,
        wasMarkedUnread: !!channelUnreadUiState?.first_unread_message_id
    });
    const scrollToBottom = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useCallback"])(async ()=>{
        if (hasMoreNewer) {
            await jumpToLatestMessage();
            return;
        }
        if (virtuoso.current) {
            virtuoso.current.scrollToIndex(processedMessages.length - 1);
        }
        setNewMessagesNotification(false);
    // eslint-disable-next-line react-hooks/exhaustive-deps
    }, [
        virtuoso,
        processedMessages,
        setNewMessagesNotification,
        // processedMessages were incorrectly rebuilt with a new object identity at some point, hence the .length usage
        processedMessages.length,
        hasMoreNewer,
        jumpToLatestMessage
    ]);
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$MessageList$2f$hooks$2f$VirtualizedMessageList$2f$useScrollToBottomOnNewMessage$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useScrollToBottomOnNewMessage"])({
        messages,
        scrollToBottom,
        scrollToLatestMessageOnFocus
    });
    const numItemsPrepended = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$MessageList$2f$hooks$2f$VirtualizedMessageList$2f$usePrependMessagesCount$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["usePrependedMessagesCount"])(processedMessages, !disableDateSeparator);
    const { messageSetKey } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$MessageList$2f$hooks$2f$VirtualizedMessageList$2f$useMessageSetKey$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useMessageSetKey"])({
        messages
    });
    const shouldForceScrollToBottom = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$MessageList$2f$hooks$2f$VirtualizedMessageList$2f$useShouldForceScrollToBottom$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useShouldForceScrollToBottom"])(processedMessages, client.userID);
    const handleItemsRendered = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useMemo"])(()=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$MessageList$2f$VirtualizedMessageListComponents$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["makeItemsRenderedHandler"])([
            toggleShowUnreadMessagesNotification
        ], processedMessages), [
        processedMessages,
        toggleShowUnreadMessagesNotification
    ]);
    const followOutput = (isAtBottom)=>{
        if (hasMoreNewer || suppressAutoscroll) {
            return false;
        }
        if (shouldForceScrollToBottom()) {
            return isAtBottom ? stickToBottomScrollBehavior : 'auto';
        }
        // a message from another user has been received - don't scroll to bottom unless already there
        return isAtBottom ? stickToBottomScrollBehavior : false;
    };
    const computeItemKey = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useCallback"])((index, _, { numItemsPrepended, processedMessages })=>processedMessages[(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$MessageList$2f$VirtualizedMessageListComponents$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["calculateItemIndex"])(index, numItemsPrepended)].id, []);
    const atBottomStateChange = (isAtBottom)=>{
        atBottom.current = isAtBottom;
        setIsMessageListScrolledToBottom(isAtBottom);
        if (isAtBottom) {
            loadMoreNewer?.(messageLimit);
            setNewMessagesNotification?.(false);
        }
    };
    const atTopStateChange = (isAtTop)=>{
        if (isAtTop) {
            loadMore?.(messageLimit);
        }
    };
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useEffect"])(()=>{
        let scrollTimeout;
        if (highlightedMessageId) {
            const index = findMessageIndex(processedMessages, highlightedMessageId);
            if (index !== -1) {
                scrollTimeout = setTimeout(()=>{
                    virtuoso.current?.scrollToIndex({
                        align: 'center',
                        index
                    });
                }, 0);
            }
        }
        return ()=>{
            clearTimeout(scrollTimeout);
        };
    }, [
        highlightedMessageId,
        processedMessages
    ]);
    const id = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$UtilityComponents$2f$useStableId$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useStableId"])();
    if (!processedMessages) return null;
    const dialogManagerId = threadList ? `virtualized-message-list-dialog-manager-thread-${id}` : `virtualized-message-list-dialog-manager-${id}`;
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].createElement(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$VirtualizedMessageListContext$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["VirtualizedMessageListContextProvider"], {
        value: {
            scrollToBottom
        }
    }, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].createElement(MessageListMainPanel, null, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].createElement(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$DialogManagerContext$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["DialogManagerProvider"], {
        id: dialogManagerId
    }, !threadList && showUnreadMessagesNotification && __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].createElement(UnreadMessagesNotification, {
        unreadCount: channelUnreadUiState?.unread_messages
    }), __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].createElement("div", {
        className: customClasses?.virtualizedMessageList || 'str-chat__virtual-list'
    }, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].createElement(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$virtuoso$2f$dist$2f$index$2e$m$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Virtuoso"], {
        atBottomStateChange: atBottomStateChange,
        atBottomThreshold: 100,
        atTopStateChange: atTopStateChange,
        atTopThreshold: 100,
        className: 'str-chat__message-list-scroll',
        components: {
            EmptyPlaceholder: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$MessageList$2f$VirtualizedMessageListComponents$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["EmptyPlaceholder"],
            Header: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$MessageList$2f$VirtualizedMessageListComponents$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Header"],
            Item: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$MessageList$2f$VirtualizedMessageListComponents$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Item"],
            ...virtuosoComponentsFromProps
        },
        computeItemKey: computeItemKey,
        context: {
            additionalMessageInputProps,
            closeReactionSelectorOnClick,
            customClasses,
            customMessageActions,
            customMessageRenderer,
            DateSeparator,
            firstUnreadMessageId: channelUnreadUiState?.first_unread_message_id,
            formatDate,
            head,
            lastReadDate: channelUnreadUiState?.last_read,
            lastReadMessageId: channelUnreadUiState?.last_read_message_id,
            lastReceivedMessageId,
            loadingMore,
            Message: MessageUIComponent,
            messageActions,
            messageGroupStyles,
            MessageSystem,
            numItemsPrepended,
            openThread,
            ownMessagesReadByOthers,
            processedMessages,
            reactionDetailsSort,
            shouldGroupByUser,
            sortReactionDetails,
            sortReactions,
            threadList,
            unreadMessageCount: channelUnreadUiState?.unread_messages,
            UnreadMessagesSeparator,
            virtuosoRef: virtuoso
        },
        firstItemIndex: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$MessageList$2f$VirtualizedMessageListComponents$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["calculateFirstItemIndex"])(numItemsPrepended),
        followOutput: followOutput,
        increaseViewportBy: {
            bottom: 200,
            top: 0
        },
        initialTopMostItemIndex: calculateInitialTopMostItemIndex(processedMessages, highlightedMessageId),
        itemContent: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$components$2f$MessageList$2f$VirtualizedMessageListComponents$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["messageRenderer"],
        itemSize: fractionalItemSize,
        itemsRendered: handleItemsRendered,
        key: messageSetKey,
        overscan: overscan,
        ref: virtuoso,
        style: {
            overflowX: 'hidden'
        },
        totalCount: processedMessages.length,
        ...overridingVirtuosoProps,
        ...scrollSeekPlaceHolder ? {
            scrollSeek: scrollSeekPlaceHolder
        } : {},
        ...defaultItemHeight ? {
            defaultItemHeight
        } : {}
    }))), TypingIndicator && __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].createElement(TypingIndicator, null)), __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].createElement(MessageListNotifications, {
        hasNewMessages: newMessagesNotification,
        isMessageListScrolledToBottom: isMessageListScrolledToBottom,
        isNotAtLatestMessageSet: hasMoreNewer,
        MessageNotification: MessageNotification,
        notifications: notifications,
        scrollToBottom: scrollToBottom,
        threadList: threadList,
        unreadCount: threadList ? undefined : channelUnreadUiState?.unread_messages
    }), giphyPreviewMessage && __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].createElement(GiphyPreviewMessage, {
        message: giphyPreviewMessage
    }));
};
function VirtualizedMessageList(props) {
    const { jumpToLatestMessage, loadMore, loadMoreNewer } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$ChannelActionContext$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useChannelActionContext"])('VirtualizedMessageList');
    const { channel, channelUnreadUiState, hasMore, hasMoreNewer, highlightedMessageId, loadingMore, loadingMoreNewer, messages: contextMessages, notifications, read, suppressAutoscroll } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$chat$2d$react$2f$dist$2f$context$2f$ChannelStateContext$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useChannelStateContext"])('VirtualizedMessageList');
    const messages = props.messages || contextMessages;
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].createElement(VirtualizedMessageListWithContext, {
        channel: channel,
        channelUnreadUiState: props.channelUnreadUiState ?? channelUnreadUiState,
        hasMore: !!hasMore,
        hasMoreNewer: !!hasMoreNewer,
        highlightedMessageId: highlightedMessageId,
        jumpToLatestMessage: jumpToLatestMessage,
        loadingMore: !!loadingMore,
        loadingMoreNewer: !!loadingMoreNewer,
        loadMore: loadMore,
        loadMoreNewer: loadMoreNewer,
        messages: messages,
        notifications: notifications,
        read: read,
        suppressAutoscroll: suppressAutoscroll,
        ...props
    });
}
}}),

};

//# sourceMappingURL=node_modules_stream-chat-react_dist_components_MessageList_83828968._.js.map