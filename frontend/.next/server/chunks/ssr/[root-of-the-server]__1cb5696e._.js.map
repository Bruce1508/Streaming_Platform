{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 95, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/ACER/Documents/code/streamify/Streaming_Platform/frontend/lib/axios.ts"],"sourcesContent":["// lib/axiosInstance.ts\r\nimport axios from \"axios\";\r\n\r\nconst BASE_URL = process.env.NEXT_PUBLIC_API_URL || \"http://localhost:5001/api\";\r\n\r\nexport const axiosInstance = axios.create({\r\n  baseURL: BASE_URL,  // Đây là URL của backend của bạn\r\n  withCredentials: true,  // Cho phép gửi cookies (cần thiết cho authentication)\r\n});\r\n\r\naxiosInstance.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    // Xử lý lỗi globally, ví dụ: refresh token, redirect to login, v.v.\r\n    return Promise.reject(error);\r\n  }\r\n);"],"names":[],"mappings":"AAAA,uBAAuB;;;;AACvB;;AAEA,MAAM,WAAW,iEAAmC;AAE7C,MAAM,gBAAgB,qIAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IACxC,SAAS;IACT,iBAAiB;AACnB;AAEA,cAAc,YAAY,CAAC,QAAQ,CAAC,GAAG,CACrC,CAAC,WAAa,UACd,CAAC;IACC,oEAAoE;IACpE,OAAO,QAAQ,MAAM,CAAC;AACxB","debugId":null}},
    {"offset": {"line": 116, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/ACER/Documents/code/streamify/Streaming_Platform/frontend/lib/api.ts"],"sourcesContent":["// lib/api.ts\r\nimport { axiosInstance } from \"./axios\";\r\n\r\n// Định nghĩa các interfaces\r\ninterface SignupData {\r\n    fullName: string;\r\n    email: string;\r\n    password: string;\r\n}\r\n\r\ninterface LoginData {\r\n    email: string;\r\n    password: string;\r\n}\r\n\r\ninterface UserData {\r\n    fullName?: string;\r\n    bio?: string;\r\n    nativeLanguage?: string;\r\n    learningLanguage?: string;\r\n    location?: string;\r\n    profilePic?: string;\r\n    [key: string]: any;\r\n}\r\n\r\ninterface AuthResponse {\r\n    success: boolean;\r\n    message?: string;\r\n    user?: {\r\n        _id: string;\r\n        fullName: string;\r\n        email: string;\r\n        profilePic: string;\r\n        isOnboarded: boolean;\r\n        [key: string]: any;\r\n    };\r\n    [key: string]: any;\r\n}\r\n\r\n// Authentication APIs\r\nexport const signup = async (signupData: SignupData): Promise<AuthResponse> => {\r\n    try {\r\n        console.log(\"Sending signup data:\", signupData);\r\n        const response = await axiosInstance.post(\"/auth/sign-up\", signupData);\r\n        console.log(\"Signup response:\", response.data);\r\n        return response.data;\r\n    } catch (error: any) {\r\n        if (error.response) {\r\n            // Thông tin chi tiết hơn về lỗi từ server\r\n            console.error(\"Error status:\", error.response.status);\r\n            console.error(\"Error data:\", error.response.data);\r\n            console.error(\"Error headers:\", error.response.headers);\r\n        } else if (error.request) {\r\n            // Request đã được gửi nhưng không nhận được response\r\n            console.error(\"Error request:\", error.request);\r\n        } else {\r\n            // Lỗi khi setting up request\r\n            console.error(\"Error message:\", error.message);\r\n        }\r\n        return {\r\n            success: false,\r\n            message: error.response?.data?.message || 'Failed to sign up'\r\n        };\r\n    }\r\n};\r\n\r\nexport const login = async (loginData: LoginData): Promise<AuthResponse> => {\r\n    try {\r\n        const response = await axiosInstance.post(\"/auth/login\", loginData);\r\n        return response.data;\r\n    } catch (error: any) {\r\n        return {\r\n            success: false,\r\n            message: error.response?.data?.message || 'Failed to sign in'\r\n        };\r\n    }\r\n\r\n};\r\n\r\nexport const logout = async (): Promise<{ success: boolean; message: string }> => {\r\n    const response = await axiosInstance.post(\"/auth/logout\");\r\n    return response.data;\r\n};\r\n\r\nexport const getAuthUser = async (): Promise<AuthResponse | null> => {\r\n    try {\r\n        const res = await axiosInstance.get(\"/auth/me\");\r\n        return res.data;\r\n    } catch (error) {\r\n        console.log(\"Error in getAuthUser:\", error);\r\n        return null;\r\n    }\r\n};\r\n\r\nexport const completeOnboarding = async (userData: UserData): Promise<AuthResponse> => {\r\n    const response = await axiosInstance.post(\"/auth/onboarding\", userData);\r\n    return response.data;\r\n};\r\n\r\n// User and Friends APIs\r\nexport async function getUserFriends() {\r\n    const response = await axiosInstance.get(\"/users/friends\");\r\n    return response.data;\r\n}\r\n\r\nexport async function getRecommendedUsers() {\r\n    const response = await axiosInstance.get(\"/users\");\r\n    return response.data;\r\n}\r\n\r\nexport async function getOutgoingFriendReqs() {\r\n    const response = await axiosInstance.get(\"/users/outgoing-friend-requests\");\r\n    return response.data;\r\n}\r\n\r\nexport async function sendFriendRequest(userId: string) {\r\n    const response = await axiosInstance.post(`/users/friend-request/${userId}`);\r\n    return response.data;\r\n}\r\n\r\nexport async function getFriendRequests() {\r\n    const response = await axiosInstance.get(\"/users/friend-requests\");\r\n    return response.data;\r\n}\r\n\r\nexport async function acceptFriendRequest(requestId: string) {\r\n    const response = await axiosInstance.put(`/users/friend-request/${requestId}/accept`);\r\n    return response.data;\r\n}\r\n\r\n// Chat APIs\r\nexport async function getStreamToken() {\r\n    const response = await axiosInstance.get(\"/chat/token\");\r\n    return response.data;\r\n}"],"names":[],"mappings":"AAAA,aAAa;;;;;;;;;;;;;;;AACb;;AAuCO,MAAM,SAAS,OAAO;IACzB,IAAI;QACA,QAAQ,GAAG,CAAC,wBAAwB;QACpC,MAAM,WAAW,MAAM,4GAAA,CAAA,gBAAa,CAAC,IAAI,CAAC,iBAAiB;QAC3D,QAAQ,GAAG,CAAC,oBAAoB,SAAS,IAAI;QAC7C,OAAO,SAAS,IAAI;IACxB,EAAE,OAAO,OAAY;QACjB,IAAI,MAAM,QAAQ,EAAE;YAChB,0CAA0C;YAC1C,QAAQ,KAAK,CAAC,iBAAiB,MAAM,QAAQ,CAAC,MAAM;YACpD,QAAQ,KAAK,CAAC,eAAe,MAAM,QAAQ,CAAC,IAAI;YAChD,QAAQ,KAAK,CAAC,kBAAkB,MAAM,QAAQ,CAAC,OAAO;QAC1D,OAAO,IAAI,MAAM,OAAO,EAAE;YACtB,qDAAqD;YACrD,QAAQ,KAAK,CAAC,kBAAkB,MAAM,OAAO;QACjD,OAAO;YACH,6BAA6B;YAC7B,QAAQ,KAAK,CAAC,kBAAkB,MAAM,OAAO;QACjD;QACA,OAAO;YACH,SAAS;YACT,SAAS,MAAM,QAAQ,EAAE,MAAM,WAAW;QAC9C;IACJ;AACJ;AAEO,MAAM,QAAQ,OAAO;IACxB,IAAI;QACA,MAAM,WAAW,MAAM,4GAAA,CAAA,gBAAa,CAAC,IAAI,CAAC,eAAe;QACzD,OAAO,SAAS,IAAI;IACxB,EAAE,OAAO,OAAY;QACjB,OAAO;YACH,SAAS;YACT,SAAS,MAAM,QAAQ,EAAE,MAAM,WAAW;QAC9C;IACJ;AAEJ;AAEO,MAAM,SAAS;IAClB,MAAM,WAAW,MAAM,4GAAA,CAAA,gBAAa,CAAC,IAAI,CAAC;IAC1C,OAAO,SAAS,IAAI;AACxB;AAEO,MAAM,cAAc;IACvB,IAAI;QACA,MAAM,MAAM,MAAM,4GAAA,CAAA,gBAAa,CAAC,GAAG,CAAC;QACpC,OAAO,IAAI,IAAI;IACnB,EAAE,OAAO,OAAO;QACZ,QAAQ,GAAG,CAAC,yBAAyB;QACrC,OAAO;IACX;AACJ;AAEO,MAAM,qBAAqB,OAAO;IACrC,MAAM,WAAW,MAAM,4GAAA,CAAA,gBAAa,CAAC,IAAI,CAAC,oBAAoB;IAC9D,OAAO,SAAS,IAAI;AACxB;AAGO,eAAe;IAClB,MAAM,WAAW,MAAM,4GAAA,CAAA,gBAAa,CAAC,GAAG,CAAC;IACzC,OAAO,SAAS,IAAI;AACxB;AAEO,eAAe;IAClB,MAAM,WAAW,MAAM,4GAAA,CAAA,gBAAa,CAAC,GAAG,CAAC;IACzC,OAAO,SAAS,IAAI;AACxB;AAEO,eAAe;IAClB,MAAM,WAAW,MAAM,4GAAA,CAAA,gBAAa,CAAC,GAAG,CAAC;IACzC,OAAO,SAAS,IAAI;AACxB;AAEO,eAAe,kBAAkB,MAAc;IAClD,MAAM,WAAW,MAAM,4GAAA,CAAA,gBAAa,CAAC,IAAI,CAAC,CAAC,sBAAsB,EAAE,QAAQ;IAC3E,OAAO,SAAS,IAAI;AACxB;AAEO,eAAe;IAClB,MAAM,WAAW,MAAM,4GAAA,CAAA,gBAAa,CAAC,GAAG,CAAC;IACzC,OAAO,SAAS,IAAI;AACxB;AAEO,eAAe,oBAAoB,SAAiB;IACvD,MAAM,WAAW,MAAM,4GAAA,CAAA,gBAAa,CAAC,GAAG,CAAC,CAAC,sBAAsB,EAAE,UAAU,OAAO,CAAC;IACpF,OAAO,SAAS,IAAI;AACxB;AAGO,eAAe;IAClB,MAAM,WAAW,MAAM,4GAAA,CAAA,gBAAa,CAAC,GAAG,CAAC;IACzC,OAAO,SAAS,IAAI;AACxB","debugId":null}},
    {"offset": {"line": 220, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/ACER/Documents/code/streamify/Streaming_Platform/frontend/app/actions/auth.ts"],"sourcesContent":["'use server'\r\n\r\nimport { signup } from \"@/lib/api\";\r\n\r\n// State type\r\ninterface SignUpState {\r\n    success: boolean;\r\n    message?: string | null;\r\n    errors?: {\r\n        fullName?: string;\r\n        email?: string;\r\n        password?: string;\r\n        terms?: string;\r\n        [key: string]: string | undefined;\r\n    };\r\n}\r\n\r\nexport async function signUp(prevState: SignUpState, formData: FormData): Promise<SignUpState> {\r\n    try {\r\n        const fullName = formData.get('fullName') as string;\r\n        const email = formData.get('email') as string;\r\n        const password = formData.get('password') as string;\r\n        const termsAccepted = formData.get('terms') === 'on';\r\n\r\n        console.log(\"Server Action received data:\", {\r\n            fullName,\r\n            email,\r\n            password,\r\n            termsAccepted\r\n        });\r\n\r\n        const errors: SignUpState['errors'] = {};\r\n\r\n        if (!fullName) errors.fullName = 'Full name is required';\r\n        if (!email) errors.email = 'Email is required';\r\n        if (!password) errors.password = 'Password is required';\r\n        if (password && password.length < 6) errors.password = 'Password must be at least 6 characters';\r\n        if (!termsAccepted) errors.terms = 'You must accept the terms';\r\n\r\n        if (Object.keys(errors).length > 0) {\r\n            return {\r\n                success: false,\r\n                message: 'Please fix the errors below',\r\n                errors\r\n            };\r\n        }\r\n\r\n        //gọi API signup từ api.ts và truyền dữ liệu từ form. cái này sẽ được gửi request đến backend\r\n        const result = await signup({ fullName, email, password });\r\n\r\n        if (result.success) {\r\n            return {\r\n                success: true,\r\n                message: \"Account created successfully!\"\r\n            };\r\n\r\n        } else {\r\n            return {\r\n                success: false,\r\n                message: result.message || 'Failed to create account'\r\n            }\r\n        }\r\n\r\n    } catch (error: any) {\r\n        console.error('SignUp error:', error);\r\n        return {\r\n            success: false,\r\n            message: error.response?.data?.message || 'An unexpected error occurred'\r\n        };\r\n    }\r\n}\r\n"],"names":[],"mappings":";;;;;AAEA;;;;;AAeO,eAAe,OAAO,SAAsB,EAAE,QAAkB;IACnE,IAAI;QACA,MAAM,WAAW,SAAS,GAAG,CAAC;QAC9B,MAAM,QAAQ,SAAS,GAAG,CAAC;QAC3B,MAAM,WAAW,SAAS,GAAG,CAAC;QAC9B,MAAM,gBAAgB,SAAS,GAAG,CAAC,aAAa;QAEhD,QAAQ,GAAG,CAAC,gCAAgC;YACxC;YACA;YACA;YACA;QACJ;QAEA,MAAM,SAAgC,CAAC;QAEvC,IAAI,CAAC,UAAU,OAAO,QAAQ,GAAG;QACjC,IAAI,CAAC,OAAO,OAAO,KAAK,GAAG;QAC3B,IAAI,CAAC,UAAU,OAAO,QAAQ,GAAG;QACjC,IAAI,YAAY,SAAS,MAAM,GAAG,GAAG,OAAO,QAAQ,GAAG;QACvD,IAAI,CAAC,eAAe,OAAO,KAAK,GAAG;QAEnC,IAAI,OAAO,IAAI,CAAC,QAAQ,MAAM,GAAG,GAAG;YAChC,OAAO;gBACH,SAAS;gBACT,SAAS;gBACT;YACJ;QACJ;QAEA,6FAA6F;QAC7F,MAAM,SAAS,MAAM,CAAA,GAAA,0GAAA,CAAA,SAAM,AAAD,EAAE;YAAE;YAAU;YAAO;QAAS;QAExD,IAAI,OAAO,OAAO,EAAE;YAChB,OAAO;gBACH,SAAS;gBACT,SAAS;YACb;QAEJ,OAAO;YACH,OAAO;gBACH,SAAS;gBACT,SAAS,OAAO,OAAO,IAAI;YAC/B;QACJ;IAEJ,EAAE,OAAO,OAAY;QACjB,QAAQ,KAAK,CAAC,iBAAiB;QAC/B,OAAO;YACH,SAAS;YACT,SAAS,MAAM,QAAQ,EAAE,MAAM,WAAW;QAC9C;IACJ;AACJ;;;IArDsB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 291, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/ACER/Documents/code/streamify/Streaming_Platform/frontend/.next-internal/server/app/sign-up/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {signUp as '606687f6e1265d1bebb6101e92f277303a2c2d945e'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 343, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/ACER/Documents/code/streamify/Streaming_Platform/frontend/app/sign-up/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/sign-up/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/sign-up/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAwR,GACrT,sDACA","debugId":null}},
    {"offset": {"line": 357, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/ACER/Documents/code/streamify/Streaming_Platform/frontend/app/sign-up/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/sign-up/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/sign-up/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAoQ,GACjS,kCACA","debugId":null}},
    {"offset": {"line": 371, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}