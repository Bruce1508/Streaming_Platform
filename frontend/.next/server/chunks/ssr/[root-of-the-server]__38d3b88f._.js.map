{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Bruce%20Vo/Documents/project/linguex/Streaming_Platform/frontend/lib/api.ts"],"sourcesContent":["import { getSession } from \"next-auth/react\";\r\nimport { getAuthToken } from './tokenUtils';\r\n\r\nconst BASE_URL = process.env.NEXT_PUBLIC_API_URL || 'http://localhost:5001/api';\r\n\r\ninterface ApiResponse<T = any> {\r\n    success: boolean;\r\n    message?: string;\r\n    user?: T;\r\n    token?: string;\r\n}\r\n\r\ninterface User {\r\n    _id: string;\r\n    fullName: string;\r\n    username?: string;\r\n    avatar?: string;\r\n    nativeLanguage: string;\r\n    learningLanguage: string;\r\n    location?: string;\r\n    email: string;\r\n}\r\n\r\ninterface SignupData {\r\n    fullName: string;\r\n    email: string;\r\n    password: string;\r\n}\r\n\r\ninterface LoginData {\r\n    email: string;\r\n    password: string;\r\n}\r\n\r\ninterface OnboardingData {\r\n    fullName: string;\r\n    bio: string;\r\n    nativeLanguage: string;\r\n    learningLanguage: string;\r\n    location: string;\r\n    profilePic: string;\r\n}\r\n\r\nexport const makeAuthenticationRequest = async (\r\n    endpoint: string, \r\n    options: RequestInit = {}\r\n): Promise<Response> => {\r\n    // ‚úÖ Get token with proper type checking\r\n    let rawToken = localStorage.getItem('auth_token');\r\n    \r\n    console.log('üîç makeAuthenticationRequest debug:', {\r\n        rawToken,\r\n        tokenType: typeof rawToken,\r\n        tokenLength: rawToken?.length,\r\n        isNull: rawToken === null,\r\n        isStringNull: rawToken === 'null'\r\n    });\r\n    \r\n    // ‚úÖ Clean token\r\n    let token: string | null = null;\r\n    if (rawToken && rawToken !== 'null' && rawToken !== 'undefined') {\r\n        token = typeof rawToken === 'string' ? rawToken : String(rawToken);\r\n    }\r\n    \r\n    // ‚úÖ Fallback to session if no localStorage token\r\n    if (!token) {\r\n        console.log('üîç No localStorage token, trying session...');\r\n        try {\r\n            const session = await getSession();\r\n            token = session?.accessToken || null;\r\n            console.log('üîç Session token:', !!token);\r\n        } catch (error) {\r\n            console.log('‚ùå Session token failed:', error);\r\n        }\r\n    }\r\n    \r\n    if (!token) {\r\n        console.error('‚ùå No token available for request');\r\n        throw new Error('No authentication token available');\r\n    }\r\n\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${token}`,\r\n        ...options.headers,\r\n    };\r\n    \r\n    console.log('üì° Making request:', {\r\n        endpoint: `${BASE_URL}${endpoint}`,\r\n        hasAuth: !!headers.Authorization,\r\n        authPreview: headers.Authorization?.substring(0, 30) + '...'\r\n    });\r\n\r\n    return fetch(`${BASE_URL}${endpoint}`, {\r\n        ...options,\r\n        headers,\r\n    });\r\n}\r\n\r\nexport const signUp = async (signUpData: SignupData): Promise<ApiResponse> => {\r\n    try {\r\n        const response = await fetch(`${BASE_URL}/auth/sign-up`, {\r\n            method: 'POST',\r\n            body: JSON.stringify(signUpData),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        });\r\n\r\n        const data = await response.json();\r\n        return data;\r\n    } catch (error: any) {\r\n        console.error('Signup error:', error);\r\n        return {\r\n            success: false,\r\n            message: 'Network error occurred with signUp function in api.ts'\r\n        };\r\n    }\r\n}\r\n\r\nexport const signIn = async (loginData: LoginData): Promise<ApiResponse> => {\r\n    try {\r\n        const response = await fetch(`${BASE_URL}/auth/sign-in`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(loginData),\r\n        });\r\n\r\n        const data = await response.json();\r\n        return data;\r\n    } catch (error: any) {\r\n        console.error('Login error in api.ts:', error);\r\n        return {\r\n            success: false,\r\n            message: 'Something wrong with signIn function in api.ts'\r\n        };\r\n    }\r\n};\r\n\r\nexport const getAuthUser = async (): Promise<ApiResponse | null> => {\r\n    try {\r\n        const response = await makeAuthenticationRequest(\"/auth/me\");\r\n        if (!response.ok) {\r\n            return null;\r\n        }\r\n\r\n        const data = await response.json();\r\n        return data;\r\n\r\n    } catch (error) {\r\n        console.error('Get auth user error in api.ts:', error);\r\n        return null;\r\n    }\r\n}\r\n\r\nexport const completeOnBoarding = async (userData: OnboardingData): Promise<ApiResponse> => {\r\n    try {\r\n        const response = await makeAuthenticationRequest('/auth/onBoarding', {\r\n            method: 'POST',\r\n            body: JSON.stringify(userData),\r\n        });\r\n\r\n        const data = await response.json();\r\n        return data;\r\n    } catch (error) {\r\n        console.error(\"Onboarding error in api.ts: \", error);\r\n        return {\r\n            success: false,\r\n            message: \"Internal error in Onboarding in api.ts\"\r\n        }\r\n    }\r\n}\r\n\r\nexport async function getUserFriends(): Promise<any[]> {\r\n    try {\r\n        const response = await makeAuthenticationRequest('/users/friends');\r\n        if (!response.ok) {\r\n            throw new Error('Failed to fetch friends');\r\n        }\r\n\r\n        const data = await response.json();\r\n        return data;\r\n    } catch (error: any) {\r\n        console.error('Get friends error:', error);\r\n        throw error;\r\n    };\r\n}\r\n\r\nexport async function getRecommendedUsers(): Promise<any[]> {\r\n    try {\r\n        const response = await makeAuthenticationRequest('/users/recommended');\r\n        \r\n        if (!response.ok) {\r\n            throw new Error('Failed to fetch recommended users');\r\n        }\r\n        \r\n        const data = await response.json();\r\n        console.log('‚úÖ Recommended users fetched:', data);\r\n        return data;\r\n    } catch (error) {\r\n        console.error('Get recommended users error:', error);\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport async function getOutgoingFriendReqs(): Promise<any[]> {\r\n    try {\r\n        const response = await makeAuthenticationRequest('/users/outgoing-friend-requests');\r\n        \r\n        if (!response.ok) {\r\n            throw new Error('Failed to fetch outgoing requests');\r\n        }\r\n        \r\n        const data = await response.json();\r\n        return data;\r\n    } catch (error) {\r\n        console.error('Get outgoing requests error:', error);\r\n        throw error;\r\n    }\r\n}\r\n\r\n//h√†m b·ªã tr√πng b√™n useFriend.ts\r\nexport async function sendFriendRequest(userId: string): Promise<any> {\r\n    try {\r\n        const response = await makeAuthenticationRequest(`/users/friend-request/${userId}`, {\r\n            method: 'POST',\r\n        });\r\n        \r\n        if (!response.ok) {\r\n            throw new Error('Failed to send friend request');\r\n        }\r\n        \r\n        const data = await response.json();\r\n        return data;\r\n    } catch (error) {\r\n        console.error('Send friend request error:', error);\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport async function getFriendRequests(): Promise<any> {\r\n    try {\r\n        console.log('üåê Making API call to /users/friend-requests');\r\n        \r\n        const response = await makeAuthenticationRequest('/users/friend-requests');\r\n        console.log('üì° Response status:', response.status);\r\n        \r\n        if (!response.ok) {\r\n            console.error('‚ùå Response not OK:', response.status, response.statusText);\r\n            throw new Error('Failed to fetch friend requests');\r\n        }\r\n        \r\n        const data = await response.json();\r\n        console.log('üì¶ Raw API response:', data);\r\n        \r\n        // Check backend response structure\r\n        const result = {\r\n            incomingRequests: data.incomingRequests || data.incomingReqs || [],\r\n            acceptedRequests: data.acceptedRequests || data.acceptedReqs || []\r\n        };\r\n        \r\n        console.log('üîÑ Mapped result:', result);\r\n        return result;\r\n    } catch (error) {\r\n        console.error('‚ùå Get friend requests error:', error);\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport async function acceptFriendRequest(requestId: string): Promise<any> {\r\n    try {\r\n        console.log('üîÑ Accepting friend request:', requestId);\r\n        \r\n        const response = await makeAuthenticationRequest(`/users/friend-request/${requestId}/accept`, {\r\n            method: 'PUT',\r\n        });\r\n        \r\n        console.log('üì° Accept response status:', response.status);\r\n        \r\n        if (!response.ok) {\r\n            const errorData = await response.json();\r\n            console.error('‚ùå Accept failed:', errorData);\r\n            throw new Error(errorData.message || 'Failed to accept friend request');\r\n        }\r\n        \r\n        const data = await response.json();\r\n        console.log('‚úÖ Accept success:', data);\r\n        return data;\r\n    } catch (error) {\r\n        console.error('‚ùå Accept friend request error:', error);\r\n        throw error;\r\n    }\r\n}\r\n\r\n// Chat APIs\r\nexport async function getStreamToken(): Promise<any> {\r\n    try {\r\n        console.log('üîÑ Requesting Stream token...');\r\n        \r\n        const response = await makeAuthenticationRequest('/chat/token');\r\n        \r\n        console.log('üì° Response status:', response.status);\r\n        \r\n        if (!response.ok) {\r\n            const errorData = await response.json();\r\n            console.error('‚ùå Token request failed:', errorData);\r\n            throw new Error(errorData.message || 'Failed to get stream token in frontend api.ts');\r\n        }\r\n        \r\n        const data = await response.json();\r\n        console.log('‚úÖ Stream token received:', data);\r\n        return data;\r\n    } catch (error) {\r\n        console.error('‚ùå Get stream token error in the frontend:', error);\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport async function rejectFriendRequest(requestId: string): Promise<any> {\r\n    try {\r\n        console.log('üîÑ Rejecting friend request:', requestId);\r\n        \r\n        const response = await makeAuthenticationRequest(`/users/friend-request/${requestId}/reject`, {\r\n            method: 'DELETE',\r\n        });\r\n        \r\n        console.log('üì° Reject response status:', response.status);\r\n        \r\n        if (!response.ok) {\r\n            const errorData = await response.json();\r\n            console.error('‚ùå Reject failed:', errorData);\r\n            throw new Error(errorData.message || 'Failed to reject friend request from api.ts');\r\n        }\r\n        \r\n        const data = await response.json();\r\n        console.log('‚úÖ Reject success:', data);\r\n        return data;\r\n    } catch (error) {\r\n        console.error('‚ùå Reject friend request error in api.ts:', error);\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport async function cancelFriendRequest(recipientId: string): Promise<any> {\r\n    try {\r\n        const response = await makeAuthenticationRequest(`/users/friend-request/${recipientId}/cancel`, {\r\n            method: 'DELETE',\r\n        });\r\n\r\n        if (!response.ok) {\r\n            const errorData = await response.json();\r\n            throw new Error(errorData.message || 'Failed to cancel friend request');\r\n        }\r\n\r\n        const data = await response.json();\r\n        return {\r\n            success: true,\r\n            data\r\n        };\r\n    } catch (error) {\r\n        console.error('Error cancelling friend request:', error);\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport async function getMyProfile(): Promise<any> {\r\n    try {\r\n        const response = await makeAuthenticationRequest('/users/profile', {\r\n            method: 'GET',\r\n        });\r\n        \r\n        if (!response.ok) {\r\n            const errorData = await response.json();\r\n            throw new Error(errorData.message || 'Failed to fetch profile');\r\n        }\r\n        \r\n        const data = await response.json();\r\n        return data.user;\r\n    } catch (error) {\r\n        console.error('Error fetching profile:', error);\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport async function updateMyProfile(profileData: {\r\n    fullName?: string;\r\n    bio?: string;\r\n    location?: string;\r\n    website?: string;\r\n}): Promise<any> {\r\n    try {\r\n        const response = await makeAuthenticationRequest('/users/profile', {\r\n            method: 'PUT',\r\n            body: JSON.stringify(profileData),\r\n        });\r\n        \r\n        if (!response.ok) {\r\n            const errorData = await response.json();\r\n            throw new Error(errorData.message || 'Failed to update profile');\r\n        }\r\n        \r\n        const data = await response.json();\r\n        return data.user;\r\n    } catch (error) {\r\n        console.error('Error updating profile:', error);\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport async function updateProfilePicture(profilePic: string): Promise<any> {\r\n    try {\r\n        const response = await makeAuthenticationRequest('/users/profile/avatar', {\r\n            method: 'PUT',\r\n            body: JSON.stringify({ profilePic }),\r\n        });\r\n        \r\n        if (!response.ok) {\r\n            const errorData = await response.json();\r\n            throw new Error(errorData.message || 'Failed to update profile picture');\r\n        }\r\n        \r\n        const data = await response.json();\r\n        return data.user;\r\n    } catch (error) {\r\n        console.error('Error updating profile picture:', error);\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport async function searchUsers(query: string): Promise<User[]> {\r\n    try {\r\n        console.log('üîç Starting user search for:', query);\r\n        \r\n        if (!query.trim()) {\r\n            console.log('‚ö†Ô∏è Empty search query');\r\n            return [];\r\n        }\r\n        \r\n        const response = await makeAuthenticationRequest(\r\n            `/users/search?q=${encodeURIComponent(query)}`\r\n        );\r\n        \r\n        console.log('üì° Search response status:', response.status);\r\n        \r\n        if (!response.ok) {\r\n            const error = await response.json();\r\n            console.error('‚ùå Search error:', error);\r\n            \r\n            if (response.status === 401) {\r\n                console.log('üîÑ Unauthorized - token may be expired');\r\n                // Let the auth wrapper handle redirect\r\n                throw new Error('Unauthorized');\r\n            }\r\n            \r\n            throw new Error(error.message || 'Search failed');\r\n        }\r\n        \r\n        const data = await response.json();\r\n        console.log('‚úÖ Search successful:', data);\r\n        \r\n        // Return the users array, filtering will be done in component\r\n        return data.users || [];\r\n        \r\n    } catch (error) {\r\n        console.error('‚ùå Search request failed:', error);\r\n        throw error;\r\n    }\r\n}\r\n\r\n\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 416, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Bruce%20Vo/Documents/project/linguex/Streaming_Platform/frontend/lib/tokenUtils.ts"],"sourcesContent":["const TOKEN_KEY = 'auth_token';\r\n\r\nexport const getAuthToken = (): string | null => {\r\n    return localStorage.getItem(TOKEN_KEY);\r\n};\r\n\r\nexport const setAuthToken = (token: string): void => {\r\n    localStorage.setItem(TOKEN_KEY, token);\r\n};\r\n\r\nexport const removeAuthToken = (): void => {\r\n    localStorage.removeItem(TOKEN_KEY);\r\n};"],"names":[],"mappings":";;;;;AAAA,MAAM,YAAY;AAEX,MAAM,eAAe;IACxB,OAAO,aAAa,OAAO,CAAC;AAChC;AAEO,MAAM,eAAe,CAAC;IACzB,aAAa,OAAO,CAAC,WAAW;AACpC;AAEO,MAAM,kBAAkB;IAC3B,aAAa,UAAU,CAAC;AAC5B","debugId":null}},
    {"offset": {"line": 437, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Bruce%20Vo/Documents/project/linguex/Streaming_Platform/frontend/contexts/AuthContext.tsx"],"sourcesContent":["// contexts/AuthContext.tsx\r\n'use client';\r\n\r\nimport { createContext, useContext, useEffect, useState, ReactNode, useCallback } from 'react';\r\nimport { useSession, signOut as nextAuthSignOut, signOut, getSession } from \"next-auth/react\";\r\nimport { useRouter } from 'next/navigation';\r\nimport { getAuthUser } from \"@/lib/api\"; \r\nimport { setAuthToken, removeAuthToken, getAuthToken } from '@/lib/tokenUtils';\r\n\r\ninterface User {\r\n    _id: string;\r\n    fullName: string;\r\n    email: string;\r\n    profilePic: string;\r\n    isOnboarded: boolean;\r\n    bio: string;\r\n    nativeLanguage: string;\r\n    learningLanguage: string;\r\n    location: string;\r\n}\r\n\r\ninterface AuthContextType {\r\n    user: User | null;\r\n    token: string | null;\r\n    login: (userData: User, token: string) => void;\r\n    logout: () => void;\r\n    updateUser: (userData: User) => void;\r\n    refreshUser: () => Promise<void>; // ‚úÖ Th√™m v√†o interface\r\n    isLoading: boolean;\r\n    authMethod: 'oauth' | 'credentials' | null;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\nexport function AuthProvider({ children }: { children: ReactNode }) {\r\n    const { data: session, status } = useSession();\r\n    const router = useRouter();\r\n    \r\n    const [user, setUser] = useState<User | null>(null);\r\n    const [token, setToken] = useState<string | null>(null);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [authMethod, setAuthMethod] = useState<'oauth' | 'credentials' | null>(null);\r\n\r\n    // ‚úÖ S·ª≠ d·ª•ng getAuthUser thay v√¨ fetchUserData\r\n    const fetchUserData = useCallback(async (accessToken: string) => {\r\n        try {\r\n            // Token ƒë√£ ƒë∆∞·ª£c set trong header b·ªüi makeAuthenticationRequest\r\n            const response = await getAuthUser();\r\n            return response?.user || null;\r\n        } catch (error) {\r\n            console.error('Error fetching user data:', error);\r\n            return null;\r\n        }\r\n    }, []);\r\n\r\n    // Effect ƒë·ªÉ x·ª≠ l√Ω authentication\r\n    useEffect(() => {\r\n        const initAuth = async () => {\r\n            if (status === 'loading') {\r\n                return;\r\n            }\r\n\r\n            if (session?.user && session?.accessToken) {\r\n                console.log('üîê NextAuth session detected');\r\n                \r\n                // Set token ƒë·ªÉ makeAuthenticationRequest c√≥ th·ªÉ s·ª≠ d·ª•ng\r\n                localStorage.setItem('auth_token', session.accessToken);\r\n                \r\n                const fullUserData = await fetchUserData(session.accessToken);\r\n                \r\n                if (fullUserData) {\r\n                    setUser(fullUserData);\r\n                    setToken(session.accessToken);\r\n                    setAuthMethod('oauth');\r\n                }\r\n                \r\n                // Clear localStorage sau khi d√πng xong (OAuth kh√¥ng c·∫ßn l∆∞u)\r\n                localStorage.removeItem('auth_token');\r\n            } else {\r\n                console.log('üîë Checking localStorage for credentials auth');\r\n                \r\n                const savedToken = localStorage.getItem('auth_token');\r\n                const savedUser = localStorage.getItem('auth_user');\r\n\r\n                if (savedToken && savedUser) {\r\n                    try {\r\n                        const userData = await fetchUserData(savedToken);\r\n                        \r\n                        if (userData) {\r\n                            setUser(userData);\r\n                            setToken(savedToken);\r\n                            setAuthMethod('credentials');\r\n                        } else {\r\n                            localStorage.removeItem('auth_token');\r\n                            localStorage.removeItem('auth_user');\r\n                        }\r\n                    } catch (error) {\r\n                        console.error('Error validating saved token:', error);\r\n                        localStorage.removeItem('auth_token');\r\n                        localStorage.removeItem('auth_user');\r\n                    }\r\n                }\r\n            }\r\n\r\n            setIsLoading(false);\r\n        };\r\n\r\n        initAuth();\r\n    }, [session, status, fetchUserData]);\r\n\r\n    // Login function cho credentials\r\n    const login = useCallback((userData: User, token: string) => {\r\n        console.log('üîê LOGIN DEBUG - Input token:', {\r\n            tokenExists: !!token,\r\n            tokenType: typeof token,\r\n            tokenLength: token?.length,\r\n            tokenValue: token // Log full token ƒë·ªÉ debug\r\n        });\r\n\r\n        const cleanToken = typeof token === 'string' ? token : String(token);\r\n\r\n        if (!cleanToken || cleanToken === 'undefined' || cleanToken === 'null') {\r\n            console.error('‚ùå Invalid token provided to login function');\r\n            return;\r\n        }\r\n\r\n        setUser(userData);\r\n        setToken(cleanToken); \r\n        setAuthMethod('credentials');\r\n        \r\n        localStorage.removeItem('auth_token');\r\n        localStorage.removeItem('auth_user');\r\n        \r\n        localStorage.setItem('auth_token', cleanToken); // ‚úÖ Save as string\r\n        localStorage.setItem('auth_user', JSON.stringify(userData));\r\n\r\n        const savedToken = localStorage.getItem('auth_token');\r\n        console.log('üîê Token verification after save:', {\r\n            saved: !!savedToken,\r\n            matches: savedToken === token,\r\n            savedLength: savedToken?.length\r\n        });\r\n    }, []);\r\n\r\n    // Logout function\r\n    const logout = async () => {\r\n        console.log(\"üî¥ Logout started\");\r\n        try {\r\n            // Clear local storage\r\n            removeAuthToken();\r\n            localStorage.removeItem(\"user\");\r\n            console.log(\"üóëÔ∏è Local storage cleared\");\r\n            \r\n            // Clear state\r\n            setUser(null);\r\n            setAuthMethod(null);\r\n            console.log(\"üîÑ State cleared\");\r\n            \r\n            // Clear NextAuth session if exists\r\n            const session = await getSession();\r\n            if (session) {\r\n                console.log(\"üîê Clearing NextAuth session\");\r\n                await signOut({ redirect: false });\r\n            }\r\n            \r\n            console.log(\"‚úÖ Logout complete\");\r\n            \r\n            // Redirect to sign-in\r\n            router.push(\"/sign-in\");\r\n        } catch (error) {\r\n            console.error(\"‚ùå Logout error:\", error);\r\n        }\r\n    };\r\n\r\n    // Update user function\r\n    const updateUser = useCallback((userData: User) => {\r\n        console.log('üîÑ Updating user data');\r\n        setUser(userData);\r\n        \r\n        if (authMethod === 'credentials') {\r\n            localStorage.setItem('auth_user', JSON.stringify(userData));\r\n        }\r\n    }, [authMethod]);\r\n\r\n    // ‚úÖ Refresh user function\r\n    const refreshUser = useCallback(async () => {\r\n        try {\r\n            console.log('üîÑ Refreshing user data...');\r\n            \r\n            // ƒê·∫£m b·∫£o c√≥ token\r\n            if (!token && authMethod === 'oauth' && session?.accessToken) {\r\n                // T·∫°m th·ªùi set token cho OAuth\r\n                localStorage.setItem('auth_token', session.accessToken);\r\n            }\r\n            \r\n            const response = await getAuthUser();\r\n            \r\n            if (response?.user) {\r\n                setUser(response.user);\r\n                console.log('‚úÖ User data refreshed');\r\n            }\r\n            \r\n            // Clear temp token n·∫øu l√† OAuth\r\n            if (authMethod === 'oauth') {\r\n                localStorage.removeItem('auth_token');\r\n            }\r\n        } catch (error) {\r\n            console.error('Failed to refresh user:', error);\r\n        }\r\n    }, [token, authMethod, session]);\r\n\r\n    return (\r\n        <AuthContext.Provider value={{ \r\n            user, \r\n            token, \r\n            login, \r\n            logout, \r\n            refreshUser, \r\n            updateUser, \r\n            isLoading,\r\n            authMethod\r\n        }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n}\r\n\r\nexport function useAuth() {\r\n    const context = useContext(AuthContext);\r\n    if (!context) {\r\n        throw new Error('useAuth must be used within AuthProvider');\r\n    }\r\n    return context;\r\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 643, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Bruce%20Vo/Documents/project/linguex/Streaming_Platform/frontend/contexts/ThemeContext.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { createContext, useContext, useEffect, useState, ReactNode } from 'react';\r\n\r\ninterface ThemeContextType {\r\n    theme: string;\r\n    setTheme: (theme: string) => void;\r\n}\r\n\r\nconst ThemeContext = createContext<ThemeContextType | undefined>(undefined);\r\n\r\nexport function ThemeProvider({ children }: { children: ReactNode }) {\r\n    const [theme, setThemeState] = useState('dark'); // default theme\r\n    const [mounted, setMounted] = useState(false);\r\n\r\n    // Load theme from localStorage on mount\r\n    useEffect(() => {\r\n        const savedTheme = localStorage.getItem('streamify-theme') || 'dark';\r\n        setThemeState(savedTheme);\r\n        document.documentElement.setAttribute('data-theme', savedTheme);\r\n        setMounted(true);\r\n    }, []);\r\n\r\n    const setTheme = (newTheme: string) => {\r\n        setThemeState(newTheme);\r\n        localStorage.setItem('streamify-theme', newTheme);\r\n        document.documentElement.setAttribute('data-theme', newTheme);\r\n    };\r\n\r\n    // Don't render until mounted to avoid hydration mismatch\r\n    if (!mounted) {\r\n        return <>{children}</>;\r\n    }\r\n\r\n    return (\r\n        <ThemeContext.Provider value={{ theme, setTheme }}>\r\n            {children}\r\n        </ThemeContext.Provider>\r\n    );\r\n}\r\n\r\nexport function useTheme() {\r\n    const context = useContext(ThemeContext);\r\n    if (context === undefined) {\r\n        throw new Error('useTheme must be used within a ThemeProvider');\r\n    }\r\n    return context;\r\n}"],"names":[],"mappings":";;;;;AAEA;AAFA;;;AASA,MAAM,6BAAe,CAAA,GAAA,qMAAA,CAAA,gBAAa,AAAD,EAAgC;AAE1D,SAAS,cAAc,EAAE,QAAQ,EAA2B;IAC/D,MAAM,CAAC,OAAO,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,SAAS,gBAAgB;IACjE,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,wCAAwC;IACxC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACN,MAAM,aAAa,aAAa,OAAO,CAAC,sBAAsB;QAC9D,cAAc;QACd,SAAS,eAAe,CAAC,YAAY,CAAC,cAAc;QACpD,WAAW;IACf,GAAG,EAAE;IAEL,MAAM,WAAW,CAAC;QACd,cAAc;QACd,aAAa,OAAO,CAAC,mBAAmB;QACxC,SAAS,eAAe,CAAC,YAAY,CAAC,cAAc;IACxD;IAEA,yDAAyD;IACzD,IAAI,CAAC,SAAS;QACV,qBAAO;sBAAG;;IACd;IAEA,qBACI,8OAAC,aAAa,QAAQ;QAAC,OAAO;YAAE;YAAO;QAAS;kBAC3C;;;;;;AAGb;AAEO,SAAS;IACZ,MAAM,UAAU,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,YAAY,WAAW;QACvB,MAAM,IAAI,MAAM;IACpB;IACA,OAAO;AACX","debugId":null}},
    {"offset": {"line": 699, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Bruce%20Vo/Documents/project/linguex/Streaming_Platform/frontend/components/ToasterProvider.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { Toaster } from \"react-hot-toast\";\r\n\r\nexport function ToasterProvider() {\r\n    return <Toaster />;\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AAFA;;;AAIO,SAAS;IACZ,qBAAO,8OAAC,uJAAA,CAAA,UAAO;;;;;AACnB","debugId":null}},
    {"offset": {"line": 720, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Bruce%20Vo/Documents/project/linguex/Streaming_Platform/frontend/providers/SessionProvider.tsx"],"sourcesContent":["'use client'\r\n\r\nimport { SessionProvider } from \"next-auth/react\"\r\n\r\nexport default function NextAuthSessionProvider({\r\n    children,\r\n}: {\r\n    children: React.ReactNode\r\n}) {\r\n    return (\r\n        <SessionProvider // Refetch session m·ªói 5 ph√∫t thay v√¨ li√™n t·ª•c\r\n            refetchInterval={5 * 60} // 5 minutes\r\n            refetchOnWindowFocus={false} // T·∫Øt refetch khi focus window>\r\n        >\r\n            {children}\r\n        </ SessionProvider>\r\n    );\r\n}"],"names":[],"mappings":";;;;AAEA;AAFA;;;AAIe,SAAS,wBAAwB,EAC5C,QAAQ,EAGX;IACG,qBACI,8OAAC,+IAAgB,8CAA8C;IAA9D,CAAA,kBAAe;QACZ,iBAAiB,IAAI;QACrB,sBAAsB;kBAErB;;;;;;AAGb","debugId":null}}]
}