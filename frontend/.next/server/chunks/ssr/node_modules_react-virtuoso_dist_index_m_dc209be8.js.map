{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"file":"index.m.js","sources":["file:///C:/Users/Bruce%20Vo/Documents/project/Streaming_Platform/frontend/node_modules/react-virtuoso/src/hooks/useIsomorphicLayoutEffect.ts","file:///C:/Users/Bruce%20Vo/Documents/project/Streaming_Platform/frontend/node_modules/react-virtuoso/src/loggerSystem.ts","file:///C:/Users/Bruce%20Vo/Documents/project/Streaming_Platform/frontend/node_modules/react-virtuoso/src/hooks/useSize.ts","file:///C:/Users/Bruce%20Vo/Documents/project/Streaming_Platform/frontend/node_modules/react-virtuoso/src/hooks/useChangedChildSizes.ts","file:///C:/Users/Bruce%20Vo/Documents/project/Streaming_Platform/frontend/node_modules/react-virtuoso/src/utils/correctItemSize.ts","file:///C:/Users/Bruce%20Vo/Documents/project/Streaming_Platform/frontend/node_modules/react-virtuoso/src/utils/approximatelyEqual.ts","file:///C:/Users/Bruce%20Vo/Documents/project/Streaming_Platform/frontend/node_modules/react-virtuoso/src/hooks/useScrollTop.ts","file:///C:/Users/Bruce%20Vo/Documents/project/Streaming_Platform/frontend/node_modules/react-virtuoso/src/domIOSystem.ts","file:///C:/Users/Bruce%20Vo/Documents/project/Streaming_Platform/frontend/node_modules/react-virtuoso/src/AATree.ts","file:///C:/Users/Bruce%20Vo/Documents/project/Streaming_Platform/frontend/node_modules/react-virtuoso/src/utils/binaryArraySearch.ts","file:///C:/Users/Bruce%20Vo/Documents/project/Streaming_Platform/frontend/node_modules/react-virtuoso/src/recalcSystem.ts","file:///C:/Users/Bruce%20Vo/Documents/project/Streaming_Platform/frontend/node_modules/react-virtuoso/src/sizeSystem.ts","file:///C:/Users/Bruce%20Vo/Documents/project/Streaming_Platform/frontend/node_modules/react-virtuoso/src/scrollToIndexSystem.ts","file:///C:/Users/Bruce%20Vo/Documents/project/Streaming_Platform/frontend/node_modules/react-virtuoso/src/stateFlagsSystem.ts","file:///C:/Users/Bruce%20Vo/Documents/project/Streaming_Platform/frontend/node_modules/react-virtuoso/src/propsReadySystem.ts","file:///C:/Users/Bruce%20Vo/Documents/project/Streaming_Platform/frontend/node_modules/react-virtuoso/src/initialTopMostItemIndexSystem.ts","file:///C:/Users/Bruce%20Vo/Documents/project/Streaming_Platform/frontend/node_modules/react-virtuoso/src/followOutputSystem.ts","file:///C:/Users/Bruce%20Vo/Documents/project/Streaming_Platform/frontend/node_modules/react-virtuoso/src/groupedListSystem.ts","file:///C:/Users/Bruce%20Vo/Documents/project/Streaming_Platform/frontend/node_modules/react-virtuoso/src/comparators.tsx","file:///C:/Users/Bruce%20Vo/Documents/project/Streaming_Platform/frontend/node_modules/react-virtuoso/src/sizeRangeSystem.ts","file:///C:/Users/Bruce%20Vo/Documents/project/Streaming_Platform/frontend/node_modules/react-virtuoso/src/listStateSystem.ts","file:///C:/Users/Bruce%20Vo/Documents/project/Streaming_Platform/frontend/node_modules/react-virtuoso/src/initialItemCountSystem.ts","file:///C:/Users/Bruce%20Vo/Documents/project/Streaming_Platform/frontend/node_modules/react-virtuoso/src/scrollSeekSystem.ts","file:///C:/Users/Bruce%20Vo/Documents/project/Streaming_Platform/frontend/node_modules/react-virtuoso/src/topItemCountSystem.ts","file:///C:/Users/Bruce%20Vo/Documents/project/Streaming_Platform/frontend/node_modules/react-virtuoso/src/totalListHeightSystem.ts","file:///C:/Users/Bruce%20Vo/Documents/project/Streaming_Platform/frontend/node_modules/react-virtuoso/src/utils/simpleMemoize.ts","file:///C:/Users/Bruce%20Vo/Documents/project/Streaming_Platform/frontend/node_modules/react-virtuoso/src/upwardScrollFixSystem.ts","file:///C:/Users/Bruce%20Vo/Documents/project/Streaming_Platform/frontend/node_modules/react-virtuoso/src/initialScrollTopSystem.ts","file:///C:/Users/Bruce%20Vo/Documents/project/Streaming_Platform/frontend/node_modules/react-virtuoso/src/alignToBottomSystem.ts","file:///C:/Users/Bruce%20Vo/Documents/project/Streaming_Platform/frontend/node_modules/react-virtuoso/src/windowScrollerSystem.ts","file:///C:/Users/Bruce%20Vo/Documents/project/Streaming_Platform/frontend/node_modules/react-virtuoso/src/scrollIntoViewSystem.ts","file:///C:/Users/Bruce%20Vo/Documents/project/Streaming_Platform/frontend/node_modules/react-virtuoso/src/listSystem.ts","file:///C:/Users/Bruce%20Vo/Documents/project/Streaming_Platform/frontend/node_modules/react-virtuoso/src/utils/positionStickyCssValue.ts","file:///C:/Users/Bruce%20Vo/Documents/project/Streaming_Platform/frontend/node_modules/react-virtuoso/src/hooks/useWindowViewportRect.ts","file:///C:/Users/Bruce%20Vo/Documents/project/Streaming_Platform/frontend/node_modules/react-virtuoso/src/utils/context.ts","file:///C:/Users/Bruce%20Vo/Documents/project/Streaming_Platform/frontend/node_modules/react-virtuoso/src/List.tsx","file:///C:/Users/Bruce%20Vo/Documents/project/Streaming_Platform/frontend/node_modules/react-virtuoso/src/gridSystem.ts","file:///C:/Users/Bruce%20Vo/Documents/project/Streaming_Platform/frontend/node_modules/react-virtuoso/src/Grid.tsx","file:///C:/Users/Bruce%20Vo/Documents/project/Streaming_Platform/frontend/node_modules/react-virtuoso/src/Table.tsx","file:///C:/Users/Bruce%20Vo/Documents/project/Streaming_Platform/frontend/node_modules/react-virtuoso/src/components.tsx"],"sourcesContent":["import { useEffect, useLayoutEffect } from 'react'\n\nconst useIsomorphicLayoutEffect = typeof document !== 'undefined' ? useLayoutEffect : useEffect\n\nexport default useIsomorphicLayoutEffect\n","import * as u from '@virtuoso.dev/urx'\n\n// eslint-disable-next-line @typescript-eslint/no-namespace\ndeclare namespace globalThis {\n  let VIRTUOSO_LOG_LEVEL: LogLevel | undefined\n}\n\n// eslint-disable-next-line @typescript-eslint/no-namespace\ndeclare namespace window {\n  let VIRTUOSO_LOG_LEVEL: LogLevel | undefined\n}\n\nexport enum LogLevel {\n  DEBUG,\n  INFO,\n  WARN,\n  ERROR,\n}\nexport interface LogMessage {\n  level: LogLevel\n  message: any\n  label: string\n}\n\nexport type Log = (label: string, message: any, level?: LogLevel) => void\n\nconst CONSOLE_METHOD_MAP = {\n  [LogLevel.DEBUG]: 'debug',\n  [LogLevel.INFO]: 'log',\n  [LogLevel.WARN]: 'warn',\n  [LogLevel.ERROR]: 'error',\n} as const\n\nconst getGlobalThis = () => (typeof globalThis === 'undefined' ? window : globalThis)\n\nexport const loggerSystem = u.system(\n  () => {\n    const logLevel = u.statefulStream<LogLevel>(LogLevel.ERROR)\n    const log = u.statefulStream<Log>((label: string, message: any, level: LogLevel = LogLevel.INFO) => {\n      const currentLevel = getGlobalThis()['VIRTUOSO_LOG_LEVEL'] ?? u.getValue(logLevel)\n      if (level >= currentLevel) {\n        // eslint-disable-next-line no-console\n        console[CONSOLE_METHOD_MAP[level]](\n          '%creact-virtuoso: %c%s %o',\n          'color: #0253b3; font-weight: bold',\n          'color: initial',\n          label,\n          message\n        )\n      }\n    })\n\n    return {\n      log,\n      logLevel,\n    }\n  },\n  [],\n  { singleton: true }\n)\n","import { useRef } from 'react'\n\nexport type CallbackRefParam = HTMLElement | null\n\nexport function useSizeWithElRef(callback: (e: HTMLElement) => void, enabled = true) {\n  const ref = useRef<CallbackRefParam>(null)\n\n  let callbackRef = (_el: CallbackRefParam) => {\n    void 0\n  }\n\n  if (typeof ResizeObserver !== 'undefined') {\n    const observer = new ResizeObserver((entries: ResizeObserverEntry[]) => {\n      const element = entries[0].target as HTMLElement\n      if (element.offsetParent !== null) {\n        callback(element)\n      }\n    })\n\n    callbackRef = (elRef: CallbackRefParam) => {\n      if (elRef && enabled) {\n        observer.observe(elRef)\n        ref.current = elRef\n      } else {\n        if (ref.current) {\n          observer.unobserve(ref.current)\n        }\n        ref.current = null\n      }\n    }\n  }\n\n  return { ref, callbackRef }\n}\n\nexport default function useSize(callback: (e: HTMLElement) => void, enabled = true) {\n  return useSizeWithElRef(callback, enabled).callbackRef\n}\n","import { Log, LogLevel } from '../loggerSystem'\nimport { SizeRange } from '../sizeSystem'\nimport { useSizeWithElRef } from './useSize'\nimport { SizeFunction, ScrollContainerState } from '../interfaces'\nexport default function useChangedListContentsSizes(\n  callback: (ranges: SizeRange[]) => void,\n  itemSize: SizeFunction,\n  enabled: boolean,\n  scrollContainerStateCallback: (state: ScrollContainerState) => void,\n  log: Log,\n  gap?: (gap: number) => void,\n  customScrollParent?: HTMLElement\n) {\n  return useSizeWithElRef((el: HTMLElement) => {\n    const ranges = getChangedChildSizes(el.children, itemSize, 'offsetHeight', log)\n    let scrollableElement = el.parentElement!\n\n    while (!scrollableElement.dataset['virtuosoScroller']) {\n      scrollableElement = scrollableElement.parentElement!\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    const windowScrolling = (scrollableElement.firstElementChild! as HTMLDivElement).dataset['viewportType']! === 'window'\n\n    const scrollTop = customScrollParent\n      ? customScrollParent.scrollTop\n      : windowScrolling\n      ? window.pageYOffset || document.documentElement.scrollTop\n      : scrollableElement.scrollTop\n\n    const scrollHeight = customScrollParent\n      ? customScrollParent.scrollHeight\n      : windowScrolling\n      ? document.documentElement.scrollHeight\n      : scrollableElement.scrollHeight\n\n    const viewportHeight = customScrollParent\n      ? customScrollParent.offsetHeight\n      : windowScrolling\n      ? window.innerHeight\n      : scrollableElement.offsetHeight\n\n    scrollContainerStateCallback({\n      scrollTop: Math.max(scrollTop, 0),\n      scrollHeight,\n      viewportHeight,\n    })\n\n    gap?.(resolveGapValue('row-gap', getComputedStyle(el).rowGap, log))\n\n    if (ranges !== null) {\n      callback(ranges)\n    }\n  }, enabled)\n}\n\nfunction getChangedChildSizes(children: HTMLCollection, itemSize: SizeFunction, field: 'offsetHeight' | 'offsetWidth', log: Log) {\n  const length = children.length\n\n  if (length === 0) {\n    return null\n  }\n\n  const results: SizeRange[] = []\n\n  for (let i = 0; i < length; i++) {\n    const child = children.item(i) as HTMLElement\n\n    if (!child || child.dataset.index === undefined) {\n      continue\n    }\n\n    const index = parseInt(child.dataset.index!)\n    const knownSize = parseFloat(child.dataset.knownSize!)\n    const size = itemSize(child, field)\n\n    if (size === 0) {\n      log('Zero-sized element, this should not happen', { child }, LogLevel.ERROR)\n    }\n\n    if (size === knownSize) {\n      continue\n    }\n\n    const lastResult = results[results.length - 1]\n    if (results.length === 0 || lastResult.size !== size || lastResult.endIndex !== index - 1) {\n      results.push({ startIndex: index, endIndex: index, size })\n    } else {\n      results[results.length - 1].endIndex++\n    }\n  }\n\n  return results\n}\n\nfunction resolveGapValue(property: string, value: string | undefined, log: Log) {\n  if (value !== 'normal' && !value?.endsWith('px')) {\n    log(`${property} was not resolved to pixel value correctly`, value, LogLevel.WARN)\n  }\n  if (value === 'normal') {\n    return 0\n  }\n  return parseInt(value ?? '0', 10)\n}\n","export function correctItemSize(el: HTMLElement, dimension: 'height' | 'width') {\n  return Math.round(el.getBoundingClientRect()[dimension])\n}\n","export function approximatelyEqual(num1: number, num2: number) {\n  return Math.abs(num1 - num2) < 1.01\n}\n","import { useRef, useCallback, useEffect } from 'react'\nimport * as u from '@virtuoso.dev/urx'\nimport { correctItemSize } from '../utils/correctItemSize'\nimport { ScrollContainerState } from '../interfaces'\nimport { flushSync } from 'react-dom'\nimport { approximatelyEqual } from '../utils/approximatelyEqual'\n\nexport type ScrollerRef = Window | HTMLElement | null\n\nexport default function useScrollTop(\n  scrollContainerStateCallback: (state: ScrollContainerState) => void,\n  smoothScrollTargetReached: (yes: true) => void,\n  scrollerElement: any,\n  scrollerRefCallback: (ref: ScrollerRef) => void = u.noop,\n  customScrollParent?: HTMLElement\n) {\n  const scrollerRef = useRef<HTMLElement | null | Window>(null)\n  const scrollTopTarget = useRef<any>(null)\n  const timeoutRef = useRef<ReturnType<typeof setTimeout> | null>(null)\n  const shouldFlushSync = useRef(false)\n\n  const handler = useCallback(\n    (ev: Event) => {\n      const el = ev.target as HTMLElement\n      const windowScroll = (el as any) === window || (el as any) === document\n      const scrollTop = windowScroll ? window.pageYOffset || document.documentElement.scrollTop : el.scrollTop\n      const scrollHeight = windowScroll ? document.documentElement.scrollHeight : el.scrollHeight\n      const viewportHeight = windowScroll ? window.innerHeight : el.offsetHeight\n\n      const call = () => {\n        scrollContainerStateCallback({\n          scrollTop: Math.max(scrollTop, 0),\n          scrollHeight,\n          viewportHeight,\n        })\n      }\n\n      if (shouldFlushSync.current) {\n        flushSync(call)\n      } else {\n        call()\n      }\n      shouldFlushSync.current = false\n\n      if (scrollTopTarget.current !== null) {\n        if (scrollTop === scrollTopTarget.current || scrollTop <= 0 || scrollTop === scrollHeight - viewportHeight) {\n          scrollTopTarget.current = null\n          smoothScrollTargetReached(true)\n          if (timeoutRef.current) {\n            clearTimeout(timeoutRef.current)\n            timeoutRef.current = null\n          }\n        }\n      }\n    },\n    [scrollContainerStateCallback, smoothScrollTargetReached]\n  )\n\n  useEffect(() => {\n    const localRef = customScrollParent ? customScrollParent : scrollerRef.current!\n\n    scrollerRefCallback(customScrollParent ? customScrollParent : scrollerRef.current)\n    handler({ target: localRef } as unknown as Event)\n    localRef.addEventListener('scroll', handler, { passive: true })\n\n    return () => {\n      scrollerRefCallback(null)\n      localRef.removeEventListener('scroll', handler)\n    }\n  }, [scrollerRef, handler, scrollerElement, scrollerRefCallback, customScrollParent])\n\n  function scrollToCallback(location: ScrollToOptions) {\n    const scrollerElement = scrollerRef.current\n    if (!scrollerElement || ('offsetHeight' in scrollerElement && scrollerElement.offsetHeight === 0)) {\n      return\n    }\n\n    const isSmooth = location.behavior === 'smooth'\n\n    let offsetHeight: number\n    let scrollHeight: number\n    let scrollTop: number\n\n    if (scrollerElement === window) {\n      // this is not a mistake\n      scrollHeight = Math.max(correctItemSize(document.documentElement, 'height'), document.documentElement.scrollHeight)\n      offsetHeight = window.innerHeight\n      scrollTop = document.documentElement.scrollTop\n    } else {\n      scrollHeight = (scrollerElement as HTMLElement).scrollHeight\n      offsetHeight = correctItemSize(scrollerElement as HTMLElement, 'height')\n      scrollTop = (scrollerElement as HTMLElement).scrollTop\n    }\n\n    const maxScrollTop = scrollHeight - offsetHeight\n    location.top = Math.ceil(Math.max(Math.min(maxScrollTop, location.top!), 0))\n\n    // avoid system hanging because the DOM never called back\n    // with the scrollTop\n    // scroller is already at this location\n    if (approximatelyEqual(offsetHeight, scrollHeight) || location.top === scrollTop) {\n      scrollContainerStateCallback({ scrollTop, scrollHeight, viewportHeight: offsetHeight })\n      if (isSmooth) {\n        smoothScrollTargetReached(true)\n      }\n      return\n    }\n\n    if (isSmooth) {\n      scrollTopTarget.current = location.top\n      if (timeoutRef.current) {\n        clearTimeout(timeoutRef.current)\n      }\n\n      timeoutRef.current = setTimeout(() => {\n        timeoutRef.current = null\n        scrollTopTarget.current = null\n        smoothScrollTargetReached(true)\n      }, 1000)\n    } else {\n      scrollTopTarget.current = null\n    }\n\n    scrollerElement.scrollTo(location)\n  }\n\n  function scrollByCallback(location: ScrollToOptions) {\n    shouldFlushSync.current = true\n    scrollerRef.current!.scrollBy(location)\n  }\n\n  return { scrollerRef, scrollByCallback, scrollToCallback }\n}\n","import * as u from '@virtuoso.dev/urx'\nimport { ScrollContainerState } from './interfaces'\n\nexport const domIOSystem = u.system(\n  () => {\n    const scrollContainerState = u.stream<ScrollContainerState>()\n    const scrollTop = u.stream<number>()\n    const deviation = u.statefulStream(0)\n    const smoothScrollTargetReached = u.stream<true>()\n    const statefulScrollTop = u.statefulStream(0)\n    const viewportHeight = u.stream<number>()\n    const scrollHeight = u.stream<number>()\n    const headerHeight = u.statefulStream(0)\n    const fixedHeaderHeight = u.statefulStream(0)\n    const fixedFooterHeight = u.statefulStream(0)\n    const footerHeight = u.statefulStream(0)\n    const scrollTo = u.stream<ScrollToOptions>()\n    const scrollBy = u.stream<ScrollToOptions>()\n    const scrollingInProgress = u.statefulStream(false)\n    // bogus, has no effect\n    const react18ConcurrentRendering = u.statefulStream(false)\n\n    u.connect(\n      u.pipe(\n        scrollContainerState,\n        u.map(({ scrollTop }) => scrollTop)\n      ),\n      scrollTop\n    )\n\n    u.connect(\n      u.pipe(\n        scrollContainerState,\n        u.map(({ scrollHeight }) => scrollHeight)\n      ),\n      scrollHeight\n    )\n\n    u.connect(scrollTop, statefulScrollTop)\n\n    return {\n      // input\n      scrollContainerState,\n      scrollTop,\n      viewportHeight,\n      headerHeight,\n      fixedHeaderHeight,\n      fixedFooterHeight,\n      footerHeight,\n      scrollHeight,\n      smoothScrollTargetReached,\n      react18ConcurrentRendering,\n\n      // signals\n      scrollTo,\n      scrollBy,\n\n      // state\n      statefulScrollTop,\n      deviation,\n      scrollingInProgress,\n    }\n  },\n  [],\n  { singleton: true }\n)\n","interface NilNode {\n  lvl: 0\n}\n\nconst NIL_NODE: NilNode = { lvl: 0 }\n\ninterface NodeData<T> {\n  k: number\n  v: T\n}\n\ninterface NonNilAANode<T> {\n  k: number\n  v: T\n  lvl: number\n  l: NonNilAANode<T> | NilNode\n  r: NonNilAANode<T> | NilNode\n}\n\nexport interface Range<T> {\n  start: number\n  end: number\n  value: T\n}\n\nexport type AANode<T> = NilNode | NonNilAANode<T>\n\nfunction newAANode<T>(k: number, v: T, lvl: number, l: AANode<T> = NIL_NODE, r: AANode<T> = NIL_NODE): NonNilAANode<T> {\n  return { k, v, lvl, l, r }\n}\n\nexport function empty(node: AANode<any>): node is NilNode {\n  return node === NIL_NODE\n}\n\nexport function newTree<T>(): AANode<T> {\n  return NIL_NODE\n}\n\nexport function remove<T>(node: AANode<T>, key: number): AANode<T> {\n  if (empty(node)) return NIL_NODE\n\n  const { k, l, r } = node\n\n  if (key === k) {\n    if (empty(l)) {\n      return r\n    } else if (empty(r)) {\n      return l\n    } else {\n      const [lastKey, lastValue] = last(l)\n      return adjust(clone(node, { k: lastKey, v: lastValue, l: deleteLast(l) }))\n    }\n  } else if (key < k) {\n    return adjust(clone(node, { l: remove(l, key) }))\n  } else {\n    return adjust(clone(node, { r: remove(r, key) }))\n  }\n}\n\nexport function find<T>(node: AANode<T>, key: number): T | undefined {\n  if (empty(node)) {\n    return\n  }\n\n  if (key === node.k) {\n    return node.v\n  } else if (key < node.k) {\n    return find(node.l, key)\n  } else {\n    return find(node.r, key)\n  }\n}\n\nexport function findMaxKeyValue<T>(node: AANode<T>, value: number, field: 'k' | 'v' = 'k'): [number, T | undefined] {\n  if (empty(node)) {\n    return [-Infinity, undefined]\n  }\n\n  if (node[field] === value) {\n    return [node.k, node.v]\n  }\n\n  if (node[field] < value) {\n    const r = findMaxKeyValue(node.r, value, field)\n    if (r[0] === -Infinity) {\n      return [node.k, node.v]\n    } else {\n      return r\n    }\n  }\n\n  return findMaxKeyValue(node.l, value, field)\n}\n\nexport function insert<T>(node: AANode<T>, k: number, v: T): NonNilAANode<T> {\n  if (empty(node)) {\n    return newAANode(k, v, 1)\n  }\n  if (k === node.k) {\n    return clone(node, { k, v })\n  } else if (k < node.k) {\n    return rebalance(clone(node, { l: insert(node.l, k, v) }))\n  } else {\n    return rebalance(clone(node, { r: insert(node.r, k, v) }))\n  }\n}\n\nexport function walkWithin<T>(node: AANode<T>, start: number, end: number): NodeData<T>[] {\n  if (empty(node)) {\n    return []\n  }\n\n  const { k, v, l, r } = node\n  let result: NodeData<T>[] = []\n  if (k > start) {\n    result = result.concat(walkWithin(l, start, end))\n  }\n\n  if (k >= start && k <= end) {\n    result.push({ k, v })\n  }\n\n  if (k <= end) {\n    result = result.concat(walkWithin(r, start, end))\n  }\n\n  return result\n}\n\nexport function walk<T>(node: AANode<T>): NodeData<T>[] {\n  if (empty(node)) {\n    return []\n  }\n\n  return [...walk(node.l), { k: node.k, v: node.v }, ...walk(node.r)]\n}\n\nfunction last<T>(node: NonNilAANode<T>): [number, T] {\n  return empty(node.r) ? [node.k, node.v] : last(node.r)\n}\n\nfunction deleteLast<T>(node: NonNilAANode<T>): AANode<T> {\n  return empty(node.r) ? node.l : adjust(clone(node, { r: deleteLast(node.r) }))\n}\n\nfunction clone<T>(node: NonNilAANode<T>, args: Partial<NonNilAANode<T>>): NonNilAANode<T> {\n  return newAANode(\n    args.k !== undefined ? args.k : node.k,\n    args.v !== undefined ? args.v : node.v,\n    args.lvl !== undefined ? args.lvl : node.lvl,\n    args.l !== undefined ? args.l : node.l,\n    args.r !== undefined ? args.r : node.r\n  )\n}\n\nfunction isSingle(node: AANode<any>) {\n  return empty(node) || node.lvl > node.r.lvl\n}\n\nfunction rebalance<T>(node: NonNilAANode<T>): NonNilAANode<T> {\n  return split(skew(node))\n}\n\nfunction adjust<T>(node: NonNilAANode<T>): NonNilAANode<T> {\n  const { l, r, lvl } = node\n  if (r.lvl >= lvl - 1 && l.lvl >= lvl - 1) {\n    return node\n  } else if (lvl > r.lvl + 1) {\n    if (isSingle(l)) {\n      return skew(clone(node, { lvl: lvl - 1 }))\n    } else {\n      if (!empty(l) && !empty(l.r)) {\n        return clone(l.r, {\n          l: clone(l, { r: l.r.l }),\n          r: clone(node, {\n            l: l.r.r,\n            lvl: lvl - 1,\n          }),\n          lvl: lvl,\n        })\n      } else {\n        throw new Error('Unexpected empty nodes')\n      }\n    }\n  } else {\n    if (isSingle(node)) {\n      return split(clone(node, { lvl: lvl - 1 }))\n    } else {\n      if (!empty(r) && !empty(r.l)) {\n        const rl = r.l\n        const rlvl = isSingle(rl) ? r.lvl - 1 : r.lvl\n\n        return clone(rl, {\n          l: clone(node, {\n            r: rl.l,\n            lvl: lvl - 1,\n          }),\n          r: split(clone(r, { l: rl.r, lvl: rlvl })),\n          lvl: rl.lvl + 1,\n        })\n      } else {\n        throw new Error('Unexpected empty nodes')\n      }\n    }\n  }\n}\n\nexport function keys(node: AANode<any>): number[] {\n  if (empty(node)) {\n    return []\n  }\n  return [...keys(node.l), node.k, ...keys(node.r)]\n}\n\nexport function ranges<T>(node: AANode<T>): Range<T>[] {\n  return toRanges(walk(node))\n}\n\nexport function rangesWithin<T>(node: AANode<T>, startIndex: number, endIndex: number): Range<T>[] {\n  if (empty(node)) {\n    return []\n  }\n  const adjustedStart = findMaxKeyValue(node, startIndex)[0]\n  return toRanges(walkWithin(node, adjustedStart, endIndex))\n}\n\nexport function arrayToRanges<T, V>(\n  items: T[],\n  parser: (item: T) => { index: number; value: V }\n): Array<{ start: number; end: number; value: V }> {\n  const length = items.length\n  if (length === 0) {\n    return []\n  }\n\n  let { index: start, value } = parser(items[0])\n\n  const result = []\n\n  for (let i = 1; i < length; i++) {\n    const { index: nextIndex, value: nextValue } = parser(items[i])\n    result.push({ start, end: nextIndex - 1, value })\n\n    start = nextIndex\n    value = nextValue\n  }\n\n  result.push({ start, end: Infinity, value })\n  return result\n}\n\nfunction toRanges<T>(nodes: NodeData<T>[]): Range<T>[] {\n  return arrayToRanges(nodes, ({ k: index, v: value }) => ({ index, value }))\n}\n\nfunction split<T>(node: NonNilAANode<T>): NonNilAANode<T> {\n  const { r, lvl } = node\n\n  return !empty(r) && !empty(r.r) && r.lvl === lvl && r.r.lvl === lvl ? clone(r, { l: clone(node, { r: r.l }), lvl: lvl + 1 }) : node\n}\n\nfunction skew<T>(node: NonNilAANode<T>): NonNilAANode<T> {\n  const { l } = node\n\n  return !empty(l) && l.lvl === node.lvl ? clone(l, { r: clone(node, { l: l.r }) }) : node\n}\n","export type Comparator<T> = {\n  (item: T, value: number): -1 | 0 | 1\n}\n\nexport function findIndexOfClosestSmallerOrEqual<T>(items: T[], value: number, comparator: Comparator<T>, start = 0): number {\n  let end = items.length - 1\n\n  while (start <= end) {\n    const index = Math.floor((start + end) / 2)\n    const item = items[index]\n    const match = comparator(item, value)\n    if (match === 0) {\n      return index\n    }\n\n    if (match === -1) {\n      if (end - start < 2) {\n        return index - 1\n      }\n      end = index - 1\n    } else {\n      if (end === start) {\n        return index\n      }\n      start = index + 1\n    }\n  }\n\n  throw new Error(`Failed binary finding record in array - ${items.join(',')}, searched for ${value}`)\n}\n\nexport function findClosestSmallerOrEqual<T>(items: T[], value: number, comparator: Comparator<T>): T {\n  return items[findIndexOfClosestSmallerOrEqual(items, value, comparator)]\n}\n\nexport function findRange<T>(items: T[], startValue: number, endValue: number, comparator: Comparator<T>): T[] {\n  const startIndex = findIndexOfClosestSmallerOrEqual(items, startValue, comparator)\n  const endIndex = findIndexOfClosestSmallerOrEqual(items, endValue, comparator, startIndex)\n  return items.slice(startIndex, endIndex + 1)\n}\n","import * as u from '@virtuoso.dev/urx'\n\nexport const recalcSystem = u.system(\n  () => {\n    const recalcInProgress = u.statefulStream(false)\n    return { recalcInProgress }\n  },\n  [],\n  { singleton: true }\n)\n","import * as u from '@virtuoso.dev/urx'\nimport { arrayToRanges, AANode, empty, findMaxKeyValue, insert, newTree, Range, rangesWithin, remove, walk } from './AATree'\nimport * as arrayBinarySearch from './utils/binaryArraySearch'\nimport { correctItemSize } from './utils/correctItemSize'\nimport { loggerSystem, Log, LogLevel } from './loggerSystem'\nimport { recalcSystem } from './recalcSystem'\nimport { SizeFunction } from './interfaces'\n\nexport interface SizeRange {\n  startIndex: number\n  endIndex: number\n  size: number\n}\n\nexport type Data = readonly unknown[] | undefined\n\nfunction rangeIncludes(refRange: SizeRange) {\n  const { size, startIndex, endIndex } = refRange\n  return (range: Range<number>) => {\n    return range.start === startIndex && (range.end === endIndex || range.end === Infinity) && range.value === size\n  }\n}\n\nexport function insertRanges(sizeTree: AANode<number>, ranges: SizeRange[]) {\n  let syncStart = empty(sizeTree) ? 0 : Infinity\n\n  for (const range of ranges) {\n    const { size, startIndex, endIndex } = range\n    syncStart = Math.min(syncStart, startIndex)\n\n    if (empty(sizeTree)) {\n      sizeTree = insert(sizeTree, 0, size)\n      continue\n    }\n\n    // extend the range in both directions, so that we can get adjacent neighbours.\n    // if the previous / next ones have the same value as the one we are about to insert,\n    // we 'merge' them.\n    const overlappingRanges = rangesWithin(sizeTree, startIndex - 1, endIndex + 1)\n\n    if (overlappingRanges.some(rangeIncludes(range))) {\n      continue\n    }\n\n    let firstPassDone = false\n    let shouldInsert = false\n    for (const { start: rangeStart, end: rangeEnd, value: rangeValue } of overlappingRanges) {\n      // previous range\n      if (!firstPassDone) {\n        shouldInsert = rangeValue !== size\n        firstPassDone = true\n      } else {\n        // remove the range if it starts within the new range OR if\n        // it has the same value as it, in order to perform a merge\n        if (endIndex >= rangeStart || size === rangeValue) {\n          sizeTree = remove(sizeTree, rangeStart)\n        }\n      }\n\n      // next range\n      if (rangeEnd > endIndex && endIndex >= rangeStart) {\n        if (rangeValue !== size) {\n          sizeTree = insert(sizeTree, endIndex + 1, rangeValue)\n        }\n      }\n    }\n\n    if (shouldInsert) {\n      sizeTree = insert(sizeTree, startIndex, size)\n    }\n  }\n  return [sizeTree, syncStart] as const\n}\n\nexport interface OffsetPoint {\n  offset: number\n  size: number\n  index: number\n}\n\nexport interface SizeState {\n  sizeTree: AANode<number>\n  offsetTree: Array<OffsetPoint>\n  groupOffsetTree: AANode<number>\n  lastIndex: number\n  lastOffset: number\n  lastSize: number\n  groupIndices: number[]\n}\n\nexport function initialSizeState(): SizeState {\n  return {\n    offsetTree: [],\n    sizeTree: newTree<number>(),\n    groupOffsetTree: newTree<number>(),\n    lastIndex: 0,\n    lastOffset: 0,\n    lastSize: 0,\n    groupIndices: [],\n  }\n}\n\nexport function indexComparator({ index: itemIndex }: OffsetPoint, index: number) {\n  return index === itemIndex ? 0 : index < itemIndex ? -1 : 1\n}\n\nexport function offsetComparator({ offset: itemOffset }: OffsetPoint, offset: number) {\n  return offset === itemOffset ? 0 : offset < itemOffset ? -1 : 1\n}\n\nfunction offsetPointParser(point: OffsetPoint) {\n  return { index: point.index, value: point }\n}\n\nexport function rangesWithinOffsets(\n  tree: Array<OffsetPoint>,\n  startOffset: number,\n  endOffset: number,\n  minStartIndex = 0\n): Array<{\n  start: number\n  end: number\n  value: {\n    size: number\n    offset: number\n    index: number\n  }\n}> {\n  if (minStartIndex > 0) {\n    startOffset = Math.max(startOffset, arrayBinarySearch.findClosestSmallerOrEqual(tree, minStartIndex, indexComparator).offset)\n  }\n\n  return arrayToRanges(arrayBinarySearch.findRange(tree, startOffset, endOffset, offsetComparator), offsetPointParser)\n}\n\nfunction createOffsetTree(prevOffsetTree: OffsetPoint[], syncStart: number, sizeTree: AANode<number>, gap: number) {\n  let offsetTree = prevOffsetTree\n  let prevIndex = 0\n  let prevSize = 0\n\n  let prevOffset = 0\n  let startIndex = 0\n\n  if (syncStart !== 0) {\n    startIndex = arrayBinarySearch.findIndexOfClosestSmallerOrEqual(offsetTree, syncStart - 1, indexComparator)\n    const offsetInfo = offsetTree[startIndex]\n    prevOffset = offsetInfo.offset\n    const kv = findMaxKeyValue(sizeTree, syncStart - 1)\n    prevIndex = kv[0]\n    prevSize = kv[1]!\n\n    if (offsetTree.length && offsetTree[startIndex].size === findMaxKeyValue(sizeTree, syncStart)[1]) {\n      startIndex -= 1\n    }\n\n    offsetTree = offsetTree.slice(0, startIndex + 1)\n  } else {\n    offsetTree = []\n  }\n\n  for (const { start: startIndex, value } of rangesWithin(sizeTree, syncStart, Infinity)) {\n    const indexOffset = startIndex - prevIndex\n    const aOffset = indexOffset * prevSize + prevOffset + indexOffset * gap\n    offsetTree.push({\n      offset: aOffset,\n      size: value,\n      index: startIndex,\n    })\n    prevIndex = startIndex\n    prevOffset = aOffset\n    prevSize = value\n  }\n\n  return {\n    offsetTree,\n    lastIndex: prevIndex,\n    lastOffset: prevOffset,\n    lastSize: prevSize,\n  }\n}\n\nexport function sizeStateReducer(state: SizeState, [ranges, groupIndices, log, gap]: [SizeRange[], number[], Log, number]) {\n  if (ranges.length > 0) {\n    log('received item sizes', ranges, LogLevel.DEBUG)\n  }\n  const sizeTree = state.sizeTree\n  let newSizeTree: AANode<number> = sizeTree\n  let syncStart = 0\n\n  // We receive probe item results from a group probe,\n  // which should always pass an item and a group\n  // the results contain two ranges, which we consider to mean that groups and items have different size\n  if (groupIndices.length > 0 && empty(sizeTree) && ranges.length === 2) {\n    const groupSize = ranges[0].size\n    const itemSize = ranges[1].size\n    newSizeTree = groupIndices.reduce((tree, groupIndex) => {\n      return insert(insert(tree, groupIndex, groupSize), groupIndex + 1, itemSize)\n    }, newSizeTree)\n  } else {\n    ;[newSizeTree, syncStart] = insertRanges(newSizeTree, ranges)\n  }\n\n  if (newSizeTree === sizeTree) {\n    return state\n  }\n\n  const { offsetTree: newOffsetTree, lastIndex, lastSize, lastOffset } = createOffsetTree(state.offsetTree, syncStart, newSizeTree, gap)\n\n  return {\n    sizeTree: newSizeTree,\n    offsetTree: newOffsetTree,\n    lastIndex,\n    lastOffset,\n    lastSize,\n    groupOffsetTree: groupIndices.reduce((tree, index) => {\n      return insert(tree, index, offsetOf(index, newOffsetTree, gap))\n    }, newTree<number>()),\n    groupIndices,\n  }\n}\n\nexport function offsetOf(index: number, tree: Array<OffsetPoint>, gap: number) {\n  if (tree.length === 0) {\n    return 0\n  }\n\n  const { offset, index: startIndex, size } = arrayBinarySearch.findClosestSmallerOrEqual(tree, index, indexComparator)\n  const itemCount = index - startIndex\n  const top = size * itemCount + (itemCount - 1) * gap + offset\n  return top > 0 ? top + gap : top\n}\n\nexport type FlatOrGroupedLocation = { index: number | 'LAST' } | { groupIndex: number }\n\nexport function isGroupLocation(location: FlatOrGroupedLocation): location is { groupIndex: number } {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return typeof (location as any).groupIndex !== 'undefined'\n}\n\nexport function originalIndexFromLocation(location: FlatOrGroupedLocation, sizes: SizeState, lastIndex: number) {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  if (isGroupLocation(location)) {\n    // return the index of the first item below the index\n    return sizes.groupIndices[location.groupIndex] + 1\n  } else {\n    const numericIndex = location.index === 'LAST' ? lastIndex : location.index\n    let result = originalIndexFromItemIndex(numericIndex, sizes)\n    result = Math.max(0, result, Math.min(lastIndex, result))\n    return result\n  }\n}\n\nexport function originalIndexFromItemIndex(itemIndex: number, sizes: SizeState) {\n  if (!hasGroups(sizes)) {\n    return itemIndex\n  }\n\n  let groupOffset = 0\n  while (sizes.groupIndices[groupOffset] <= itemIndex + groupOffset) {\n    groupOffset++\n  }\n  // we find the real item index, offsetting it by the number of group items before it\n  return itemIndex + groupOffset\n}\n\nexport function hasGroups(sizes: SizeState) {\n  return !empty(sizes.groupOffsetTree)\n}\n\ntype OptionalNumber = number | undefined\n\nconst SIZE_MAP = {\n  offsetHeight: 'height',\n  offsetWidth: 'width',\n} as const\n\nexport const sizeSystem = u.system(\n  ([{ log }, { recalcInProgress }]) => {\n    const sizeRanges = u.stream<SizeRange[]>()\n    const totalCount = u.stream<number>()\n    const statefulTotalCount = u.statefulStreamFromEmitter(totalCount, 0)\n    const unshiftWith = u.stream<number>()\n    const shiftWith = u.stream<number>()\n    const firstItemIndex = u.statefulStream(0)\n    const groupIndices = u.statefulStream([] as number[])\n    const fixedItemSize = u.statefulStream<OptionalNumber>(undefined)\n    const defaultItemSize = u.statefulStream<OptionalNumber>(undefined)\n    const itemSize = u.statefulStream<SizeFunction>((el, field) => correctItemSize(el, SIZE_MAP[field]))\n    const data = u.statefulStream<Data>(undefined)\n    const gap = u.statefulStream(0)\n    const initial = initialSizeState()\n\n    const sizes = u.statefulStreamFromEmitter(\n      u.pipe(sizeRanges, u.withLatestFrom(groupIndices, log, gap), u.scan(sizeStateReducer, initial), u.distinctUntilChanged()),\n      initial\n    )\n\n    u.connect(\n      u.pipe(\n        groupIndices,\n        u.filter((indexes) => indexes.length > 0),\n        u.withLatestFrom(sizes, gap),\n        u.map(([groupIndices, sizes, gap]) => {\n          const groupOffsetTree = groupIndices.reduce((tree, index, idx) => {\n            return insert(tree, index, offsetOf(index, sizes.offsetTree, gap) || idx)\n          }, newTree<number>())\n\n          return {\n            ...sizes,\n            groupIndices,\n            groupOffsetTree,\n          }\n        })\n      ),\n      sizes\n    )\n\n    // decreasing the total count should remove any existing entries\n    // beyond the last index - do this by publishing the default size as a range over them.\n    u.connect(\n      u.pipe(\n        totalCount,\n        u.withLatestFrom(sizes),\n        u.filter(([totalCount, { lastIndex }]) => {\n          return totalCount < lastIndex\n        }),\n        u.map(([totalCount, { lastIndex, lastSize }]) => {\n          return [\n            {\n              startIndex: totalCount,\n              endIndex: lastIndex,\n              size: lastSize,\n            },\n          ] as SizeRange[]\n        })\n      ),\n      sizeRanges\n    )\n\n    u.connect(fixedItemSize, defaultItemSize)\n\n    const trackItemSizes = u.statefulStreamFromEmitter(\n      u.pipe(\n        fixedItemSize,\n        u.map((size) => size === undefined)\n      ),\n      true\n    )\n\n    u.connect(\n      u.pipe(\n        defaultItemSize,\n        u.filter((value) => {\n          return value !== undefined && empty(u.getValue(sizes).sizeTree)\n        }),\n        u.map((size) => [{ startIndex: 0, endIndex: 0, size }] as SizeRange[])\n      ),\n      sizeRanges\n    )\n\n    const listRefresh = u.streamFromEmitter(\n      u.pipe(\n        sizeRanges,\n        u.withLatestFrom(sizes),\n        u.scan(\n          ({ sizes: oldSizes }, [_, newSizes]) => {\n            return {\n              changed: newSizes !== oldSizes,\n              sizes: newSizes,\n            }\n          },\n          { changed: false, sizes: initial }\n        ),\n        u.map((value) => value.changed)\n      )\n    )\n\n    u.subscribe(\n      u.pipe(\n        firstItemIndex,\n        u.scan(\n          (prev, next) => {\n            return { diff: prev.prev - next, prev: next }\n          },\n          { diff: 0, prev: 0 }\n        ),\n        u.map((val) => val.diff)\n      ),\n      (offset) => {\n        if (offset > 0) {\n          u.publish(recalcInProgress, true)\n          u.publish(unshiftWith, offset)\n        } else if (offset < 0) {\n          u.publish(shiftWith, offset)\n        }\n      }\n    )\n\n    u.subscribe(u.pipe(firstItemIndex, u.withLatestFrom(log)), ([index, log]) => {\n      if (index < 0) {\n        log(\n          \"`firstItemIndex` prop should not be set to less than zero. If you don't know the total count, just use a very high value\",\n          { firstItemIndex },\n          LogLevel.ERROR\n        )\n      }\n    })\n\n    // Capture the current list top item before the sizes get refreshed\n    const beforeUnshiftWith = u.streamFromEmitter(unshiftWith)\n\n    u.connect(\n      u.pipe(\n        unshiftWith,\n        u.withLatestFrom(sizes),\n        u.map(([unshiftWith, sizes]) => {\n          if (sizes.groupIndices.length > 0) {\n            throw new Error('Virtuoso: prepending items does not work with groups')\n          }\n\n          return walk(sizes.sizeTree).reduce(\n            (acc, { k: index, v: size }) => {\n              return {\n                ranges: [...acc.ranges, { startIndex: acc.prevIndex, endIndex: index + unshiftWith - 1, size: acc.prevSize }],\n                prevIndex: index + unshiftWith,\n                prevSize: size,\n              }\n            },\n            {\n              ranges: [] as SizeRange[],\n              prevIndex: 0,\n              prevSize: sizes.lastSize,\n            }\n          ).ranges\n        })\n      ),\n      sizeRanges\n    )\n\n    const shiftWithOffset = u.streamFromEmitter(\n      u.pipe(\n        shiftWith,\n        u.withLatestFrom(sizes, gap),\n        u.map(([shiftWith, { offsetTree }, gap]) => {\n          const newFirstItemIndex = -shiftWith\n          return offsetOf(newFirstItemIndex, offsetTree, gap)\n        })\n      )\n    )\n\n    u.connect(\n      u.pipe(\n        shiftWith,\n        u.withLatestFrom(sizes, gap),\n        u.map(([shiftWith, sizes, gap]) => {\n          if (sizes.groupIndices.length > 0) {\n            throw new Error('Virtuoso: shifting items does not work with groups')\n          }\n\n          const newSizeTree = walk(sizes.sizeTree).reduce((acc, { k, v }) => {\n            return insert(acc, Math.max(0, k + shiftWith), v)\n          }, newTree<number>())\n\n          return {\n            ...sizes,\n            sizeTree: newSizeTree,\n            ...createOffsetTree(sizes.offsetTree, 0, newSizeTree, gap),\n          }\n        })\n      ),\n      sizes\n    )\n\n    return {\n      // input\n      data,\n      totalCount,\n      sizeRanges,\n      groupIndices,\n      defaultItemSize,\n      fixedItemSize,\n      unshiftWith,\n      shiftWith,\n      shiftWithOffset,\n      beforeUnshiftWith,\n      firstItemIndex,\n      gap,\n\n      // output\n      sizes,\n      listRefresh,\n      statefulTotalCount,\n      trackItemSizes,\n      itemSize,\n    }\n  },\n  u.tup(loggerSystem, recalcSystem),\n  { singleton: true }\n)\n","/* eslint-disable @typescript-eslint/no-unsafe-call */\nimport * as u from '@virtuoso.dev/urx'\nimport { findMaxKeyValue } from './AATree'\nimport { domIOSystem } from './domIOSystem'\nimport { offsetOf, originalIndexFromLocation, sizeSystem } from './sizeSystem'\nimport { IndexLocationWithAlign } from './interfaces'\nimport { loggerSystem, LogLevel } from './loggerSystem'\n\nexport type IndexLocation = number | IndexLocationWithAlign\n\nconst SUPPORTS_SCROLL_TO_OPTIONS = typeof document !== 'undefined' && 'scrollBehavior' in document.documentElement.style\n\nexport function normalizeIndexLocation(location: IndexLocation) {\n  const result: IndexLocationWithAlign = typeof location === 'number' ? { index: location } : location\n\n  if (!result.align) {\n    result.align = 'start'\n  }\n  if (!result.behavior || !SUPPORTS_SCROLL_TO_OPTIONS) {\n    result.behavior = 'auto'\n  }\n  if (!result.offset) {\n    result.offset = 0\n  }\n\n  return result\n}\n\nexport const scrollToIndexSystem = u.system(\n  ([\n    { sizes, totalCount, listRefresh, gap },\n    {\n      scrollingInProgress,\n      viewportHeight,\n      scrollTo,\n      smoothScrollTargetReached,\n      headerHeight,\n      footerHeight,\n      fixedHeaderHeight,\n      fixedFooterHeight,\n    },\n    { log },\n  ]) => {\n    const scrollToIndex = u.stream<IndexLocation>()\n    const topListHeight = u.statefulStream(0)\n\n    let unsubscribeNextListRefresh: any = null\n    let cleartTimeoutRef: ReturnType<typeof setTimeout> | null = null\n    let unsubscribeListRefresh: any = null\n\n    function cleanup() {\n      if (unsubscribeNextListRefresh) {\n        unsubscribeNextListRefresh()\n        unsubscribeNextListRefresh = null\n      }\n\n      if (unsubscribeListRefresh) {\n        unsubscribeListRefresh()\n        unsubscribeListRefresh = null\n      }\n\n      if (cleartTimeoutRef) {\n        clearTimeout(cleartTimeoutRef)\n        cleartTimeoutRef = null\n      }\n      u.publish(scrollingInProgress, false)\n    }\n\n    u.connect(\n      u.pipe(\n        scrollToIndex,\n        u.withLatestFrom(sizes, viewportHeight, totalCount, topListHeight, headerHeight, footerHeight, log),\n        u.withLatestFrom(gap, fixedHeaderHeight, fixedFooterHeight),\n        u.map(\n          ([\n            [location, sizes, viewportHeight, totalCount, topListHeight, headerHeight, footerHeight, log],\n            gap,\n            fixedHeaderHeight,\n            fixedFooterHeight,\n          ]) => {\n            const normalLocation = normalizeIndexLocation(location)\n            const { align, behavior, offset } = normalLocation\n            const lastIndex = totalCount - 1\n\n            const index = originalIndexFromLocation(normalLocation, sizes, lastIndex)\n\n            let top = offsetOf(index, sizes.offsetTree, gap) + headerHeight\n            if (align === 'end') {\n              top += fixedHeaderHeight + findMaxKeyValue(sizes.sizeTree, index)[1]! - viewportHeight + fixedFooterHeight\n              if (index === lastIndex) {\n                top += footerHeight\n              }\n            } else if (align === 'center') {\n              top += (fixedHeaderHeight + findMaxKeyValue(sizes.sizeTree, index)[1]! - viewportHeight + fixedFooterHeight) / 2\n            } else {\n              top -= topListHeight\n            }\n\n            if (offset) {\n              top += offset\n            }\n\n            const retry = (listChanged: boolean) => {\n              cleanup()\n              if (listChanged) {\n                log('retrying to scroll to', { location }, LogLevel.DEBUG)\n                u.publish(scrollToIndex, location)\n              } else {\n                log('list did not change, scroll successful', {}, LogLevel.DEBUG)\n              }\n            }\n\n            cleanup()\n\n            if (behavior === 'smooth') {\n              let listChanged = false\n              unsubscribeListRefresh = u.subscribe(listRefresh, (changed) => {\n                listChanged = listChanged || changed\n              })\n\n              unsubscribeNextListRefresh = u.handleNext(smoothScrollTargetReached, () => {\n                retry(listChanged)\n              })\n            } else {\n              unsubscribeNextListRefresh = u.handleNext(u.pipe(listRefresh, watchChangesFor(150)), retry)\n            }\n\n            // if the scroll jump is too small, the list won't get rerendered.\n            // clean this listener\n            cleartTimeoutRef = setTimeout(() => {\n              cleanup()\n            }, 1200)\n\n            u.publish(scrollingInProgress, true)\n            log('scrolling from index to', { index, top, behavior }, LogLevel.DEBUG)\n            return { top, behavior }\n          }\n        )\n      ),\n      scrollTo\n    )\n\n    return {\n      scrollToIndex,\n      topListHeight,\n    }\n  },\n  u.tup(sizeSystem, domIOSystem, loggerSystem),\n  { singleton: true }\n)\n\nfunction watchChangesFor(limit: number): u.Operator<boolean> {\n  return (done) => {\n    const timeoutRef = setTimeout(() => {\n      done(false)\n    }, limit)\n    return (value) => {\n      if (value) {\n        done(true)\n        clearTimeout(timeoutRef)\n      }\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/no-unsafe-argument */\nimport * as u from '@virtuoso.dev/urx'\nimport { domIOSystem } from './domIOSystem'\nimport { approximatelyEqual } from './utils/approximatelyEqual'\n\nexport const UP = 'up' as const\nexport const DOWN = 'down' as const\nexport const NONE = 'none' as const\nexport type ScrollDirection = typeof UP | typeof DOWN | typeof NONE\n\nexport interface ListBottomInfo {\n  bottom: number\n  offsetBottom: number\n}\n\nexport interface AtBottomParams {\n  offsetBottom: number\n  scrollTop: number\n  viewportHeight: number\n  scrollHeight: number\n}\n\nexport type NotAtBottomReason =\n  | 'SIZE_INCREASED'\n  | 'NOT_SHOWING_LAST_ITEM'\n  | 'VIEWPORT_HEIGHT_DECREASING'\n  | 'SCROLLING_UPWARDS'\n  | 'NOT_FULLY_SCROLLED_TO_LAST_ITEM_BOTTOM'\n\nexport type AtBottomReason = 'SIZE_DECREASED' | 'SCROLLED_DOWN'\n\nexport type AtBottomState =\n  | {\n      atBottom: false\n      notAtBottomBecause: NotAtBottomReason\n      state: AtBottomParams\n    }\n  | {\n      atBottom: true\n      state: AtBottomParams\n      atBottomBecause: AtBottomReason\n      scrollTopDelta: number\n    }\n\nconst INITIAL_BOTTOM_STATE = {\n  atBottom: false,\n  notAtBottomBecause: 'NOT_SHOWING_LAST_ITEM',\n  state: {\n    offsetBottom: 0,\n    scrollTop: 0,\n    viewportHeight: 0,\n    scrollHeight: 0,\n  },\n} as AtBottomState\n\nconst DEFAULT_AT_TOP_THRESHOLD = 0\n\nexport const stateFlagsSystem = u.system(([{ scrollContainerState, scrollTop, viewportHeight, headerHeight, footerHeight, scrollBy }]) => {\n  const isAtBottom = u.statefulStream(false)\n  const isAtTop = u.statefulStream(true)\n  const atBottomStateChange = u.stream<boolean>()\n  const atTopStateChange = u.stream<boolean>()\n  const atBottomThreshold = u.statefulStream(4)\n  const atTopThreshold = u.statefulStream(DEFAULT_AT_TOP_THRESHOLD)\n\n  // skip 1 to avoid an initial on/off flick\n  const isScrolling = u.statefulStreamFromEmitter(\n    u.pipe(\n      u.merge(u.pipe(u.duc(scrollTop), u.skip(1), u.mapTo(true)), u.pipe(u.duc(scrollTop), u.skip(1), u.mapTo(false), u.debounceTime(100))),\n      u.distinctUntilChanged()\n    ),\n    false\n  )\n\n  const isScrollingBy = u.statefulStreamFromEmitter(\n    u.pipe(u.merge(u.pipe(scrollBy, u.mapTo(true)), u.pipe(scrollBy, u.mapTo(false), u.debounceTime(200))), u.distinctUntilChanged()),\n    false\n  )\n\n  // u.subscribe(isScrollingBy, (isScrollingBy) => console.log({ isScrollingBy }))\n\n  u.connect(\n    u.pipe(\n      u.combineLatest(u.duc(scrollTop), u.duc(atTopThreshold)),\n      u.map(([top, atTopThreshold]) => top <= atTopThreshold),\n      u.distinctUntilChanged()\n    ),\n    isAtTop\n  )\n\n  u.connect(u.pipe(isAtTop, u.throttleTime(50)), atTopStateChange)\n\n  const atBottomState = u.streamFromEmitter(\n    u.pipe(\n      u.combineLatest(scrollContainerState, u.duc(viewportHeight), u.duc(headerHeight), u.duc(footerHeight), u.duc(atBottomThreshold)),\n      u.scan((current, [{ scrollTop, scrollHeight }, viewportHeight, _headerHeight, _footerHeight, atBottomThreshold]) => {\n        const isAtBottom = scrollTop + viewportHeight - scrollHeight > -atBottomThreshold\n        const state = {\n          viewportHeight,\n          scrollTop,\n          scrollHeight,\n        }\n\n        if (isAtBottom) {\n          let atBottomBecause: 'SIZE_DECREASED' | 'SCROLLED_DOWN'\n          let scrollTopDelta: number\n          if (scrollTop > current.state.scrollTop) {\n            atBottomBecause = 'SCROLLED_DOWN'\n            scrollTopDelta = current.state.scrollTop - scrollTop\n          } else {\n            atBottomBecause = 'SIZE_DECREASED'\n            scrollTopDelta = current.state.scrollTop - scrollTop || (current as { scrollTopDelta: number }).scrollTopDelta\n          }\n          return {\n            atBottom: true,\n            state,\n            atBottomBecause,\n            scrollTopDelta,\n          } as AtBottomState\n        }\n\n        let notAtBottomBecause: NotAtBottomReason\n\n        if (state.scrollHeight > current.state.scrollHeight) {\n          notAtBottomBecause = 'SIZE_INCREASED'\n        } else if (viewportHeight < current.state.viewportHeight) {\n          notAtBottomBecause = 'VIEWPORT_HEIGHT_DECREASING'\n        } else if (scrollTop < current.state.scrollTop) {\n          notAtBottomBecause = 'SCROLLING_UPWARDS'\n        } else {\n          notAtBottomBecause = 'NOT_FULLY_SCROLLED_TO_LAST_ITEM_BOTTOM'\n        }\n\n        return {\n          atBottom: false,\n          notAtBottomBecause,\n          state,\n        } as AtBottomState\n      }, INITIAL_BOTTOM_STATE),\n      u.distinctUntilChanged((prev, next) => {\n        return prev && prev.atBottom === next.atBottom\n      })\n    )\n  )\n\n  const lastJumpDueToItemResize = u.statefulStreamFromEmitter(\n    u.pipe(\n      scrollContainerState,\n      u.scan(\n        (current, { scrollTop, scrollHeight, viewportHeight }) => {\n          if (!approximatelyEqual(current.scrollHeight, scrollHeight)) {\n            const atBottom = scrollHeight - (scrollTop + viewportHeight) < 1\n\n            if (current.scrollTop !== scrollTop && atBottom) {\n              return {\n                scrollHeight,\n                scrollTop,\n                jump: current.scrollTop - scrollTop,\n                changed: true,\n              }\n            } else {\n              return {\n                scrollHeight,\n                scrollTop,\n                jump: 0,\n                changed: true,\n              }\n            }\n          } else {\n            return {\n              scrollTop,\n              scrollHeight,\n              jump: 0,\n              changed: false,\n            }\n          }\n        },\n        { scrollHeight: 0, jump: 0, scrollTop: 0, changed: false }\n      ),\n      u.filter((value) => value.changed),\n      u.map((value) => value.jump)\n    ),\n    0\n  )\n\n  u.connect(\n    u.pipe(\n      atBottomState,\n      u.map((state) => state.atBottom)\n    ),\n    isAtBottom\n  )\n\n  u.connect(u.pipe(isAtBottom, u.throttleTime(50)), atBottomStateChange)\n\n  const scrollDirection = u.statefulStream<ScrollDirection>(DOWN)\n\n  u.connect(\n    u.pipe(\n      scrollContainerState,\n      u.map(({ scrollTop }) => scrollTop),\n      u.distinctUntilChanged(),\n      u.scan(\n        (acc, scrollTop) => {\n          // if things change while compensating for items, ignore,\n          // but store the new scrollTop\n          if (u.getValue(isScrollingBy)) {\n            return { direction: acc.direction, prevScrollTop: scrollTop }\n          }\n\n          return { direction: scrollTop < acc.prevScrollTop ? UP : DOWN, prevScrollTop: scrollTop }\n        },\n        { direction: DOWN, prevScrollTop: 0 } as { direction: ScrollDirection; prevScrollTop: number }\n      ),\n      u.map((value) => value.direction)\n    ),\n    scrollDirection\n  )\n\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n  u.connect(u.pipe(scrollContainerState, u.throttleTime(50), u.mapTo(NONE)), scrollDirection)\n\n  const scrollVelocity = u.statefulStream(0)\n\n  u.connect(\n    u.pipe(\n      isScrolling,\n      u.filter((value) => !value),\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n      u.mapTo(0)\n    ),\n    scrollVelocity\n  )\n\n  u.connect(\n    u.pipe(\n      scrollTop,\n      u.throttleTime(100),\n      u.withLatestFrom(isScrolling),\n      u.filter(([_, isScrolling]) => !!isScrolling),\n      u.scan(([_, prev], [next]) => [prev, next], [0, 0]),\n      u.map(([prev, next]) => next - prev)\n    ),\n    scrollVelocity\n  )\n\n  return {\n    isScrolling,\n    isAtTop,\n    isAtBottom,\n    atBottomState,\n    atTopStateChange,\n    atBottomStateChange,\n    scrollDirection,\n    atBottomThreshold,\n    atTopThreshold,\n    scrollVelocity,\n    lastJumpDueToItemResize,\n  }\n}, u.tup(domIOSystem))\n","import * as u from '@virtuoso.dev/urx'\nimport { loggerSystem, LogLevel } from './loggerSystem'\n\nexport const propsReadySystem = u.system(\n  ([{ log }]) => {\n    const propsReady = u.statefulStream(false)\n\n    const didMount = u.streamFromEmitter(\n      u.pipe(\n        propsReady,\n        u.filter((ready) => ready),\n        u.distinctUntilChanged()\n      )\n    )\n    u.subscribe(propsReady, (value) => {\n      value && u.getValue(log)('props updated', {}, LogLevel.DEBUG)\n    })\n\n    return { propsReady, didMount }\n  },\n  u.tup(loggerSystem),\n  { singleton: true }\n)\n","import * as u from '@virtuoso.dev/urx'\nimport { empty } from './AATree'\nimport { sizeSystem } from './sizeSystem'\nimport { domIOSystem } from './domIOSystem'\nimport { scrollToIndexSystem } from './scrollToIndexSystem'\nimport { propsReadySystem } from './propsReadySystem'\nimport { FlatIndexLocationWithAlign } from './interfaces'\n\nexport function getInitialTopMostItemIndexNumber(location: number | FlatIndexLocationWithAlign, totalCount: number): number {\n  const lastIndex = totalCount - 1\n  const index = typeof location === 'number' ? location : location.index === 'LAST' ? lastIndex : location.index\n  return index\n}\n\nexport const initialTopMostItemIndexSystem = u.system(\n  ([{ sizes, listRefresh, defaultItemSize }, { scrollTop }, { scrollToIndex }, { didMount }]) => {\n    const scrolledToInitialItem = u.statefulStream(true)\n    const initialTopMostItemIndex = u.statefulStream<number | FlatIndexLocationWithAlign>(0)\n\n    u.connect(\n      u.pipe(\n        didMount,\n        u.withLatestFrom(initialTopMostItemIndex),\n        u.filter(([_, location]) => !!location),\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        u.mapTo(false)\n      ),\n      scrolledToInitialItem\n    )\n\n    u.subscribe(\n      u.pipe(\n        u.combineLatest(listRefresh, didMount),\n        u.withLatestFrom(scrolledToInitialItem, sizes, defaultItemSize),\n        u.filter(([[, didMount], scrolledToInitialItem, { sizeTree }, defaultItemSize]) => {\n          return didMount && (!empty(sizeTree) || defaultItemSize !== undefined) && !scrolledToInitialItem\n        }),\n        u.withLatestFrom(initialTopMostItemIndex)\n      ),\n      ([, initialTopMostItemIndex]) => {\n        setTimeout(() => {\n          u.handleNext(scrollTop, () => {\n            u.publish(scrolledToInitialItem, true)\n          })\n          u.publish(scrollToIndex, initialTopMostItemIndex)\n        })\n      }\n    )\n\n    return {\n      scrolledToInitialItem,\n      initialTopMostItemIndex,\n    }\n  },\n  u.tup(sizeSystem, domIOSystem, scrollToIndexSystem, propsReadySystem),\n  { singleton: true }\n)\n","/* eslint-disable @typescript-eslint/no-unsafe-call */\nimport * as u from '@virtuoso.dev/urx'\nimport { scrollToIndexSystem } from './scrollToIndexSystem'\nimport { sizeSystem } from './sizeSystem'\nimport { stateFlagsSystem } from './stateFlagsSystem'\nimport { initialTopMostItemIndexSystem } from './initialTopMostItemIndexSystem'\nimport { FollowOutput, FollowOutputScalarType } from './interfaces'\nimport { propsReadySystem } from './propsReadySystem'\nimport { loggerSystem, LogLevel } from './loggerSystem'\nimport { domIOSystem } from './domIOSystem'\n\nfunction normalizeFollowOutput(follow: FollowOutputScalarType): FollowOutputScalarType {\n  if (!follow) {\n    return false\n  }\n  return follow === 'smooth' ? 'smooth' : 'auto'\n}\n\nconst behaviorFromFollowOutput = (follow: FollowOutput, isAtBottom: boolean) => {\n  if (typeof follow === 'function') {\n    return normalizeFollowOutput(follow(isAtBottom))\n  }\n  return isAtBottom && normalizeFollowOutput(follow)\n}\n\nexport const followOutputSystem = u.system(\n  ([\n    { totalCount, listRefresh },\n    { isAtBottom, atBottomState },\n    { scrollToIndex },\n    { scrolledToInitialItem },\n    { propsReady, didMount },\n    { log },\n    { scrollingInProgress },\n  ]) => {\n    const followOutput = u.statefulStream<FollowOutput>(false)\n    const autoscrollToBottom = u.stream<true>()\n    let pendingScrollHandle: any = null\n\n    function scrollToBottom(followOutputBehavior: FollowOutputScalarType) {\n      u.publish(scrollToIndex, {\n        index: 'LAST',\n        align: 'end',\n        behavior: followOutputBehavior,\n      })\n    }\n\n    u.subscribe(\n      u.pipe(\n        u.combineLatest(u.pipe(u.duc(totalCount), u.skip(1)), didMount),\n        u.withLatestFrom(u.duc(followOutput), isAtBottom, scrolledToInitialItem, scrollingInProgress),\n        u.map(([[totalCount, didMount], followOutput, isAtBottom, scrolledToInitialItem, scrollingInProgress]) => {\n          let shouldFollow = didMount && scrolledToInitialItem\n          let followOutputBehavior: FollowOutputScalarType = 'auto'\n\n          if (shouldFollow) {\n            // if scrolling to index is in progress,\n            // assume that a previous followOutput response is going\n            followOutputBehavior = behaviorFromFollowOutput(followOutput, isAtBottom || scrollingInProgress)\n            shouldFollow = shouldFollow && !!followOutputBehavior\n          }\n\n          return { totalCount, shouldFollow, followOutputBehavior }\n        }),\n        u.filter(({ shouldFollow }) => shouldFollow)\n      ),\n      ({ totalCount, followOutputBehavior }) => {\n        if (pendingScrollHandle) {\n          pendingScrollHandle()\n          pendingScrollHandle = null\n        }\n\n        pendingScrollHandle = u.handleNext(listRefresh, () => {\n          u.getValue(log)('following output to ', { totalCount }, LogLevel.DEBUG)\n          scrollToBottom(followOutputBehavior)\n          pendingScrollHandle = null\n        })\n      }\n    )\n\n    function trapNextSizeIncrease(followOutput: boolean) {\n      const cancel = u.handleNext(atBottomState, (state) => {\n        if (followOutput && !state.atBottom && state.notAtBottomBecause === 'SIZE_INCREASED' && !pendingScrollHandle) {\n          u.getValue(log)('scrolling to bottom due to increased size', {}, LogLevel.DEBUG)\n          scrollToBottom('auto')\n        }\n      })\n      setTimeout(cancel, 100)\n    }\n\n    u.subscribe(\n      u.pipe(\n        u.combineLatest(u.duc(followOutput), totalCount, propsReady),\n        u.filter(([follow, , ready]) => follow && ready),\n        u.scan(\n          ({ value }, [, next]) => {\n            return { refreshed: value === next, value: next }\n          },\n          { refreshed: false, value: 0 }\n        ),\n        u.filter(({ refreshed }) => refreshed),\n        u.withLatestFrom(followOutput, totalCount)\n      ),\n      ([, followOutput]) => {\n        trapNextSizeIncrease(followOutput !== false)\n      }\n    )\n\n    u.subscribe(autoscrollToBottom, () => {\n      trapNextSizeIncrease(u.getValue(followOutput) !== false)\n    })\n\n    u.subscribe(u.combineLatest(u.duc(followOutput), atBottomState), ([followOutput, state]) => {\n      if (followOutput && !state.atBottom && state.notAtBottomBecause === 'VIEWPORT_HEIGHT_DECREASING') {\n        scrollToBottom('auto')\n      }\n    })\n\n    return { followOutput, autoscrollToBottom }\n  },\n  u.tup(sizeSystem, stateFlagsSystem, scrollToIndexSystem, initialTopMostItemIndexSystem, propsReadySystem, loggerSystem, domIOSystem)\n)\n","import * as u from '@virtuoso.dev/urx'\n\nimport { findMaxKeyValue } from './AATree'\nimport { domIOSystem } from './domIOSystem'\nimport { sizeSystem, hasGroups } from './sizeSystem'\nexport interface GroupIndexesAndCount {\n  totalCount: number\n  groupIndices: number[]\n}\n\nexport function groupCountsToIndicesAndCount(counts: number[]) {\n  return counts.reduce(\n    (acc, groupCount) => {\n      acc.groupIndices.push(acc.totalCount)\n      acc.totalCount += groupCount + 1\n      return acc\n    },\n    {\n      totalCount: 0,\n      groupIndices: [],\n    } as GroupIndexesAndCount\n  )\n}\n\nexport const groupedListSystem = u.system(([{ totalCount, groupIndices, sizes }, { scrollTop, headerHeight }]) => {\n  const groupCounts = u.stream<number[]>()\n  const topItemsIndexes = u.stream<[number]>()\n  const groupIndicesAndCount = u.streamFromEmitter(u.pipe(groupCounts, u.map(groupCountsToIndicesAndCount)))\n  u.connect(\n    u.pipe(\n      groupIndicesAndCount,\n      u.map((value) => value.totalCount)\n    ),\n    totalCount\n  )\n  u.connect(\n    u.pipe(\n      groupIndicesAndCount,\n      u.map((value) => value.groupIndices)\n    ),\n    groupIndices\n  )\n\n  u.connect(\n    u.pipe(\n      u.combineLatest(scrollTop, sizes, headerHeight),\n      u.filter(([_, sizes]) => hasGroups(sizes)),\n      u.map(([scrollTop, state, headerHeight]) => findMaxKeyValue(state.groupOffsetTree, Math.max(scrollTop - headerHeight, 0), 'v')[0]),\n      u.distinctUntilChanged(),\n      u.map((index) => [index])\n    ),\n    topItemsIndexes\n  )\n\n  return { groupCounts, topItemsIndexes }\n}, u.tup(sizeSystem, domIOSystem))\n","import { ListRange } from './interfaces'\n\nexport function tupleComparator<T1, T2>(prev: [T1, T2] | undefined, current: [T1, T2]) {\n  return !!(prev && prev[0] === current[0] && prev[1] === current[1])\n}\n\nexport function rangeComparator(prev: ListRange | undefined, next: ListRange) {\n  return !!(prev && prev.startIndex === next.startIndex && prev.endIndex === next.endIndex)\n}\n","import * as u from '@virtuoso.dev/urx'\nimport { domIOSystem } from './domIOSystem'\nimport { UP, DOWN, ScrollDirection } from './stateFlagsSystem'\nimport { tupleComparator } from './comparators'\n\nexport type NumberTuple = [number, number]\nexport type Overscan = number | { main: number; reverse: number }\nexport const TOP = 'top' as const\nexport const BOTTOM = 'bottom' as const\nexport const NONE = 'none' as const\nexport type ListEnd = typeof TOP | typeof BOTTOM\nexport type ViewportIncrease = number | { [k in ListEnd]?: number }\nexport type ChangeDirection = typeof UP | typeof DOWN | typeof NONE\n\nexport function getOverscan(overscan: Overscan, end: ListEnd, direction: ScrollDirection) {\n  if (typeof overscan === 'number') {\n    return (direction === UP && end === TOP) || (direction === DOWN && end === BOTTOM) ? overscan : 0\n  } else {\n    if (direction === UP) {\n      return end === TOP ? overscan.main : overscan.reverse\n    } else {\n      return end === BOTTOM ? overscan.main : overscan.reverse\n    }\n  }\n}\n\nfunction getViewportIncrease(value: ViewportIncrease, end: ListEnd) {\n  return typeof value === 'number' ? value : value[end] || 0\n}\n\nexport const sizeRangeSystem = u.system(\n  ([{ scrollTop, viewportHeight, deviation, headerHeight, fixedHeaderHeight }]) => {\n    const listBoundary = u.stream<NumberTuple>()\n    const topListHeight = u.statefulStream(0)\n    const increaseViewportBy = u.statefulStream<ViewportIncrease>(0)\n    const overscan = u.statefulStream<Overscan>(0)\n\n    const visibleRange = u.statefulStreamFromEmitter(\n      u.pipe(\n        u.combineLatest(\n          u.duc(scrollTop),\n          u.duc(viewportHeight),\n          u.duc(headerHeight),\n          u.duc(listBoundary, tupleComparator),\n          u.duc(overscan),\n          u.duc(topListHeight),\n          u.duc(fixedHeaderHeight),\n          u.duc(deviation),\n          u.duc(increaseViewportBy)\n        ),\n        u.map(\n          ([\n            scrollTop,\n            viewportHeight,\n            headerHeight,\n            [listTop, listBottom],\n            overscan,\n            topListHeight,\n            fixedHeaderHeight,\n            deviation,\n            increaseViewportBy,\n          ]) => {\n            const top = scrollTop - deviation\n            const stickyHeaderHeight = topListHeight + fixedHeaderHeight\n            const headerVisible = Math.max(headerHeight - top, 0)\n            let direction: ChangeDirection = NONE\n            const topViewportAddition = getViewportIncrease(increaseViewportBy, TOP)\n            const bottomViewportAddition = getViewportIncrease(increaseViewportBy, BOTTOM)\n\n            listTop -= deviation\n            listTop += headerHeight + fixedHeaderHeight\n            listBottom += headerHeight + fixedHeaderHeight\n            listBottom -= deviation\n\n            // console.log({ listTop, scrollTop, stickyHeaderHeight, topViewportAddition })\n            if (listTop > scrollTop + stickyHeaderHeight - topViewportAddition) {\n              direction = UP\n            }\n\n            if (listBottom < scrollTop - headerVisible + viewportHeight + bottomViewportAddition) {\n              direction = DOWN\n            }\n\n            if (direction !== NONE) {\n              return [\n                Math.max(top - headerHeight - getOverscan(overscan, TOP, direction) - topViewportAddition, 0),\n                top -\n                  headerVisible -\n                  fixedHeaderHeight +\n                  viewportHeight +\n                  getOverscan(overscan, BOTTOM, direction) +\n                  bottomViewportAddition,\n              ] as NumberTuple\n            }\n\n            return null\n          }\n        ),\n        u.filter((value) => value != null) as u.Operator<NumberTuple | null, NumberTuple>,\n        u.distinctUntilChanged(tupleComparator)\n      ),\n      [0, 0]\n    ) as unknown as u.StatefulStream<NumberTuple>\n\n    return {\n      // input\n      listBoundary,\n      overscan,\n      topListHeight,\n      increaseViewportBy,\n\n      // output\n      visibleRange,\n    }\n  },\n  u.tup(domIOSystem),\n  { singleton: true }\n)\n","import * as u from '@virtuoso.dev/urx'\nimport { empty, findMaxKeyValue, Range, rangesWithin } from './AATree'\nimport { groupedListSystem } from './groupedListSystem'\nimport { getInitialTopMostItemIndexNumber, initialTopMostItemIndexSystem } from './initialTopMostItemIndexSystem'\nimport { Item, ListItem, ListRange } from './interfaces'\nimport { propsReadySystem } from './propsReadySystem'\nimport { scrollToIndexSystem } from './scrollToIndexSystem'\nimport { sizeRangeSystem } from './sizeRangeSystem'\nimport { Data, originalIndexFromItemIndex, SizeState, sizeSystem, hasGroups, rangesWithinOffsets } from './sizeSystem'\nimport { stateFlagsSystem } from './stateFlagsSystem'\nimport { rangeComparator, tupleComparator } from './comparators'\nimport { recalcSystem } from './recalcSystem'\n\nexport type ListItems = ListItem<unknown>[]\nexport interface TopListState {\n  items: ListItems\n  listHeight: number\n}\n\nexport interface ListState {\n  items: ListItems\n  topItems: ListItems\n  topListHeight: number\n  offsetTop: number\n  offsetBottom: number\n  top: number\n  bottom: number\n  totalCount: number\n  firstItemIndex: number\n}\n\nfunction probeItemSet(index: number, sizes: SizeState, data: Data) {\n  if (hasGroups(sizes)) {\n    const itemIndex = originalIndexFromItemIndex(index, sizes)\n    const groupIndex = findMaxKeyValue(sizes.groupOffsetTree, itemIndex)[0]\n\n    return [\n      { index: groupIndex, size: 0, offset: 0 },\n      { index: itemIndex, size: 0, offset: 0, data: data && data[0] },\n    ]\n  }\n  return [{ index, size: 0, offset: 0, data: data && data[0] }]\n}\n\nconst EMPTY_LIST_STATE: ListState = {\n  items: [] as ListItems,\n  topItems: [] as ListItems,\n  offsetTop: 0,\n  offsetBottom: 0,\n  top: 0,\n  bottom: 0,\n  topListHeight: 0,\n  totalCount: 0,\n  firstItemIndex: 0,\n}\n\nfunction transposeItems(items: Item<any>[], sizes: SizeState, firstItemIndex: number): ListItems {\n  if (items.length === 0) {\n    return []\n  }\n\n  if (!hasGroups(sizes)) {\n    return items.map((item) => ({ ...item, index: item.index + firstItemIndex, originalIndex: item.index }))\n  }\n\n  const startIndex = items[0].index\n  const endIndex = items[items.length - 1].index\n\n  const transposedItems = [] as ListItems\n  const groupRanges = rangesWithin(sizes.groupOffsetTree, startIndex, endIndex)\n  let currentRange: Range<number> | undefined = undefined\n  let currentGroupIndex = 0\n\n  for (const item of items) {\n    if (!currentRange || currentRange.end < item.index) {\n      currentRange = groupRanges.shift()!\n      currentGroupIndex = sizes.groupIndices.indexOf(currentRange.start)\n    }\n\n    let transposedItem: { type: 'group'; index: number } | { index: number; groupIndex: number }\n\n    if (item.index === currentRange.start) {\n      transposedItem = {\n        type: 'group' as const,\n        index: currentGroupIndex,\n      }\n    } else {\n      transposedItem = {\n        index: item.index - (currentGroupIndex + 1) + firstItemIndex,\n        groupIndex: currentGroupIndex,\n      }\n    }\n\n    transposedItems.push({\n      ...transposedItem,\n      size: item.size,\n      offset: item.offset,\n      originalIndex: item.index,\n      data: item.data,\n    })\n  }\n\n  return transposedItems\n}\n\nexport function buildListState(\n  items: Item<any>[],\n  topItems: Item<any>[],\n  totalCount: number,\n  gap: number,\n  sizes: SizeState,\n  firstItemIndex: number\n): ListState {\n  const { lastSize, lastOffset, lastIndex } = sizes\n  let offsetTop = 0\n  let bottom = 0\n\n  if (items.length > 0) {\n    offsetTop = items[0].offset\n    const lastItem = items[items.length - 1]\n    bottom = lastItem.offset + lastItem.size\n  }\n\n  const itemCount = totalCount - lastIndex\n  const total = lastOffset + itemCount * lastSize + (itemCount - 1) * gap\n  const top = offsetTop\n  const offsetBottom = total - bottom\n\n  return {\n    items: transposeItems(items, sizes, firstItemIndex),\n    topItems: transposeItems(topItems, sizes, firstItemIndex),\n    topListHeight: topItems.reduce((height, item) => item.size + height, 0),\n    offsetTop,\n    offsetBottom,\n    top,\n    bottom,\n    totalCount,\n    firstItemIndex,\n  }\n}\n\nexport const listStateSystem = u.system(\n  ([\n    { sizes, totalCount, data, firstItemIndex, gap },\n    groupedListSystem,\n    { visibleRange, listBoundary, topListHeight: rangeTopListHeight },\n    { scrolledToInitialItem, initialTopMostItemIndex },\n    { topListHeight },\n    stateFlags,\n    { didMount },\n    { recalcInProgress },\n  ]) => {\n    const topItemsIndexes = u.statefulStream<Array<number>>([])\n    const itemsRendered = u.stream<ListItems>()\n\n    u.connect(groupedListSystem.topItemsIndexes, topItemsIndexes)\n\n    const listState = u.statefulStreamFromEmitter(\n      u.pipe(\n        u.combineLatest(\n          didMount,\n          recalcInProgress,\n          u.duc(visibleRange, tupleComparator),\n          u.duc(totalCount),\n          u.duc(sizes),\n          u.duc(initialTopMostItemIndex),\n          scrolledToInitialItem,\n          u.duc(topItemsIndexes),\n          u.duc(firstItemIndex),\n          u.duc(gap),\n          data\n        ),\n        u.filter(([mount, recalcInProgress]) => {\n          return mount && !recalcInProgress\n        }),\n        u.map(\n          ([\n            ,\n            ,\n            [startOffset, endOffset],\n            totalCount,\n            sizes,\n            initialTopMostItemIndex,\n            scrolledToInitialItem,\n            topItemsIndexes,\n            firstItemIndex,\n            gap,\n            data,\n          ]) => {\n            const sizesValue = sizes\n            const { sizeTree, offsetTree } = sizesValue\n\n            if (totalCount === 0 || (startOffset === 0 && endOffset === 0)) {\n              return { ...EMPTY_LIST_STATE, totalCount }\n            }\n\n            if (empty(sizeTree)) {\n              return buildListState(\n                probeItemSet(getInitialTopMostItemIndexNumber(initialTopMostItemIndex, totalCount), sizesValue, data),\n                [],\n                totalCount,\n                gap,\n                sizesValue,\n                firstItemIndex\n              )\n            }\n\n            const topItems = [] as Item<any>[]\n\n            if (topItemsIndexes.length > 0) {\n              const startIndex = topItemsIndexes[0]\n              const endIndex = topItemsIndexes[topItemsIndexes.length - 1]\n              let offset = 0\n              for (const range of rangesWithin(sizeTree, startIndex, endIndex)) {\n                const size = range.value\n                const rangeStartIndex = Math.max(range.start, startIndex)\n                const rangeEndIndex = Math.min(range.end, endIndex)\n                for (let i = rangeStartIndex; i <= rangeEndIndex; i++) {\n                  topItems.push({ index: i, size, offset: offset, data: data && data[i] })\n                  offset += size\n                }\n              }\n            }\n\n            // If the list hasn't scrolled to the initial item because the initial item was set,\n            // render empty list.\n            //\n            // This is a condition to be evaluated past the probe check, do not merge\n            // with the totalCount check above\n            if (!scrolledToInitialItem) {\n              return buildListState([], topItems, totalCount, gap, sizesValue, firstItemIndex)\n            }\n\n            const minStartIndex = topItemsIndexes.length > 0 ? topItemsIndexes[topItemsIndexes.length - 1] + 1 : 0\n\n            const offsetPointRanges = rangesWithinOffsets(offsetTree, startOffset, endOffset, minStartIndex)\n            if (offsetPointRanges.length === 0) {\n              return null\n            }\n\n            const maxIndex = totalCount - 1\n\n            const items = u.tap([] as Item<any>[], (result) => {\n              for (const range of offsetPointRanges) {\n                const point = range.value\n                let offset = point.offset\n                let rangeStartIndex = range.start\n                const size = point.size\n\n                if (point.offset < startOffset) {\n                  rangeStartIndex += Math.floor((startOffset - point.offset + gap) / (size + gap))\n                  const itemCount = rangeStartIndex - range.start\n                  offset += itemCount * size + itemCount * gap\n                }\n\n                if (rangeStartIndex < minStartIndex) {\n                  offset += (minStartIndex - rangeStartIndex) * size\n                  rangeStartIndex = minStartIndex\n                }\n\n                const endIndex = Math.min(range.end, maxIndex)\n\n                for (let i = rangeStartIndex; i <= endIndex; i++) {\n                  if (offset >= endOffset) {\n                    break\n                  }\n\n                  result.push({ index: i, size, offset: offset, data: data && data[i] })\n                  offset += size + gap\n                }\n              }\n            })\n\n            return buildListState(items, topItems, totalCount, gap, sizesValue, firstItemIndex)\n          }\n        ),\n        //@ts-expect-error filter needs to be fixed\n        u.filter((value) => value !== null),\n        u.distinctUntilChanged()\n      ),\n      EMPTY_LIST_STATE\n    )\n\n    u.connect(\n      u.pipe(\n        data,\n        u.filter((data) => data !== undefined),\n        u.map((data) => data!.length)\n      ),\n      totalCount\n    )\n\n    u.connect(\n      u.pipe(\n        listState,\n        u.map((value) => value.topListHeight)\n      ),\n      topListHeight\n    )\n    u.connect(topListHeight, rangeTopListHeight)\n\n    u.connect(\n      u.pipe(\n        listState,\n        u.map((state) => [state.top, state.bottom])\n      ),\n      listBoundary\n    )\n\n    u.connect(\n      u.pipe(\n        listState,\n        u.map((state) => state.items)\n      ),\n      itemsRendered\n    )\n\n    const endReached = u.streamFromEmitter(\n      u.pipe(\n        listState,\n        u.filter(({ items }) => items.length > 0),\n        u.withLatestFrom(totalCount, data),\n        u.filter(([{ items }, totalCount]) => items[items.length - 1].originalIndex === totalCount - 1),\n        u.map(([, totalCount, data]) => [totalCount - 1, data] as [number, unknown[]]),\n        u.distinctUntilChanged(tupleComparator),\n        u.map(([count]) => count)\n      )\n    )\n\n    const startReached = u.streamFromEmitter(\n      u.pipe(\n        listState,\n        u.throttleTime(200),\n        u.filter(({ items, topItems }) => {\n          return items.length > 0 && items[0].originalIndex === topItems.length\n        }),\n        u.map(({ items }) => items[0].index),\n        u.distinctUntilChanged()\n      )\n    )\n\n    const rangeChanged = u.streamFromEmitter(\n      u.pipe(\n        listState,\n        u.filter(({ items }) => items.length > 0),\n        u.map(({ items }) => {\n          let startIndex = 0\n          let endIndex = items.length - 1\n\n          while (items[startIndex].type === 'group' && startIndex < endIndex) {\n            startIndex++\n          }\n\n          while (items[endIndex].type === 'group' && endIndex > startIndex) {\n            endIndex--\n          }\n\n          return {\n            startIndex: items[startIndex].index,\n            endIndex: items[endIndex].index,\n          } as ListRange\n        }),\n        u.distinctUntilChanged(rangeComparator)\n      )\n    )\n\n    return { listState, topItemsIndexes, endReached, startReached, rangeChanged, itemsRendered, ...stateFlags }\n  },\n  u.tup(\n    sizeSystem,\n    groupedListSystem,\n    sizeRangeSystem,\n    initialTopMostItemIndexSystem,\n    scrollToIndexSystem,\n    stateFlagsSystem,\n    propsReadySystem,\n    recalcSystem\n  ),\n  { singleton: true }\n)\n","import * as u from '@virtuoso.dev/urx'\nimport { listStateSystem, buildListState } from './listStateSystem'\nimport { sizeSystem } from './sizeSystem'\nimport { propsReadySystem } from './propsReadySystem'\n\nexport const initialItemCountSystem = u.system(\n  ([{ sizes, firstItemIndex, data, gap }, { listState }, { didMount }]) => {\n    const initialItemCount = u.statefulStream(0)\n\n    u.connect(\n      u.pipe(\n        didMount,\n        u.withLatestFrom(initialItemCount),\n        u.filter(([, count]) => count !== 0),\n        u.withLatestFrom(sizes, firstItemIndex, gap, data),\n        u.map(([[, count], sizes, firstItemIndex, gap, data = []]) => {\n          let includedGroupsCount = 0\n          if (sizes.groupIndices.length > 0) {\n            for (const index of sizes.groupIndices) {\n              if (index - includedGroupsCount >= count) {\n                break\n              }\n              includedGroupsCount++\n            }\n          }\n          const adjustedCount = count + includedGroupsCount\n          const items = Array.from({ length: adjustedCount }).map((_, index) => ({ index, size: 0, offset: 0, data: data[index] }))\n          return buildListState(items, [], adjustedCount, gap, sizes, firstItemIndex)\n        })\n      ),\n      listState\n    )\n\n    return { initialItemCount }\n  },\n  u.tup(sizeSystem, listStateSystem, propsReadySystem),\n  { singleton: true }\n)\n","import * as u from '@virtuoso.dev/urx'\nimport { ListRange } from './interfaces'\nimport { stateFlagsSystem } from './stateFlagsSystem'\nimport { ScrollSeekConfiguration } from './interfaces'\n\nexport const scrollSeekSystem = u.system(\n  ([{ scrollVelocity }]) => {\n    const isSeeking = u.statefulStream(false)\n    const rangeChanged = u.stream<ListRange>()\n    const scrollSeekConfiguration = u.statefulStream<ScrollSeekConfiguration | undefined | false>(false)\n\n    u.connect(\n      u.pipe(\n        scrollVelocity,\n        u.withLatestFrom(scrollSeekConfiguration, isSeeking, rangeChanged),\n        u.filter(([_, config]) => !!config),\n        u.map(([speed, config, isSeeking, range]) => {\n          const { exit, enter } = config as ScrollSeekConfiguration\n          if (isSeeking) {\n            if (exit(speed, range)) {\n              return false\n            }\n          } else {\n            if (enter(speed, range)) {\n              return true\n            }\n          }\n          return isSeeking\n        }),\n        u.distinctUntilChanged()\n      ),\n      isSeeking\n    )\n\n    u.subscribe(\n      u.pipe(u.combineLatest(isSeeking, scrollVelocity, rangeChanged), u.withLatestFrom(scrollSeekConfiguration)),\n      ([[isSeeking, velocity, range], config]) => isSeeking && config && config.change && config.change(velocity, range)\n    )\n\n    return { isSeeking, scrollSeekConfiguration, scrollVelocity, scrollSeekRangeChanged: rangeChanged }\n  },\n  u.tup(stateFlagsSystem),\n  { singleton: true }\n)\n","import * as u from '@virtuoso.dev/urx'\nimport { listStateSystem } from './listStateSystem'\n\nexport const topItemCountSystem = u.system(([{ topItemsIndexes }]) => {\n  const topItemCount = u.statefulStream(0)\n\n  u.connect(\n    u.pipe(\n      topItemCount,\n      u.filter((length) => length > 0),\n      u.map((length) => Array.from({ length }).map((_, index) => index))\n    ),\n    topItemsIndexes\n  )\n  return { topItemCount }\n}, u.tup(listStateSystem))\n","import * as u from '@virtuoso.dev/urx'\nimport { listStateSystem } from './listStateSystem'\nimport { domIOSystem } from './domIOSystem'\n\nexport const totalListHeightSystem = u.system(\n  ([{ footerHeight, headerHeight, fixedHeaderHeight, fixedFooterHeight }, { listState }]) => {\n    const totalListHeightChanged = u.stream<number>()\n    const totalListHeight = u.statefulStreamFromEmitter(\n      u.pipe(\n        u.combineLatest(footerHeight, fixedFooterHeight, headerHeight, fixedHeaderHeight, listState),\n        u.map(([footerHeight, fixedFooterHeight, headerHeight, fixedHeaderHeight, listState]) => {\n          return footerHeight + fixedFooterHeight + headerHeight + fixedHeaderHeight + listState.offsetBottom + listState.bottom\n        })\n      ),\n      0\n    )\n\n    u.connect(u.duc(totalListHeight), totalListHeightChanged)\n\n    return { totalListHeight, totalListHeightChanged }\n  },\n  u.tup(domIOSystem, listStateSystem),\n  { singleton: true }\n)\n","export function simpleMemoize<T extends () => any>(func: T): T {\n  let called = false\n  let result: unknown\n\n  return (() => {\n    if (!called) {\n      called = true\n      result = func()\n    }\n    return result\n  }) as T\n}\n","import * as u from '@virtuoso.dev/urx'\nimport { domIOSystem } from './domIOSystem'\nimport { listStateSystem } from './listStateSystem'\nimport { sizeSystem } from './sizeSystem'\nimport { UP, stateFlagsSystem } from './stateFlagsSystem'\nimport { ListItem } from './interfaces'\nimport { loggerSystem, LogLevel } from './loggerSystem'\nimport { simpleMemoize } from './utils/simpleMemoize'\nimport { recalcSystem } from './recalcSystem'\n\nconst isMobileSafari = simpleMemoize(() => {\n  return /iP(ad|hone|od).+Version\\/[\\d.]+.*Safari/i.test(navigator.userAgent)\n})\n\ntype UpwardFixState = [number, ListItem<any>[], number, number]\n/**\n * Fixes upward scrolling by calculating and compensation from changed item heights, using scrollBy.\n */\nexport const upwardScrollFixSystem = u.system(\n  ([\n    { scrollBy, scrollTop, deviation, scrollingInProgress },\n    { isScrolling, isAtBottom, scrollDirection, lastJumpDueToItemResize },\n    { listState },\n    { beforeUnshiftWith, shiftWithOffset, sizes, gap },\n    { log },\n    { recalcInProgress },\n  ]) => {\n    const deviationOffset = u.streamFromEmitter(\n      u.pipe(\n        listState,\n        u.withLatestFrom(lastJumpDueToItemResize),\n        u.scan(\n          ([, prevItems, prevTotalCount, prevTotalHeight], [{ items, totalCount, bottom, offsetBottom }, lastJumpDueToItemResize]) => {\n            const totalHeight = bottom + offsetBottom\n\n            let newDev = 0\n            if (prevTotalCount === totalCount) {\n              if (prevItems.length > 0 && items.length > 0) {\n                const atStart = items[0].originalIndex === 0 && prevItems[0].originalIndex === 0\n                if (!atStart) {\n                  newDev = totalHeight - prevTotalHeight\n                  if (newDev !== 0) {\n                    newDev += lastJumpDueToItemResize\n                  }\n                }\n              }\n            }\n\n            return [newDev, items, totalCount, totalHeight] as UpwardFixState\n          },\n          [0, [], 0, 0] as UpwardFixState\n        ),\n        u.filter(([amount]) => amount !== 0),\n        u.withLatestFrom(scrollTop, scrollDirection, scrollingInProgress, isAtBottom, log),\n        u.filter(([, scrollTop, scrollDirection, scrollingInProgress]) => {\n          return !scrollingInProgress && scrollTop !== 0 && scrollDirection === UP\n        }),\n        u.map(([[amount], , , , , log]) => {\n          log('Upward scrolling compensation', { amount }, LogLevel.DEBUG)\n          return amount\n        })\n      )\n    )\n\n    function scrollByWith(offset: number) {\n      if (offset > 0) {\n        u.publish(scrollBy, { top: -offset, behavior: 'auto' })\n        u.publish(deviation, 0)\n      } else {\n        u.publish(deviation, 0)\n        u.publish(scrollBy, { top: -offset, behavior: 'auto' })\n      }\n    }\n\n    u.subscribe(u.pipe(deviationOffset, u.withLatestFrom(deviation, isScrolling)), ([offset, deviationAmount, isScrolling]) => {\n      if (isScrolling && isMobileSafari()) {\n        u.publish(deviation, deviationAmount - offset)\n      } else {\n        scrollByWith(-offset)\n      }\n    })\n\n    // this hack is only necessary for mobile safari which does not support scrollBy while scrolling is in progress.\n    // when the browser stops scrolling, restore the position and reset the glitching\n    u.subscribe(\n      u.pipe(\n        u.combineLatest(u.statefulStreamFromEmitter(isScrolling, false), deviation, recalcInProgress),\n        u.filter(([is, deviation, recalc]) => !is && !recalc && deviation !== 0),\n        u.map(([_, deviation]) => deviation),\n        u.throttleTime(1)\n      ),\n      scrollByWith\n    )\n\n    u.connect(\n      u.pipe(\n        shiftWithOffset,\n        u.map((offset) => {\n          return { top: -offset }\n        })\n      ),\n      scrollBy\n    )\n\n    u.subscribe(\n      u.pipe(\n        beforeUnshiftWith,\n        u.withLatestFrom(sizes, gap),\n        u.map(([offset, { lastSize }, gap]) => offset * lastSize + offset * gap)\n      ),\n      (offset) => {\n        u.publish(deviation, offset)\n        requestAnimationFrame(() => {\n          u.publish(scrollBy, { top: offset })\n          requestAnimationFrame(() => {\n            u.publish(deviation, 0)\n            u.publish(recalcInProgress, false)\n          })\n        })\n      }\n    )\n\n    return { deviation }\n  },\n  u.tup(domIOSystem, stateFlagsSystem, listStateSystem, sizeSystem, loggerSystem, recalcSystem)\n)\n","import * as u from '@virtuoso.dev/urx'\nimport { totalListHeightSystem } from './totalListHeightSystem'\nimport { propsReadySystem } from './propsReadySystem'\nimport { domIOSystem } from './domIOSystem'\n\nexport const initialScrollTopSystem = u.system(\n  ([{ totalListHeight }, { didMount }, { scrollTo }]) => {\n    const initialScrollTop = u.statefulStream(0)\n\n    u.subscribe(\n      u.pipe(\n        didMount,\n        u.withLatestFrom(initialScrollTop),\n        u.filter(([, offset]) => offset !== 0),\n        u.map(([, offset]) => ({ top: offset }))\n      ),\n      (location) => {\n        u.handleNext(\n          u.pipe(\n            totalListHeight,\n            u.filter((val) => val !== 0)\n          ),\n          () => {\n            setTimeout(() => {\n              u.publish(scrollTo, location)\n            })\n          }\n        )\n      }\n    )\n\n    return {\n      initialScrollTop,\n    }\n  },\n  u.tup(totalListHeightSystem, propsReadySystem, domIOSystem),\n  { singleton: true }\n)\n","import * as u from '@virtuoso.dev/urx'\nimport { totalListHeightSystem } from './totalListHeightSystem'\nimport { domIOSystem } from './domIOSystem'\n\nexport const alignToBottomSystem = u.system(\n  ([{ viewportHeight }, { totalListHeight }]) => {\n    const alignToBottom = u.statefulStream(false)\n\n    const paddingTopAddition = u.statefulStreamFromEmitter(\n      u.pipe(\n        u.combineLatest(alignToBottom, viewportHeight, totalListHeight),\n        u.filter(([enabled]) => enabled),\n        u.map(([, viewportHeight, totalListHeight]) => {\n          return Math.max(0, viewportHeight - totalListHeight)\n        }),\n        u.distinctUntilChanged()\n      ),\n      0\n    )\n\n    return { alignToBottom, paddingTopAddition }\n  },\n  u.tup(domIOSystem, totalListHeightSystem),\n  { singleton: true }\n)\n","import * as u from '@virtuoso.dev/urx'\nimport { domIOSystem } from './domIOSystem'\nimport { WindowViewportInfo, ScrollContainerState } from './interfaces'\n\nexport const windowScrollerSystem = u.system(([{ scrollTo, scrollContainerState }]) => {\n  const windowScrollContainerState = u.stream<ScrollContainerState>()\n  const windowViewportRect = u.stream<WindowViewportInfo>()\n  const windowScrollTo = u.stream<ScrollToOptions>()\n  const useWindowScroll = u.statefulStream(false)\n  const customScrollParent = u.statefulStream<HTMLElement | undefined>(undefined)\n\n  u.connect(\n    u.pipe(\n      u.combineLatest(windowScrollContainerState, windowViewportRect),\n      u.map(([{ viewportHeight, scrollTop: windowScrollTop, scrollHeight }, { offsetTop }]) => {\n        return {\n          scrollTop: Math.max(0, windowScrollTop - offsetTop),\n          scrollHeight,\n          viewportHeight,\n        }\n      })\n    ),\n    scrollContainerState\n  )\n\n  u.connect(\n    u.pipe(\n      scrollTo,\n      u.withLatestFrom(windowViewportRect),\n      u.map(([scrollTo, { offsetTop }]) => {\n        return {\n          ...scrollTo,\n          top: scrollTo.top! + offsetTop,\n        }\n      })\n    ),\n    windowScrollTo\n  )\n\n  return {\n    // config\n    useWindowScroll,\n    customScrollParent,\n\n    // input\n    windowScrollContainerState,\n    windowViewportRect,\n\n    // signals\n    windowScrollTo,\n  }\n}, u.tup(domIOSystem))\n","import * as u from '@virtuoso.dev/urx'\nimport { findMaxKeyValue } from './AATree'\nimport { domIOSystem } from './domIOSystem'\nimport { offsetOf, originalIndexFromLocation, sizeSystem } from './sizeSystem'\nimport { loggerSystem } from './loggerSystem'\nimport { scrollToIndexSystem } from './scrollToIndexSystem'\nimport { listStateSystem } from './listStateSystem'\nimport { ScrollIntoViewLocation } from './interfaces'\n\nexport const scrollIntoViewSystem = u.system(\n  ([\n    { sizes, totalCount, gap },\n    { scrollTop, viewportHeight, headerHeight, fixedHeaderHeight, fixedFooterHeight, scrollingInProgress },\n    { scrollToIndex },\n  ]) => {\n    const scrollIntoView = u.stream<ScrollIntoViewLocation>()\n\n    u.connect(\n      u.pipe(\n        scrollIntoView,\n        u.withLatestFrom(sizes, viewportHeight, totalCount, headerHeight, fixedHeaderHeight, fixedFooterHeight, scrollTop),\n        u.withLatestFrom(gap),\n        u.map(([[viewLocation, sizes, viewportHeight, totalCount, headerHeight, fixedHeaderHeight, fixedFooterHeight, scrollTop], gap]) => {\n          const { done, behavior, align, ...rest } = viewLocation\n          let location = null\n          const actualIndex = originalIndexFromLocation(viewLocation, sizes, totalCount - 1)\n\n          const itemTop = offsetOf(actualIndex, sizes.offsetTree, gap) + headerHeight + fixedHeaderHeight\n          if (itemTop < scrollTop + fixedHeaderHeight) {\n            location = { ...rest, behavior, align: align ?? 'start' }\n          } else {\n            const itemBottom = itemTop + findMaxKeyValue(sizes.sizeTree, actualIndex)[1]!\n\n            if (itemBottom > scrollTop + viewportHeight - fixedFooterHeight) {\n              location = { ...rest, behavior, align: align ?? 'end' }\n            }\n          }\n\n          if (location) {\n            done &&\n              u.handleNext(\n                u.pipe(\n                  scrollingInProgress,\n                  u.skip(1),\n                  u.filter((value) => value === false)\n                ),\n                done\n              )\n          } else {\n            done && done()\n          }\n\n          return location\n        }),\n        u.filter((value) => value !== null)\n      ),\n      scrollToIndex\n    )\n\n    return {\n      scrollIntoView,\n    }\n  },\n  u.tup(sizeSystem, domIOSystem, scrollToIndexSystem, listStateSystem, loggerSystem),\n  { singleton: true }\n)\n","import * as u from '@virtuoso.dev/urx'\nimport { domIOSystem } from './domIOSystem'\nimport { followOutputSystem } from './followOutputSystem'\nimport { groupedListSystem } from './groupedListSystem'\nimport { initialItemCountSystem } from './initialItemCountSystem'\nimport { initialTopMostItemIndexSystem } from './initialTopMostItemIndexSystem'\nimport { listStateSystem } from './listStateSystem'\nimport { propsReadySystem } from './propsReadySystem'\nimport { scrollSeekSystem } from './scrollSeekSystem'\nimport { scrollToIndexSystem } from './scrollToIndexSystem'\nimport { sizeRangeSystem } from './sizeRangeSystem'\nimport { sizeSystem } from './sizeSystem'\nimport { topItemCountSystem } from './topItemCountSystem'\nimport { totalListHeightSystem } from './totalListHeightSystem'\nimport { upwardScrollFixSystem } from './upwardScrollFixSystem'\nimport { initialScrollTopSystem } from './initialScrollTopSystem'\nimport { alignToBottomSystem } from './alignToBottomSystem'\nimport { windowScrollerSystem } from './windowScrollerSystem'\nimport { loggerSystem } from './loggerSystem'\nimport { scrollIntoViewSystem } from './scrollIntoViewSystem'\n\n// workaround the growing list of systems below\n// fix this with 4.1 recursive conditional types\nconst featureGroup1System = u.system(\n  ([\n    sizeRange,\n    initialItemCount,\n    propsReady,\n    scrollSeek,\n    totalListHeight,\n    initialScrollTopSystem,\n    alignToBottom,\n    windowScroller,\n    scrollIntoView,\n  ]) => {\n    return {\n      ...sizeRange,\n      ...initialItemCount,\n      ...propsReady,\n      ...scrollSeek,\n      ...totalListHeight,\n      ...initialScrollTopSystem,\n      ...alignToBottom,\n      ...windowScroller,\n      ...scrollIntoView,\n    }\n  },\n  u.tup(\n    sizeRangeSystem,\n    initialItemCountSystem,\n    propsReadySystem,\n    scrollSeekSystem,\n    totalListHeightSystem,\n    initialScrollTopSystem,\n    alignToBottomSystem,\n    windowScrollerSystem,\n    scrollIntoViewSystem\n  )\n)\n\nexport const listSystem = u.system(\n  ([\n    {\n      totalCount,\n      sizeRanges,\n      fixedItemSize,\n      defaultItemSize,\n      trackItemSizes,\n      itemSize,\n      data,\n      firstItemIndex,\n      groupIndices,\n      statefulTotalCount,\n      gap,\n    },\n    { initialTopMostItemIndex, scrolledToInitialItem },\n    domIO,\n    followOutput,\n    { listState, topItemsIndexes, ...flags },\n    { scrollToIndex },\n    _,\n    { topItemCount },\n    { groupCounts },\n    featureGroup1,\n    log,\n  ]) => {\n    u.connect(flags.rangeChanged, featureGroup1.scrollSeekRangeChanged)\n    u.connect(\n      u.pipe(\n        featureGroup1.windowViewportRect,\n        u.map((value) => value.visibleHeight)\n      ),\n      domIO.viewportHeight\n    )\n\n    return {\n      // input\n      totalCount,\n      data,\n      firstItemIndex,\n      sizeRanges,\n      initialTopMostItemIndex,\n      scrolledToInitialItem,\n      topItemsIndexes,\n      topItemCount,\n      groupCounts,\n      fixedItemHeight: fixedItemSize,\n      defaultItemHeight: defaultItemSize,\n      gap,\n      ...followOutput,\n\n      // output\n      statefulTotalCount,\n      listState,\n      scrollToIndex,\n      trackItemSizes,\n      itemSize,\n      groupIndices,\n\n      // exported from stateFlagsSystem\n      ...flags,\n      // the bag of IO from featureGroup1System\n      ...featureGroup1,\n      ...domIO,\n      ...log,\n    }\n  },\n  u.tup(\n    sizeSystem,\n    initialTopMostItemIndexSystem,\n    domIOSystem,\n    followOutputSystem,\n    listStateSystem,\n    scrollToIndexSystem,\n    upwardScrollFixSystem,\n    topItemCountSystem,\n    groupedListSystem,\n    featureGroup1System,\n    loggerSystem\n  )\n)\n","import { simpleMemoize } from './simpleMemoize'\n\nconst WEBKIT_STICKY = '-webkit-sticky'\nconst STICKY = 'sticky'\n\nexport const positionStickyCssValue = simpleMemoize(() => {\n  if (typeof document === 'undefined') {\n    return STICKY\n  }\n  const node = document.createElement('div')\n  node.style.position = WEBKIT_STICKY\n  return node.style.position === WEBKIT_STICKY ? WEBKIT_STICKY : STICKY\n})\n","import { useEffect, useRef, useCallback } from 'react'\nimport { useSizeWithElRef } from './useSize'\nimport { WindowViewportInfo } from '../interfaces'\n\nexport default function useWindowViewportRectRef(callback: (info: WindowViewportInfo) => void, customScrollParent?: HTMLElement) {\n  const viewportInfo = useRef<WindowViewportInfo | null>(null)\n\n  const calculateInfo = useCallback(\n    (element: HTMLElement | null) => {\n      if (element === null || !element.offsetParent) {\n        return\n      }\n      const rect = element.getBoundingClientRect()\n      const visibleWidth = rect.width\n      let visibleHeight: number, offsetTop: number\n\n      if (customScrollParent) {\n        const customScrollParentRect = customScrollParent.getBoundingClientRect()\n        const deltaTop = rect.top - customScrollParentRect.top\n\n        visibleHeight = customScrollParentRect.height - Math.max(0, deltaTop)\n        offsetTop = deltaTop + customScrollParent.scrollTop\n      } else {\n        visibleHeight = window.innerHeight - Math.max(0, rect.top)\n        offsetTop = rect.top + window.pageYOffset\n      }\n\n      viewportInfo.current = {\n        offsetTop,\n        visibleHeight,\n        visibleWidth,\n      }\n\n      callback(viewportInfo.current)\n    },\n    [callback, customScrollParent]\n  )\n\n  const { callbackRef, ref } = useSizeWithElRef(calculateInfo)\n\n  const scrollAndResizeEventHandler = useCallback(() => {\n    calculateInfo(ref.current)\n  }, [calculateInfo, ref])\n\n  useEffect(() => {\n    if (customScrollParent) {\n      customScrollParent.addEventListener('scroll', scrollAndResizeEventHandler)\n      const observer = new ResizeObserver(scrollAndResizeEventHandler)\n      observer.observe(customScrollParent)\n      return () => {\n        customScrollParent.removeEventListener('scroll', scrollAndResizeEventHandler)\n        observer.unobserve(customScrollParent)\n      }\n    } else {\n      window.addEventListener('scroll', scrollAndResizeEventHandler)\n      window.addEventListener('resize', scrollAndResizeEventHandler)\n      return () => {\n        window.removeEventListener('scroll', scrollAndResizeEventHandler)\n        window.removeEventListener('resize', scrollAndResizeEventHandler)\n      }\n    }\n  }, [scrollAndResizeEventHandler, customScrollParent])\n\n  return callbackRef\n}\n","import * as React from 'react'\n\nexport interface VirtuosoMockContextValue {\n  viewportHeight: number\n  itemHeight: number\n}\n\nexport const VirtuosoMockContext = React.createContext<VirtuosoMockContextValue | undefined>(undefined)\n","import { RefHandle, systemToComponent } from '@virtuoso.dev/react-urx'\nimport * as u from '@virtuoso.dev/urx'\nimport * as React from 'react'\nimport { ComponentType, createElement, CSSProperties, FC, PropsWithChildren, useContext } from 'react'\nimport useIsomorphicLayoutEffect from './hooks/useIsomorphicLayoutEffect'\nimport useChangedListContentsSizes from './hooks/useChangedChildSizes'\nimport useScrollTop from './hooks/useScrollTop'\nimport useSize from './hooks/useSize'\nimport { Components, ComputeItemKey, GroupContent, GroupItemContent, ItemContent, ListRootProps } from './interfaces'\nimport { listSystem } from './listSystem'\nimport { positionStickyCssValue } from './utils/positionStickyCssValue'\nimport useWindowViewportRectRef from './hooks/useWindowViewportRect'\nimport { correctItemSize } from './utils/correctItemSize'\nimport { VirtuosoMockContext } from './utils/context'\nimport { ScrollerProps } from '.'\n\nexport function identity<T>(value: T) {\n  return value\n}\n\nconst listComponentPropsSystem = u.system(() => {\n  const itemContent = u.statefulStream<ItemContent<any, any> | GroupItemContent<any, any>>((index: number) => `Item ${index}`)\n  const context = u.statefulStream<unknown>(null)\n  const groupContent = u.statefulStream<GroupContent>((index: number) => `Group ${index}`)\n  const components = u.statefulStream<Components<any>>({})\n  const computeItemKey = u.statefulStream<ComputeItemKey<any, any>>(identity)\n  const headerFooterTag = u.statefulStream('div')\n  const scrollerRef = u.statefulStream<(ref: HTMLElement | Window | null) => void>(u.noop)\n\n  const distinctProp = <K extends keyof Components<any>>(propName: K, defaultValue: Components<any>[K] | null | 'div' = null) => {\n    return u.statefulStreamFromEmitter(\n      u.pipe(\n        components,\n        u.map((components) => components[propName]),\n        u.distinctUntilChanged()\n      ),\n      defaultValue\n    )\n  }\n\n  return {\n    context,\n    itemContent,\n    groupContent,\n    components,\n    computeItemKey,\n    headerFooterTag,\n    scrollerRef,\n    FooterComponent: distinctProp('Footer'),\n    HeaderComponent: distinctProp('Header'),\n    TopItemListComponent: distinctProp('TopItemList'),\n    ListComponent: distinctProp('List', 'div'),\n    ItemComponent: distinctProp('Item', 'div'),\n    GroupComponent: distinctProp('Group', 'div'),\n    ScrollerComponent: distinctProp('Scroller', 'div'),\n    EmptyPlaceholder: distinctProp('EmptyPlaceholder'),\n    ScrollSeekPlaceholder: distinctProp('ScrollSeekPlaceholder'),\n  }\n})\n\nexport function addDeprecatedAlias<T>(prop: u.Stream<T>, message: string) {\n  const alias = u.stream<T>()\n  u.subscribe(alias, () =>\n    console.warn(`react-virtuoso: You are using a deprecated property. ${message}`, 'color: red;', 'color: inherit;', 'color: blue;')\n  )\n  u.connect(alias, prop)\n  return alias\n}\n\nconst combinedSystem = u.system(([listSystem, propsSystem]) => {\n  const deprecatedProps = {\n    item: addDeprecatedAlias(propsSystem.itemContent, 'Rename the %citem%c prop to %citemContent.'),\n    group: addDeprecatedAlias(propsSystem.groupContent, 'Rename the %cgroup%c prop to %cgroupContent.'),\n    topItems: addDeprecatedAlias(listSystem.topItemCount, 'Rename the %ctopItems%c prop to %ctopItemCount.'),\n    itemHeight: addDeprecatedAlias(listSystem.fixedItemHeight, 'Rename the %citemHeight%c prop to %cfixedItemHeight.'),\n    scrollingStateChange: addDeprecatedAlias(listSystem.isScrolling, 'Rename the %cscrollingStateChange%c prop to %cisScrolling.'),\n    adjustForPrependedItems: u.stream<any>(),\n    maxHeightCacheSize: u.stream<any>(),\n    footer: u.stream<any>(),\n    header: u.stream<any>(),\n    HeaderContainer: u.stream<any>(),\n    FooterContainer: u.stream<any>(),\n    ItemContainer: u.stream<any>(),\n    ScrollContainer: u.stream<any>(),\n    GroupContainer: u.stream<any>(),\n    ListContainer: u.stream<any>(),\n    emptyComponent: u.stream<any>(),\n    scrollSeek: u.stream<any>(),\n  }\n\n  u.subscribe(deprecatedProps.adjustForPrependedItems, () => {\n    console.warn(\n      `react-virtuoso: adjustForPrependedItems is no longer supported. Use the firstItemIndex property instead - https://virtuoso.dev/prepend-items.`,\n      'color: red;',\n      'color: inherit;',\n      'color: blue;'\n    )\n  })\n\n  u.subscribe(deprecatedProps.maxHeightCacheSize, () => {\n    console.warn(`react-virtuoso: maxHeightCacheSize is no longer necessary. Setting it has no effect - remove it from your code.`)\n  })\n\n  u.subscribe(deprecatedProps.HeaderContainer, () => {\n    console.warn(\n      `react-virtuoso: HeaderContainer is deprecated. Use headerFooterTag if you want to change the wrapper of the header component and pass components.Header to change its contents.`\n    )\n  })\n\n  u.subscribe(deprecatedProps.FooterContainer, () => {\n    console.warn(\n      `react-virtuoso: FooterContainer is deprecated. Use headerFooterTag if you want to change the wrapper of the footer component and pass components.Footer to change its contents.`\n    )\n  })\n\n  function deprecateComponentProp(stream: u.Stream<any>, componentName: string, propName: string) {\n    u.connect(\n      u.pipe(\n        stream,\n        u.withLatestFrom(propsSystem.components),\n        u.map(([comp, components]) => {\n          console.warn(`react-virtuoso: ${propName} property is deprecated. Pass components.${componentName} instead.`)\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n          return { ...components, [componentName]: comp }\n        })\n      ),\n      propsSystem.components\n    )\n  }\n\n  u.subscribe(deprecatedProps.scrollSeek, ({ placeholder, ...config }) => {\n    console.warn(\n      `react-virtuoso: scrollSeek property is deprecated. Pass scrollSeekConfiguration and specify the placeholder in components.ScrollSeekPlaceholder instead.`\n    )\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    u.publish(propsSystem.components, { ...u.getValue(propsSystem.components), ScrollSeekPlaceholder: placeholder })\n    u.publish(listSystem.scrollSeekConfiguration, config)\n  })\n\n  deprecateComponentProp(deprecatedProps.footer, 'Footer', 'footer')\n  deprecateComponentProp(deprecatedProps.header, 'Header', 'header')\n  deprecateComponentProp(deprecatedProps.ItemContainer, 'Item', 'ItemContainer')\n  deprecateComponentProp(deprecatedProps.ListContainer, 'List', 'ListContainer')\n  deprecateComponentProp(deprecatedProps.ScrollContainer, 'Scroller', 'ScrollContainer')\n  deprecateComponentProp(deprecatedProps.emptyComponent, 'EmptyPlaceholder', 'emptyComponent')\n  deprecateComponentProp(deprecatedProps.GroupContainer, 'Group', 'GroupContainer')\n\n  return { ...listSystem, ...propsSystem, ...deprecatedProps }\n}, u.tup(listSystem, listComponentPropsSystem))\n\nconst DefaultScrollSeekPlaceholder = ({ height }: { height: number }) => <div style={{ height }}></div>\n\nconst GROUP_STYLE = { position: positionStickyCssValue(), zIndex: 1, overflowAnchor: 'none' } as const\nconst ITEM_STYLE = { overflowAnchor: 'none' } as const\n\nexport const Items = React.memo(function VirtuosoItems({ showTopList = false }: { showTopList?: boolean }) {\n  const listState = useEmitterValue('listState')\n\n  const sizeRanges = usePublisher('sizeRanges')\n  const useWindowScroll = useEmitterValue('useWindowScroll')\n  const customScrollParent = useEmitterValue('customScrollParent')\n  const windowScrollContainerStateCallback = usePublisher('windowScrollContainerState')\n  const _scrollContainerStateCallback = usePublisher('scrollContainerState')\n  const scrollContainerStateCallback =\n    customScrollParent || useWindowScroll ? windowScrollContainerStateCallback : _scrollContainerStateCallback\n  const itemContent = useEmitterValue('itemContent')\n  const context = useEmitterValue('context')\n  const groupContent = useEmitterValue('groupContent')\n  const trackItemSizes = useEmitterValue('trackItemSizes')\n  const itemSize = useEmitterValue('itemSize')\n  const log = useEmitterValue('log')\n  const listGap = usePublisher('gap')\n\n  const { callbackRef } = useChangedListContentsSizes(\n    sizeRanges,\n    itemSize,\n    trackItemSizes,\n    showTopList ? u.noop : scrollContainerStateCallback,\n    log,\n    listGap,\n    customScrollParent\n  )\n\n  const [deviation, setDeviation] = React.useState(0)\n  useEmitter('deviation', (value) => {\n    if (deviation !== value) {\n      // ref.current!.style.marginTop = `${value}px`\n      setDeviation(value)\n    }\n  })\n\n  const EmptyPlaceholder = useEmitterValue('EmptyPlaceholder')\n  const ScrollSeekPlaceholder = useEmitterValue('ScrollSeekPlaceholder') || DefaultScrollSeekPlaceholder\n  const ListComponent = useEmitterValue('ListComponent')!\n  const ItemComponent = useEmitterValue('ItemComponent')!\n  const GroupComponent = useEmitterValue('GroupComponent')!\n  const computeItemKey = useEmitterValue('computeItemKey')\n  const isSeeking = useEmitterValue('isSeeking')\n  const hasGroups = useEmitterValue('groupIndices').length > 0\n  const paddingTopAddition = useEmitterValue('paddingTopAddition')\n\n  const containerStyle: CSSProperties = showTopList\n    ? {}\n    : {\n        boxSizing: 'border-box',\n        paddingTop: listState.offsetTop + paddingTopAddition,\n        paddingBottom: listState.offsetBottom,\n        marginTop: deviation,\n      }\n\n  if (!showTopList && listState.totalCount === 0 && EmptyPlaceholder) {\n    return createElement(EmptyPlaceholder, contextPropIfNotDomElement(EmptyPlaceholder, context))\n  }\n\n  return createElement(\n    ListComponent,\n    {\n      ...contextPropIfNotDomElement(ListComponent, context),\n      ref: callbackRef,\n      style: containerStyle,\n      'data-test-id': showTopList ? 'virtuoso-top-item-list' : 'virtuoso-item-list',\n    },\n    (showTopList ? listState.topItems : listState.items).map((item) => {\n      const index = item.originalIndex!\n      const key = computeItemKey(index + listState.firstItemIndex, item.data, context)\n\n      if (isSeeking) {\n        return createElement(ScrollSeekPlaceholder, {\n          ...contextPropIfNotDomElement(ScrollSeekPlaceholder, context),\n          key,\n          index: item.index,\n          height: item.size,\n          type: item.type || 'item',\n          ...(item.type === 'group' ? {} : { groupIndex: item.groupIndex }),\n        })\n      }\n\n      if (item.type === 'group') {\n        return createElement(\n          GroupComponent,\n          {\n            ...contextPropIfNotDomElement(GroupComponent, context),\n            key,\n            'data-index': index,\n            'data-known-size': item.size,\n            'data-item-index': item.index,\n            style: GROUP_STYLE,\n          },\n          groupContent(item.index)\n        )\n      } else {\n        return createElement(\n          ItemComponent,\n          {\n            ...contextPropIfNotDomElement(ItemComponent, context),\n            key,\n            'data-index': index,\n            'data-known-size': item.size,\n            'data-item-index': item.index,\n            'data-item-group-index': item.groupIndex,\n            style: ITEM_STYLE,\n          },\n          hasGroups\n            ? (itemContent as GroupItemContent<any, any>)(item.index, item.groupIndex!, item.data, context)\n            : (itemContent as ItemContent<any, any>)(item.index, item.data, context)\n        )\n      }\n    })\n  )\n})\n\nexport const scrollerStyle: CSSProperties = {\n  height: '100%',\n  outline: 'none',\n  overflowY: 'auto',\n  position: 'relative',\n  WebkitOverflowScrolling: 'touch',\n}\n\nexport const viewportStyle: CSSProperties = {\n  width: '100%',\n  height: '100%',\n  position: 'absolute',\n  top: 0,\n}\n\nconst topItemListStyle: CSSProperties = {\n  width: '100%',\n  position: positionStickyCssValue(),\n  top: 0,\n}\n\nexport function contextPropIfNotDomElement(element: unknown, context: unknown) {\n  if (typeof element === 'string') {\n    return undefined\n  }\n  return { context }\n}\n\nconst Header: FC = React.memo(function VirtuosoHeader() {\n  const Header = useEmitterValue('HeaderComponent')\n  const headerHeight = usePublisher('headerHeight')\n  const headerFooterTag = useEmitterValue('headerFooterTag')\n  const ref = useSize((el) => headerHeight(correctItemSize(el, 'height')))\n  const context = useEmitterValue('context')\n  return Header ? createElement(headerFooterTag, { ref }, createElement(Header, contextPropIfNotDomElement(Header, context))) : null\n})\n\nconst Footer: FC = React.memo(function VirtuosoFooter() {\n  const Footer = useEmitterValue('FooterComponent')\n  const footerHeight = usePublisher('footerHeight')\n  const headerFooterTag = useEmitterValue('headerFooterTag')\n  const ref = useSize((el) => footerHeight(correctItemSize(el, 'height')))\n  const context = useEmitterValue('context')\n  return Footer ? createElement(headerFooterTag, { ref }, createElement(Footer, contextPropIfNotDomElement(Footer, context))) : null\n})\n\nexport interface Hooks {\n  usePublisher: typeof usePublisher\n  useEmitterValue: typeof useEmitterValue\n  useEmitter: typeof useEmitter\n}\n\nexport function buildScroller({ usePublisher, useEmitter, useEmitterValue }: Hooks) {\n  const Scroller: ComponentType<ScrollerProps> = React.memo(function VirtuosoScroller({ style, children, ...props }) {\n    const scrollContainerStateCallback = usePublisher('scrollContainerState')\n    const ScrollerComponent = useEmitterValue('ScrollerComponent')!\n    const smoothScrollTargetReached = usePublisher('smoothScrollTargetReached')\n    const scrollerRefCallback = useEmitterValue('scrollerRef')\n    const context = useEmitterValue('context')\n\n    const { scrollerRef, scrollByCallback, scrollToCallback } = useScrollTop(\n      scrollContainerStateCallback,\n      smoothScrollTargetReached,\n      ScrollerComponent,\n      scrollerRefCallback\n    )\n\n    useEmitter('scrollTo', scrollToCallback)\n    useEmitter('scrollBy', scrollByCallback)\n    return createElement(\n      ScrollerComponent,\n      {\n        ref: scrollerRef as React.MutableRefObject<HTMLDivElement | null>,\n        style: { ...scrollerStyle, ...style },\n        'data-test-id': 'virtuoso-scroller',\n        'data-virtuoso-scroller': true,\n        tabIndex: 0,\n        ...props,\n        ...contextPropIfNotDomElement(ScrollerComponent, context),\n      },\n      children\n    )\n  })\n  return Scroller\n}\n\nexport function buildWindowScroller({ usePublisher, useEmitter, useEmitterValue }: Hooks) {\n  const Scroller: Components['Scroller'] = React.memo(function VirtuosoWindowScroller({ style, children, ...props }) {\n    const scrollContainerStateCallback = usePublisher('windowScrollContainerState')\n    const ScrollerComponent = useEmitterValue('ScrollerComponent')!\n    const smoothScrollTargetReached = usePublisher('smoothScrollTargetReached')\n    const totalListHeight = useEmitterValue('totalListHeight')\n    const deviation = useEmitterValue('deviation')\n    const customScrollParent = useEmitterValue('customScrollParent')\n    const context = useEmitterValue('context')\n    const { scrollerRef, scrollByCallback, scrollToCallback } = useScrollTop(\n      scrollContainerStateCallback,\n      smoothScrollTargetReached,\n      ScrollerComponent,\n      u.noop,\n      customScrollParent\n    )\n\n    useIsomorphicLayoutEffect(() => {\n      scrollerRef.current = customScrollParent ? customScrollParent : window\n      return () => {\n        scrollerRef.current = null\n      }\n    }, [scrollerRef, customScrollParent])\n\n    useEmitter('windowScrollTo', scrollToCallback)\n    useEmitter('scrollBy', scrollByCallback)\n    return createElement(\n      ScrollerComponent,\n      {\n        style: { position: 'relative', ...style, ...(totalListHeight !== 0 ? { height: totalListHeight + deviation } : {}) },\n        'data-virtuoso-scroller': true,\n        ...props,\n        ...contextPropIfNotDomElement(ScrollerComponent, context),\n      },\n      children\n    )\n  })\n  return Scroller\n}\n\nconst Viewport: FC<PropsWithChildren<unknown>> = ({ children }) => {\n  const ctx = useContext(VirtuosoMockContext)\n  const viewportHeight = usePublisher('viewportHeight')\n  const fixedItemHeight = usePublisher('fixedItemHeight')\n  const viewportRef = useSize(u.compose(viewportHeight, (el) => correctItemSize(el, 'height')))\n\n  React.useEffect(() => {\n    if (ctx) {\n      viewportHeight(ctx.viewportHeight)\n      fixedItemHeight(ctx.itemHeight)\n    }\n  }, [ctx, viewportHeight, fixedItemHeight])\n\n  return (\n    <div style={viewportStyle} ref={viewportRef} data-viewport-type=\"element\">\n      {children}\n    </div>\n  )\n}\n\nconst WindowViewport: FC<PropsWithChildren<unknown>> = ({ children }) => {\n  const ctx = useContext(VirtuosoMockContext)\n  const windowViewportRect = usePublisher('windowViewportRect')\n  const fixedItemHeight = usePublisher('fixedItemHeight')\n  const customScrollParent = useEmitterValue('customScrollParent')\n  const viewportRef = useWindowViewportRectRef(windowViewportRect, customScrollParent)\n\n  React.useEffect(() => {\n    if (ctx) {\n      fixedItemHeight(ctx.itemHeight)\n      windowViewportRect({ offsetTop: 0, visibleHeight: ctx.viewportHeight, visibleWidth: 100 })\n    }\n  }, [ctx, windowViewportRect, fixedItemHeight])\n\n  return (\n    <div ref={viewportRef} style={viewportStyle} data-viewport-type=\"window\">\n      {children}\n    </div>\n  )\n}\n\nconst TopItemListContainer: FC<PropsWithChildren<unknown>> = ({ children }) => {\n  const TopItemList = useEmitterValue('TopItemListComponent')\n  const headerHeight = useEmitterValue('headerHeight')\n  const style = { ...topItemListStyle, marginTop: `${headerHeight}px` }\n  const context = useEmitterValue('context')\n  return createElement(TopItemList || 'div', { style, context }, children)\n}\n\nconst ListRoot: FC<ListRootProps> = React.memo(function VirtuosoRoot(props) {\n  const useWindowScroll = useEmitterValue('useWindowScroll')\n  const showTopList = useEmitterValue('topItemsIndexes').length > 0\n  const customScrollParent = useEmitterValue('customScrollParent')\n  const TheScroller = customScrollParent || useWindowScroll ? WindowScroller : Scroller\n  const TheViewport = customScrollParent || useWindowScroll ? WindowViewport : Viewport\n  return (\n    <TheScroller {...props}>\n      <TheViewport>\n        <Header />\n        <Items />\n        <Footer />\n      </TheViewport>\n      {showTopList && (\n        <TopItemListContainer>\n          <Items showTopList={true} />\n        </TopItemListContainer>\n      )}\n    </TheScroller>\n  )\n})\n\nexport type ListHandle = RefHandle<typeof List>\n\nexport const {\n  Component: List,\n  usePublisher,\n  useEmitterValue,\n  useEmitter,\n} = systemToComponent(\n  combinedSystem,\n  {\n    required: {},\n    optional: {\n      context: 'context',\n      followOutput: 'followOutput',\n      firstItemIndex: 'firstItemIndex',\n      itemContent: 'itemContent',\n      groupContent: 'groupContent',\n      overscan: 'overscan',\n      increaseViewportBy: 'increaseViewportBy',\n      totalCount: 'totalCount',\n      topItemCount: 'topItemCount',\n      initialTopMostItemIndex: 'initialTopMostItemIndex',\n      components: 'components',\n      groupCounts: 'groupCounts',\n      atBottomThreshold: 'atBottomThreshold',\n      atTopThreshold: 'atTopThreshold',\n      computeItemKey: 'computeItemKey',\n      defaultItemHeight: 'defaultItemHeight',\n      fixedItemHeight: 'fixedItemHeight',\n      itemSize: 'itemSize',\n      scrollSeekConfiguration: 'scrollSeekConfiguration',\n      headerFooterTag: 'headerFooterTag',\n      data: 'data',\n      initialItemCount: 'initialItemCount',\n      initialScrollTop: 'initialScrollTop',\n      alignToBottom: 'alignToBottom',\n      useWindowScroll: 'useWindowScroll',\n      customScrollParent: 'customScrollParent',\n      scrollerRef: 'scrollerRef',\n      logLevel: 'logLevel',\n      react18ConcurrentRendering: 'react18ConcurrentRendering',\n\n      // deprecated\n      item: 'item',\n      group: 'group',\n      topItems: 'topItems',\n      itemHeight: 'itemHeight',\n      scrollingStateChange: 'scrollingStateChange',\n      maxHeightCacheSize: 'maxHeightCacheSize',\n      footer: 'footer',\n      header: 'header',\n      ItemContainer: 'ItemContainer',\n      ScrollContainer: 'ScrollContainer',\n      ListContainer: 'ListContainer',\n      GroupContainer: 'GroupContainer',\n      emptyComponent: 'emptyComponent',\n      HeaderContainer: 'HeaderContainer',\n      FooterContainer: 'FooterContainer',\n      scrollSeek: 'scrollSeek',\n    },\n    methods: {\n      scrollToIndex: 'scrollToIndex',\n      scrollIntoView: 'scrollIntoView',\n      scrollTo: 'scrollTo',\n      scrollBy: 'scrollBy',\n      adjustForPrependedItems: 'adjustForPrependedItems',\n      autoscrollToBottom: 'autoscrollToBottom',\n    },\n    events: {\n      isScrolling: 'isScrolling',\n      endReached: 'endReached',\n      startReached: 'startReached',\n      rangeChanged: 'rangeChanged',\n      atBottomStateChange: 'atBottomStateChange',\n      atTopStateChange: 'atTopStateChange',\n      totalListHeightChanged: 'totalListHeightChanged',\n      itemsRendered: 'itemsRendered',\n      groupIndices: 'groupIndices',\n    },\n  },\n  ListRoot\n)\n\nconst Scroller = buildScroller({ usePublisher, useEmitterValue, useEmitter })\nconst WindowScroller = buildWindowScroller({ usePublisher, useEmitterValue, useEmitter })\n","import * as u from '@virtuoso.dev/urx'\nimport { rangeComparator, tupleComparator } from './comparators'\nimport { domIOSystem } from './domIOSystem'\nimport { FlatIndexLocationWithAlign } from './interfaces'\nimport { propsReadySystem } from './propsReadySystem'\nimport { scrollSeekSystem } from './scrollSeekSystem'\nimport { IndexLocation, normalizeIndexLocation } from './scrollToIndexSystem'\nimport { sizeRangeSystem } from './sizeRangeSystem'\nimport { stateFlagsSystem } from './stateFlagsSystem'\nimport { loggerSystem } from './loggerSystem'\nimport { windowScrollerSystem } from './windowScrollerSystem'\n\nexport interface Gap {\n  row: number\n  column: number\n}\n\nexport interface ElementDimensions {\n  width: number\n  height: number\n}\n\nexport interface GridItem {\n  index: number\n}\n\nexport interface GridLayout {\n  top: number\n  bottom: number\n}\n\nexport interface GridState extends GridLayout {\n  items: GridItem[]\n  offsetTop: number\n  offsetBottom: number\n  itemHeight: number\n  itemWidth: number\n}\n\nconst INITIAL_GRID_STATE: GridState = {\n  items: [],\n  offsetBottom: 0,\n  offsetTop: 0,\n  top: 0,\n  bottom: 0,\n  itemHeight: 0,\n  itemWidth: 0,\n}\n\nconst PROBE_GRID_STATE: GridState = {\n  items: [{ index: 0 }],\n  offsetBottom: 0,\n  offsetTop: 0,\n  top: 0,\n  bottom: 0,\n  itemHeight: 0,\n  itemWidth: 0,\n}\n\nconst { round, ceil, floor, min, max } = Math\n\nfunction buildItems(startIndex: number, endIndex: number) {\n  return Array.from({ length: endIndex - startIndex + 1 }).map((_, i) => ({ index: i + startIndex } as GridItem))\n}\n\nfunction gapComparator(prev: Gap, next: Gap) {\n  return prev && prev.column === next.column && prev.row === next.row\n}\nexport const gridSystem = u.system(\n  ([\n    { overscan, visibleRange, listBoundary },\n    { scrollTop, viewportHeight, scrollBy, scrollTo, smoothScrollTargetReached, scrollContainerState },\n    stateFlags,\n    scrollSeek,\n    { propsReady, didMount },\n    { windowViewportRect, windowScrollTo, useWindowScroll, customScrollParent, windowScrollContainerState },\n    log,\n  ]) => {\n    const totalCount = u.statefulStream(0)\n    const initialItemCount = u.statefulStream(0)\n    const gridState = u.statefulStream(INITIAL_GRID_STATE)\n    const viewportDimensions = u.statefulStream<ElementDimensions>({ height: 0, width: 0 })\n    const itemDimensions = u.statefulStream<ElementDimensions>({ height: 0, width: 0 })\n    const scrollToIndex = u.stream<IndexLocation>()\n    const scrollHeight = u.stream<number>()\n    const deviation = u.statefulStream(0)\n    const gap = u.statefulStream<Gap>({ row: 0, column: 0 })\n\n    u.connect(\n      u.pipe(\n        didMount,\n        u.withLatestFrom(initialItemCount),\n        u.filter(([, count]) => count !== 0),\n        u.map(([, count]) => {\n          return {\n            items: buildItems(0, count - 1),\n            top: 0,\n            bottom: 0,\n            offsetBottom: 0,\n            offsetTop: 0,\n            itemHeight: 0,\n            itemWidth: 0,\n          }\n        })\n      ),\n      gridState\n    )\n\n    u.connect(\n      u.pipe(\n        u.combineLatest(\n          u.duc(totalCount),\n          visibleRange,\n          u.duc(gap, gapComparator),\n          u.duc(itemDimensions, (prev, next) => prev && prev.width === next.width && prev.height === next.height)\n        ),\n        u.withLatestFrom(viewportDimensions),\n        u.map(([[totalCount, [startOffset, endOffset], gap, item], viewport]) => {\n          const { row: rowGap, column: columnGap } = gap\n          const { height: itemHeight, width: itemWidth } = item\n          const { width: viewportWidth } = viewport\n\n          if (totalCount === 0 || viewportWidth === 0) {\n            return INITIAL_GRID_STATE\n          }\n\n          if (itemWidth === 0) {\n            return PROBE_GRID_STATE\n          }\n\n          const perRow = itemsPerRow(viewportWidth, itemWidth, columnGap)\n\n          let startIndex = perRow * floor((startOffset + rowGap) / (itemHeight + rowGap))\n          let endIndex = perRow * ceil((endOffset + rowGap) / (itemHeight + rowGap)) - 1\n          endIndex = max(0, min(totalCount - 1, endIndex))\n          startIndex = min(endIndex, max(0, startIndex))\n\n          const items = buildItems(startIndex, endIndex)\n          const { top, bottom } = gridLayout(viewport, gap, item, items)\n          const rowCount = ceil(totalCount / perRow)\n          const totalHeight = rowCount * itemHeight + (rowCount - 1) * rowGap\n          const offsetBottom = totalHeight - bottom\n\n          return { items, offsetTop: top, offsetBottom, top, bottom, itemHeight, itemWidth } as GridState\n        })\n      ),\n      gridState\n    )\n\n    u.connect(\n      u.pipe(\n        viewportDimensions,\n        u.map(({ height }) => height)\n      ),\n      viewportHeight\n    )\n\n    u.connect(\n      u.pipe(\n        u.combineLatest(viewportDimensions, itemDimensions, gridState, gap),\n        u.map(([viewportDimensions, item, { items }, gap]) => {\n          const { top, bottom } = gridLayout(viewportDimensions, gap, item, items)\n\n          return [top, bottom] as [number, number]\n        }),\n        u.distinctUntilChanged(tupleComparator)\n      ),\n      listBoundary\n    )\n\n    const endReached = u.streamFromEmitter(\n      u.pipe(\n        u.duc(gridState),\n        u.filter(({ items }) => items.length > 0),\n        u.withLatestFrom(totalCount),\n        u.filter(([{ items }, totalCount]) => items[items.length - 1].index === totalCount - 1),\n        u.map(([, totalCount]) => totalCount - 1),\n        u.distinctUntilChanged()\n      )\n    )\n\n    const startReached = u.streamFromEmitter(\n      u.pipe(\n        u.duc(gridState),\n        u.filter(({ items }) => {\n          return items.length > 0 && items[0].index === 0\n        }),\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        u.mapTo(0),\n        u.distinctUntilChanged()\n      )\n    )\n\n    const rangeChanged = u.streamFromEmitter(\n      u.pipe(\n        u.duc(gridState),\n        u.filter(({ items }) => items.length > 0),\n        u.map(({ items }) => {\n          return {\n            startIndex: items[0].index,\n            endIndex: items[items.length - 1].index,\n          }\n        }),\n        u.distinctUntilChanged(rangeComparator)\n      )\n    )\n\n    u.connect(rangeChanged, scrollSeek.scrollSeekRangeChanged)\n\n    u.connect(\n      u.pipe(\n        scrollToIndex,\n        u.withLatestFrom(viewportDimensions, itemDimensions, totalCount, gap),\n        u.map(([location, viewport, item, totalCount, gap]) => {\n          const normalLocation = normalizeIndexLocation(location) as FlatIndexLocationWithAlign\n          const { align, behavior, offset } = normalLocation\n          let index = normalLocation.index\n          if (index === 'LAST') {\n            index = totalCount - 1\n          }\n\n          index = max(0, index, min(totalCount - 1, index))\n\n          let top = itemTop(viewport, gap, item, index)\n\n          if (align === 'end') {\n            top = round(top - viewport.height + item.height)\n          } else if (align === 'center') {\n            top = round(top - viewport.height / 2 + item.height / 2)\n          }\n\n          if (offset) {\n            top += offset\n          }\n\n          return { top, behavior }\n        })\n      ),\n      scrollTo\n    )\n\n    const totalListHeight = u.statefulStreamFromEmitter(\n      u.pipe(\n        gridState,\n        u.map((gridState) => {\n          return gridState.offsetBottom + gridState.bottom\n        })\n      ),\n      0\n    )\n\n    u.connect(\n      u.pipe(\n        windowViewportRect,\n        u.map((viewportInfo) => ({ width: viewportInfo.visibleWidth, height: viewportInfo.visibleHeight }))\n      ),\n      viewportDimensions\n    )\n\n    return {\n      // input\n      totalCount,\n      viewportDimensions,\n      itemDimensions,\n      scrollTop,\n      scrollHeight,\n      overscan,\n      scrollBy,\n      scrollTo,\n      scrollToIndex,\n      smoothScrollTargetReached,\n      windowViewportRect,\n      windowScrollTo,\n      useWindowScroll,\n      customScrollParent,\n      windowScrollContainerState,\n      deviation,\n      scrollContainerState,\n      initialItemCount,\n      gap,\n      ...scrollSeek,\n\n      // output\n      gridState,\n      totalListHeight,\n      ...stateFlags,\n      startReached,\n      endReached,\n      rangeChanged,\n      propsReady,\n      ...log,\n    }\n  },\n  u.tup(sizeRangeSystem, domIOSystem, stateFlagsSystem, scrollSeekSystem, propsReadySystem, windowScrollerSystem, loggerSystem)\n)\n\nfunction gridLayout(viewport: ElementDimensions, gap: Gap, item: ElementDimensions, items: GridItem[]): GridLayout {\n  const { height: itemHeight } = item\n  if (itemHeight === undefined || items.length === 0) {\n    return { top: 0, bottom: 0 }\n  }\n\n  const top = itemTop(viewport, gap, item, items[0].index)\n  const bottom = itemTop(viewport, gap, item, items[items.length - 1].index) + itemHeight\n  return { top, bottom }\n}\n\nfunction itemTop(viewport: ElementDimensions, gap: Gap, item: ElementDimensions, index: number) {\n  const perRow = itemsPerRow(viewport.width, item.width, gap.column)\n  const rowCount = floor(index / perRow)\n  const top = rowCount * item.height + max(0, rowCount - 1) * gap.row\n  return top > 0 ? top + gap.row : top\n}\n\nfunction itemsPerRow(viewportWidth: number, itemWidth: number, gap: number) {\n  return max(1, floor((viewportWidth + gap) / (itemWidth + gap)))\n}\n","import { RefHandle, systemToComponent } from '@virtuoso.dev/react-urx'\n\nimport * as u from '@virtuoso.dev/urx'\nimport * as React from 'react'\nimport { createElement, FC, PropsWithChildren } from 'react'\nimport { gridSystem } from './gridSystem'\nimport useSize from './hooks/useSize'\nimport useWindowViewportRectRef from './hooks/useWindowViewportRect'\nimport { GridComponents, GridComputeItemKey, GridItemContent, GridRootProps } from './interfaces'\nimport { addDeprecatedAlias, buildScroller, buildWindowScroller, contextPropIfNotDomElement, identity, viewportStyle } from './List'\nimport { Log, LogLevel } from './loggerSystem'\n\nconst gridComponentPropsSystem = u.system(() => {\n  const itemContent = u.statefulStream<GridItemContent<any>>((index) => `Item ${index}`)\n  const components = u.statefulStream<GridComponents>({})\n  const context = u.statefulStream<unknown>(null)\n  const itemClassName = u.statefulStream('virtuoso-grid-item')\n  const listClassName = u.statefulStream('virtuoso-grid-list')\n  const computeItemKey = u.statefulStream<GridComputeItemKey>(identity)\n  const scrollerRef = u.statefulStream<(ref: HTMLElement | null) => void>(u.noop)\n\n  const distinctProp = <K extends keyof GridComponents>(propName: K, defaultValue: GridComponents[K] | null | 'div' = null) => {\n    return u.statefulStreamFromEmitter(\n      u.pipe(\n        components,\n        u.map((components) => components[propName]),\n        u.distinctUntilChanged()\n      ),\n      defaultValue\n    )\n  }\n\n  return {\n    context,\n    itemContent,\n    components,\n    computeItemKey,\n    itemClassName,\n    listClassName,\n    scrollerRef,\n    ListComponent: distinctProp('List', 'div'),\n    ItemComponent: distinctProp('Item', 'div'),\n    ScrollerComponent: distinctProp('Scroller', 'div'),\n    ScrollSeekPlaceholder: distinctProp('ScrollSeekPlaceholder', 'div'),\n  }\n})\n\nconst combinedSystem = u.system(([gridSystem, gridComponentPropsSystem]) => {\n  const deprecatedProps = {\n    item: addDeprecatedAlias(gridComponentPropsSystem.itemContent, 'Rename the %citem%c prop to %citemContent.'),\n    ItemContainer: u.stream<any>(),\n    ScrollContainer: u.stream<any>(),\n    ListContainer: u.stream<any>(),\n    emptyComponent: u.stream<any>(),\n    scrollSeek: u.stream<any>(),\n  }\n\n  function deprecateComponentProp(stream: u.Stream<any>, componentName: string, propName: string) {\n    u.connect(\n      u.pipe(\n        stream,\n        u.withLatestFrom(gridComponentPropsSystem.components),\n        u.map(([comp, components]) => {\n          console.warn(`react-virtuoso: ${propName} property is deprecated. Pass components.${componentName} instead.`)\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n          return { ...components, [componentName]: comp }\n        })\n      ),\n      gridComponentPropsSystem.components\n    )\n  }\n\n  u.subscribe(deprecatedProps.scrollSeek, ({ placeholder, ...config }) => {\n    console.warn(\n      `react-virtuoso: scrollSeek property is deprecated. Pass scrollSeekConfiguration and specify the placeholder in components.ScrollSeekPlaceholder instead.`\n    )\n    u.publish(gridComponentPropsSystem.components, {\n      ...u.getValue(gridComponentPropsSystem.components),\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n      ScrollSeekPlaceholder: placeholder,\n    })\n    u.publish(gridSystem.scrollSeekConfiguration, config)\n  })\n\n  deprecateComponentProp(deprecatedProps.ItemContainer, 'Item', 'ItemContainer')\n  deprecateComponentProp(deprecatedProps.ListContainer, 'List', 'ListContainer')\n  deprecateComponentProp(deprecatedProps.ScrollContainer, 'Scroller', 'ScrollContainer')\n\n  return { ...gridSystem, ...gridComponentPropsSystem, ...deprecatedProps }\n}, u.tup(gridSystem, gridComponentPropsSystem))\n\nconst GridItems: FC = React.memo(function GridItems() {\n  const gridState = useEmitterValue('gridState')\n  const listClassName = useEmitterValue('listClassName')\n  const itemClassName = useEmitterValue('itemClassName')\n  const itemContent = useEmitterValue('itemContent')\n  const computeItemKey = useEmitterValue('computeItemKey')\n  const isSeeking = useEmitterValue('isSeeking')\n  const scrollHeightCallback = usePublisher('scrollHeight')\n  const ItemComponent = useEmitterValue('ItemComponent')!\n  const ListComponent = useEmitterValue('ListComponent')!\n  const ScrollSeekPlaceholder = useEmitterValue('ScrollSeekPlaceholder')!\n  const context = useEmitterValue('context')\n  const itemDimensions = usePublisher('itemDimensions')\n  const gridGap = usePublisher('gap')\n  const log = useEmitterValue('log')\n\n  const listRef = useSize((el) => {\n    const scrollHeight = el.parentElement!.parentElement!.scrollHeight\n    scrollHeightCallback(scrollHeight)\n    const firstItem = el.firstChild as HTMLElement\n    if (firstItem) {\n      itemDimensions(firstItem.getBoundingClientRect())\n    }\n    gridGap({\n      row: resolveGapValue('row-gap', getComputedStyle(el).rowGap, log),\n      column: resolveGapValue('column-gap', getComputedStyle(el).columnGap, log),\n    })\n  })\n\n  return createElement(\n    ListComponent,\n    {\n      ref: listRef,\n      className: listClassName,\n      ...contextPropIfNotDomElement(ListComponent, context),\n      style: { paddingTop: gridState.offsetTop, paddingBottom: gridState.offsetBottom },\n    },\n    gridState.items.map((item) => {\n      const key = computeItemKey(item.index)\n      return isSeeking\n        ? createElement(ScrollSeekPlaceholder, {\n            key,\n            ...contextPropIfNotDomElement(ScrollSeekPlaceholder, context),\n            index: item.index,\n            height: gridState.itemHeight,\n            width: gridState.itemWidth,\n          })\n        : createElement(\n            ItemComponent,\n            { ...contextPropIfNotDomElement(ItemComponent, context), className: itemClassName, 'data-index': item.index, key },\n            itemContent(item.index, context)\n          )\n    })\n  )\n})\n\nconst Viewport: FC<PropsWithChildren<unknown>> = ({ children }) => {\n  const viewportDimensions = usePublisher('viewportDimensions')\n\n  const viewportRef = useSize((el) => {\n    viewportDimensions(el.getBoundingClientRect())\n  })\n\n  return (\n    <div style={viewportStyle} ref={viewportRef}>\n      {children}\n    </div>\n  )\n}\n\nconst WindowViewport: FC<PropsWithChildren<unknown>> = ({ children }) => {\n  const windowViewportRect = usePublisher('windowViewportRect')\n  const customScrollParent = useEmitterValue('customScrollParent')\n  const viewportRef = useWindowViewportRectRef(windowViewportRect, customScrollParent)\n\n  return (\n    <div ref={viewportRef} style={viewportStyle}>\n      {children}\n    </div>\n  )\n}\n\nconst GridRoot: FC<GridRootProps> = React.memo(function GridRoot({ ...props }) {\n  const useWindowScroll = useEmitterValue('useWindowScroll')\n  const customScrollParent = useEmitterValue('customScrollParent')\n  const TheScroller = customScrollParent || useWindowScroll ? WindowScroller : Scroller\n  const TheViewport = customScrollParent || useWindowScroll ? WindowViewport : Viewport\n\n  return (\n    <TheScroller {...props}>\n      <TheViewport>\n        <GridItems />\n      </TheViewport>\n    </TheScroller>\n  )\n})\n\nconst {\n  Component: Grid,\n  usePublisher,\n  useEmitterValue,\n  useEmitter,\n} = systemToComponent(\n  combinedSystem,\n  {\n    optional: {\n      context: 'context',\n      totalCount: 'totalCount',\n      overscan: 'overscan',\n      itemContent: 'itemContent',\n      components: 'components',\n      computeItemKey: 'computeItemKey',\n      initialItemCount: 'initialItemCount',\n      scrollSeekConfiguration: 'scrollSeekConfiguration',\n      listClassName: 'listClassName',\n      itemClassName: 'itemClassName',\n      useWindowScroll: 'useWindowScroll',\n      customScrollParent: 'customScrollParent',\n      scrollerRef: 'scrollerRef',\n\n      // deprecated\n      item: 'item',\n      ItemContainer: 'ItemContainer',\n      ScrollContainer: 'ScrollContainer',\n      ListContainer: 'ListContainer',\n      scrollSeek: 'scrollSeek',\n    },\n    methods: {\n      scrollTo: 'scrollTo',\n      scrollBy: 'scrollBy',\n      scrollToIndex: 'scrollToIndex',\n    },\n    events: {\n      isScrolling: 'isScrolling',\n      endReached: 'endReached',\n      startReached: 'startReached',\n      rangeChanged: 'rangeChanged',\n      atBottomStateChange: 'atBottomStateChange',\n      atTopStateChange: 'atTopStateChange',\n    },\n  },\n  GridRoot\n)\n\nexport type foo<T> = T extends React.ForwardRefExoticComponent<React.RefAttributes<infer Handle>> ? Handle : never\n\nexport type GridHandle = RefHandle<typeof Grid>\nexport { Grid }\n\nconst Scroller = buildScroller({ usePublisher, useEmitterValue, useEmitter })\nconst WindowScroller = buildWindowScroller({ usePublisher, useEmitterValue, useEmitter })\n\nfunction resolveGapValue(property: string, value: string | undefined, log: Log) {\n  if (value !== 'normal' && !value?.endsWith('px')) {\n    log(`${property} was not resolved to pixel value correctly`, value, LogLevel.WARN)\n  }\n  if (value === 'normal') {\n    return 0\n  }\n  return parseInt(value ?? '0', 10)\n}\n","import { systemToComponent } from '@virtuoso.dev/react-urx'\nimport * as u from '@virtuoso.dev/urx'\nimport * as React from 'react'\nimport { createElement, FC, PropsWithChildren, useContext } from 'react'\nimport useChangedListContentsSizes from './hooks/useChangedChildSizes'\nimport { ComputeItemKey, ItemContent, FixedHeaderContent, FixedFooterContent, TableComponents, TableRootProps } from './interfaces'\nimport { listSystem } from './listSystem'\nimport { identity, buildScroller, buildWindowScroller, viewportStyle, contextPropIfNotDomElement } from './List'\nimport useSize from './hooks/useSize'\nimport { correctItemSize } from './utils/correctItemSize'\nimport useWindowViewportRectRef from './hooks/useWindowViewportRect'\nimport { VirtuosoMockContext } from './utils/context'\n\nconst tableComponentPropsSystem = u.system(() => {\n  const itemContent = u.statefulStream<ItemContent<any, unknown>>((index: number) => <td>Item ${index}</td>)\n  const context = u.statefulStream<unknown>(null)\n  const fixedHeaderContent = u.statefulStream<FixedHeaderContent>(null)\n  const fixedFooterContent = u.statefulStream<FixedFooterContent>(null)\n  const components = u.statefulStream<TableComponents>({})\n  const computeItemKey = u.statefulStream<ComputeItemKey<any, unknown>>(identity)\n  const scrollerRef = u.statefulStream<(ref: HTMLElement | Window | null) => void>(u.noop)\n\n  const distinctProp = <K extends keyof TableComponents>(\n    propName: K,\n    defaultValue: TableComponents[K] | null | 'thead' | 'tfoot' | 'table' | 'tbody' | 'tr' | 'div' = null\n  ) => {\n    return u.statefulStreamFromEmitter(\n      u.pipe(\n        components,\n        u.map((components) => components[propName]),\n        u.distinctUntilChanged()\n      ),\n      defaultValue\n    )\n  }\n\n  return {\n    context,\n    itemContent,\n    fixedHeaderContent,\n    fixedFooterContent,\n    components,\n    computeItemKey,\n    scrollerRef,\n    TableComponent: distinctProp('Table', 'table'),\n    TableHeadComponent: distinctProp('TableHead', 'thead'),\n    TableFooterComponent: distinctProp('TableFoot', 'tfoot'),\n    TableBodyComponent: distinctProp('TableBody', 'tbody'),\n    TableRowComponent: distinctProp('TableRow', 'tr'),\n    ScrollerComponent: distinctProp('Scroller', 'div'),\n    EmptyPlaceholder: distinctProp('EmptyPlaceholder'),\n    ScrollSeekPlaceholder: distinctProp('ScrollSeekPlaceholder'),\n    FillerRow: distinctProp('FillerRow'),\n  }\n})\n\nconst combinedSystem = u.system(([listSystem, propsSystem]) => {\n  return { ...listSystem, ...propsSystem }\n}, u.tup(listSystem, tableComponentPropsSystem))\n\nconst DefaultScrollSeekPlaceholder = ({ height }: { height: number }) => (\n  <tr>\n    <td style={{ height }}></td>\n  </tr>\n)\n\nconst DefaultFillerRow = ({ height }: { height: number }) => (\n  <tr>\n    <td style={{ height: height, padding: 0, border: 0 }}></td>\n  </tr>\n)\n\nexport const Items = React.memo(function VirtuosoItems() {\n  const listState = useEmitterValue('listState')\n  const sizeRanges = usePublisher('sizeRanges')\n  const useWindowScroll = useEmitterValue('useWindowScroll')\n  const customScrollParent = useEmitterValue('customScrollParent')\n  const windowScrollContainerStateCallback = usePublisher('windowScrollContainerState')\n  const _scrollContainerStateCallback = usePublisher('scrollContainerState')\n  const scrollContainerStateCallback =\n    customScrollParent || useWindowScroll ? windowScrollContainerStateCallback : _scrollContainerStateCallback\n  const itemContent = useEmitterValue('itemContent')\n  const trackItemSizes = useEmitterValue('trackItemSizes')\n  const itemSize = useEmitterValue('itemSize')\n  const log = useEmitterValue('log')\n\n  const { callbackRef, ref } = useChangedListContentsSizes(\n    sizeRanges,\n    itemSize,\n    trackItemSizes,\n    scrollContainerStateCallback,\n    log,\n    undefined,\n    customScrollParent\n  )\n\n  const [deviation, setDeviation] = React.useState(0)\n  useEmitter('deviation', (value) => {\n    if (deviation !== value) {\n      ref.current!.style.marginTop = `${value}px`\n      setDeviation(value)\n    }\n  })\n  const EmptyPlaceholder = useEmitterValue('EmptyPlaceholder')\n  const ScrollSeekPlaceholder = useEmitterValue('ScrollSeekPlaceholder') || DefaultScrollSeekPlaceholder\n  const FillerRow = useEmitterValue('FillerRow') || DefaultFillerRow\n  const TableBodyComponent = useEmitterValue('TableBodyComponent')!\n  const TableRowComponent = useEmitterValue('TableRowComponent')!\n  const computeItemKey = useEmitterValue('computeItemKey')\n  const isSeeking = useEmitterValue('isSeeking')\n  const paddingTopAddition = useEmitterValue('paddingTopAddition')\n  const firstItemIndex = useEmitterValue('firstItemIndex')\n  const statefulTotalCount = useEmitterValue('statefulTotalCount')\n  const context = useEmitterValue('context')\n\n  if (statefulTotalCount === 0 && EmptyPlaceholder) {\n    return createElement(EmptyPlaceholder, contextPropIfNotDomElement(EmptyPlaceholder, context))\n  }\n\n  const paddingTop = listState.offsetTop + paddingTopAddition + deviation\n  const paddingBottom = listState.offsetBottom\n\n  const paddingTopEl = paddingTop > 0 ? <FillerRow height={paddingTop} key=\"padding-top\" /> : null\n\n  const paddingBottomEl = paddingBottom > 0 ? <FillerRow height={paddingBottom} key=\"padding-bottom\" /> : null\n\n  const items = listState.items.map((item) => {\n    const index = item.originalIndex!\n    const key = computeItemKey(index + firstItemIndex, item.data, context)\n\n    if (isSeeking) {\n      return createElement(ScrollSeekPlaceholder, {\n        ...contextPropIfNotDomElement(ScrollSeekPlaceholder, context),\n        key,\n        index: item.index,\n        height: item.size,\n        type: item.type || 'item',\n      })\n    }\n    return createElement(\n      TableRowComponent,\n      {\n        ...contextPropIfNotDomElement(TableRowComponent, context),\n        key,\n        'data-index': index,\n        'data-known-size': item.size,\n        'data-item-index': item.index,\n        style: { overflowAnchor: 'none' },\n      },\n      itemContent(item.index, item.data, context)\n    )\n  })\n\n  return createElement(\n    TableBodyComponent,\n    { ref: callbackRef, 'data-test-id': 'virtuoso-item-list', ...contextPropIfNotDomElement(TableBodyComponent, context) },\n    [paddingTopEl, ...items, paddingBottomEl]\n  )\n})\n\nexport interface Hooks {\n  usePublisher: typeof usePublisher\n  useEmitterValue: typeof useEmitterValue\n  useEmitter: typeof useEmitter\n}\n\nconst Viewport: FC<PropsWithChildren<unknown>> = ({ children }) => {\n  const ctx = useContext(VirtuosoMockContext)\n  const viewportHeight = usePublisher('viewportHeight')\n  const fixedItemHeight = usePublisher('fixedItemHeight')\n  const viewportRef = useSize(u.compose(viewportHeight, (el) => correctItemSize(el, 'height')))\n\n  React.useEffect(() => {\n    if (ctx) {\n      viewportHeight(ctx.viewportHeight)\n      fixedItemHeight(ctx.itemHeight)\n    }\n  }, [ctx, viewportHeight, fixedItemHeight])\n\n  return (\n    <div style={viewportStyle} ref={viewportRef} data-viewport-type=\"element\">\n      {children}\n    </div>\n  )\n}\n\nconst WindowViewport: FC<PropsWithChildren<unknown>> = ({ children }) => {\n  const ctx = useContext(VirtuosoMockContext)\n  const windowViewportRect = usePublisher('windowViewportRect')\n  const fixedItemHeight = usePublisher('fixedItemHeight')\n  const customScrollParent = useEmitterValue('customScrollParent')\n  const viewportRef = useWindowViewportRectRef(windowViewportRect, customScrollParent)\n\n  React.useEffect(() => {\n    if (ctx) {\n      fixedItemHeight(ctx.itemHeight)\n      windowViewportRect({ offsetTop: 0, visibleHeight: ctx.viewportHeight, visibleWidth: 100 })\n    }\n  }, [ctx, windowViewportRect, fixedItemHeight])\n\n  return (\n    <div ref={viewportRef} style={viewportStyle} data-viewport-type=\"window\">\n      {children}\n    </div>\n  )\n}\n\nconst TableRoot: FC<TableRootProps> = React.memo(function TableVirtuosoRoot(props) {\n  const useWindowScroll = useEmitterValue('useWindowScroll')\n  const customScrollParent = useEmitterValue('customScrollParent')\n  const fixedHeaderHeight = usePublisher('fixedHeaderHeight')\n  const fixedFooterHeight = usePublisher('fixedFooterHeight')\n  const fixedHeaderContent = useEmitterValue('fixedHeaderContent')\n  const fixedFooterContent = useEmitterValue('fixedFooterContent')\n  const context = useEmitterValue('context')\n  const theadRef = useSize(u.compose(fixedHeaderHeight, (el) => correctItemSize(el, 'height')))\n  const tfootRef = useSize(u.compose(fixedFooterHeight, (el) => correctItemSize(el, 'height')))\n  const TheScroller = customScrollParent || useWindowScroll ? WindowScroller : Scroller\n  const TheViewport = customScrollParent || useWindowScroll ? WindowViewport : Viewport\n  const TheTable = useEmitterValue('TableComponent')\n  const TheTHead = useEmitterValue('TableHeadComponent')\n  const TheTFoot = useEmitterValue('TableFooterComponent')\n\n  const theHead = fixedHeaderContent\n    ? React.createElement(\n        TheTHead!,\n        {\n          key: 'TableHead',\n          style: { zIndex: 1, position: 'sticky', top: 0 },\n          ref: theadRef,\n          ...contextPropIfNotDomElement(TheTHead, context),\n        },\n        fixedHeaderContent()\n      )\n    : null\n  const theFoot = fixedFooterContent\n    ? React.createElement(\n        TheTFoot!,\n        {\n          key: 'TableFoot',\n          style: { zIndex: 1, position: 'sticky', bottom: 0 },\n          ref: tfootRef,\n          ...contextPropIfNotDomElement(TheTFoot, context),\n        },\n        fixedFooterContent()\n      )\n    : null\n\n  return (\n    <TheScroller {...props}>\n      <TheViewport>\n        {React.createElement(TheTable!, { style: { borderSpacing: 0 }, ...contextPropIfNotDomElement(TheTable, context) }, [\n          theHead,\n          <Items key=\"TableBody\" />,\n          theFoot,\n        ])}\n      </TheViewport>\n    </TheScroller>\n  )\n})\n\nexport const {\n  Component: Table,\n  usePublisher,\n  useEmitterValue,\n  useEmitter,\n} = systemToComponent(\n  combinedSystem,\n  {\n    required: {},\n    optional: {\n      context: 'context',\n      followOutput: 'followOutput',\n      firstItemIndex: 'firstItemIndex',\n      itemContent: 'itemContent',\n      fixedHeaderContent: 'fixedHeaderContent',\n      fixedFooterContent: 'fixedFooterContent',\n      overscan: 'overscan',\n      increaseViewportBy: 'increaseViewportBy',\n      totalCount: 'totalCount',\n      topItemCount: 'topItemCount',\n      initialTopMostItemIndex: 'initialTopMostItemIndex',\n      components: 'components',\n      groupCounts: 'groupCounts',\n      atBottomThreshold: 'atBottomThreshold',\n      atTopThreshold: 'atTopThreshold',\n      computeItemKey: 'computeItemKey',\n      defaultItemHeight: 'defaultItemHeight',\n      fixedItemHeight: 'fixedItemHeight',\n      itemSize: 'itemSize',\n      scrollSeekConfiguration: 'scrollSeekConfiguration',\n      data: 'data',\n      initialItemCount: 'initialItemCount',\n      initialScrollTop: 'initialScrollTop',\n      alignToBottom: 'alignToBottom',\n      useWindowScroll: 'useWindowScroll',\n      customScrollParent: 'customScrollParent',\n      scrollerRef: 'scrollerRef',\n      logLevel: 'logLevel',\n      react18ConcurrentRendering: 'react18ConcurrentRendering',\n    },\n    methods: {\n      scrollToIndex: 'scrollToIndex',\n      scrollIntoView: 'scrollIntoView',\n      scrollTo: 'scrollTo',\n      scrollBy: 'scrollBy',\n    },\n    events: {\n      isScrolling: 'isScrolling',\n      endReached: 'endReached',\n      startReached: 'startReached',\n      rangeChanged: 'rangeChanged',\n      atBottomStateChange: 'atBottomStateChange',\n      atTopStateChange: 'atTopStateChange',\n      totalListHeightChanged: 'totalListHeightChanged',\n      itemsRendered: 'itemsRendered',\n      groupIndices: 'groupIndices',\n    },\n  },\n  TableRoot\n)\n\nconst Scroller = buildScroller({ usePublisher, useEmitterValue, useEmitter })\nconst WindowScroller = buildWindowScroller({ usePublisher, useEmitterValue, useEmitter })\n","import { ReactElement, Ref } from 'react'\n\nimport {\n  Components,\n  ComputeItemKey,\n  FollowOutput,\n  GridComponents,\n  GridComputeItemKey,\n  GridItemContent,\n  GroupContent,\n  GroupItemContent,\n  IndexLocationWithAlign,\n  ItemContent,\n  ListItem,\n  ListRange,\n  ScrollSeekConfiguration,\n  TableComponents,\n  FixedHeaderContent,\n  ScrollIntoViewLocation,\n  ListRootProps,\n  GridRootProps,\n  FlatIndexLocationWithAlign,\n  FlatScrollIntoViewLocation,\n  SizeFunction,\n  FixedFooterContent,\n} from './interfaces'\nimport { List } from './List'\nimport { Grid } from './Grid'\nimport { Table } from './Table'\n\nexport interface VirtuosoProps<D, C> extends ListRootProps {\n  /**\n   * The total amount of items to be rendered.\n   */\n  totalCount?: number\n\n  /**\n   * The data items to be rendered. If data is set, the total count will be inferred from the length of the array.\n   */\n  data?: readonly D[]\n\n  /**\n   * Additional context available in the custom components and content callbacks\n   */\n  context?: C\n\n  /**\n   * *The property accepts pixel values.*\n   *\n   * Set the overscan property to make the component \"chunk\" the rendering of new items on scroll.\n   * The property causes the component to render more items than the necessary, but reduces the re-renders on scroll.\n   * Setting `{ main: number, reverse: number }` lets you extend the list in both the main and the reverse scrollable directions.\n   * See the `increaseViewportBy` property for a similar behavior (equivalent to the `overscan` in react-window).\n   *\n   */\n  overscan?: number | { main: number; reverse: number }\n\n  /**\n   *\n   * *The property accepts pixel values.*\n   *\n   * Set the increaseViewportBy property to artificially increase the viewport size, causing items to be rendered before outside of the viewport.\n   * The property causes the component to render more items than the necessary, but can help with slow loading content.\n   * Using `{ top?: number, bottom?: number }` lets you set the increase for each end separately.\n   *\n   */\n  increaseViewportBy?: number | { top: number; bottom: number }\n\n  /**\n   * Set the amount of items to remain fixed at the top of the list.\n   *\n   * For a header that scrolls away when scrolling, check the `components.Header` property.\n   */\n  topItemCount?: number\n\n  /**\n   * Set to a value between 0 and totalCount - 1 to make the list start scrolled to that item.\n   * Pass in an object to achieve additional effects similar to `scrollToIndex`.\n   */\n  initialTopMostItemIndex?: number | IndexLocationWithAlign\n\n  /**\n   * Set this value to offset the initial location of the list.\n   * Warning: using this property will still run a render cycle at the scrollTop: 0 list window.\n   * If possible, avoid using it and stick to `initialTopMostItemIndex` instead.\n   */\n  initialScrollTop?: number\n\n  /**\n   * Use for server-side rendering - if set, the list will render the specified amount of items\n   * regardless of the container / item size.\n   */\n  initialItemCount?: number\n\n  /**\n   * Use the `components` property for advanced customization of the elements rendered by the list.\n   */\n  components?: Components<C>\n\n  /**\n   * Set the callback to specify the contents of the item.\n   */\n  itemContent?: ItemContent<D, C>\n\n  /**\n   * If specified, the component will use the function to generate the `key` property for each list item.\n   */\n  computeItemKey?: ComputeItemKey<D, C>\n\n  /**\n   * By default, the component assumes the default item height from the first rendered item (rendering it as a \"probe\").\n   *\n   * If the first item turns out to be an outlier (very short or tall), the rest of the rendering will be slower,\n   * as multiple passes of rendering should happen for the list to fill the viewport.\n   *\n   * Setting `defaultItemHeight` causes the component to skip the \"probe\" rendering and use the property\n   * value as default height instead.\n   */\n  defaultItemHeight?: number\n\n  /**\n   * Allows customizing the height/width calculation of `Item` elements.\n   *\n   * The default implementation reads `el.getBoundingClientRect().height` and `el.getBoundingClientRect().width`.\n   */\n  itemSize?: SizeFunction\n\n  /**\n   * Can be used to improve performance if the rendered items are of known size.\n   * Setting it causes the component to skip item measurements.\n   */\n  fixedItemHeight?: number\n\n  /**\n   * Use to display placeholders if the user scrolls fast through the list.\n   *\n   * Set `components.ScrollSeekPlaceholder` to change the placeholder content.\n   */\n  scrollSeekConfiguration?: ScrollSeekConfiguration | false\n\n  /**\n   * If set to `true`, the list automatically scrolls to bottom if the total count is changed.\n   * Set to `\"smooth\"` for an animated scrolling.\n   *\n   * By default, `followOutput` scrolls down only if the list is already at the bottom.\n   * To implement an arbitrary logic behind that, pass a function:\n   *\n   * ```tsx\n   * <Virtuoso\n   *  followOutput={(isAtBottom: boolean) => {\n   *    if (expression) {\n   *      return 'smooth' // can be 'auto' or false to avoid scrolling\n   *    } else {\n   *      return false\n   *    }\n   *  }} />\n   * ```\n   */\n  followOutput?: FollowOutput\n\n  /**\n   * Set to customize the wrapper tag for the header and footer components (default is `div`).\n   */\n  headerFooterTag?: string\n\n  /**\n   * Use when implementing inverse infinite scrolling - decrease the value this property\n   * in combination with  `data` or `totalCount` to prepend items to the top of the list.\n   *\n   * Warning: the firstItemIndex should **be a positive number**, based on the total amount of items to be displayed.\n   */\n  firstItemIndex?: number\n\n  /**\n   * Called when the list starts/stops scrolling.\n   */\n  isScrolling?: (isScrolling: boolean) => void\n\n  /**\n   * Gets called when the user scrolls to the end of the list.\n   * Receives the last item index as an argument. Can be used to implement endless scrolling.\n   */\n  endReached?: (index: number) => void\n\n  /**\n   * Called when the user scrolls to the start of the list.\n   */\n  startReached?: (index: number) => void\n\n  /**\n   * Called with the new set of items each time the list items are rendered due to scrolling.\n   */\n  rangeChanged?: (range: ListRange) => void\n\n  /**\n   * Called with true / false when the list has reached the bottom / gets scrolled up.\n   * Can be used to load newer items, like `tail -f`.\n   */\n  atBottomStateChange?: (atBottom: boolean) => void\n\n  /**\n   * Called with `true` / `false` when the list has reached the top / gets scrolled down.\n   */\n  atTopStateChange?: (atTop: boolean) => void\n\n  /**\n   * Called when the total list height is changed due to new items or viewport resize.\n   */\n  totalListHeightChanged?: (height: number) => void\n\n  /**\n   * Called with the new set of items each time the list items are rendered due to scrolling.\n   */\n  itemsRendered?: (items: ListItem<D>[]) => void\n\n  /**\n   * Setting `alignToBottom` to `true` aligns the items to the bottom of the list if the list is shorter than the viewport.\n   * Use `followOutput` property to keep the list aligned when new items are appended.\n   */\n  alignToBottom?: boolean\n\n  /**\n   * Uses the document scroller rather than wrapping the list in its own.\n   */\n  useWindowScroll?: boolean\n\n  /**\n   * Pass a reference to a scrollable parent element, so that the list won't wrap in its own.\n   */\n  customScrollParent?: HTMLElement\n\n  /**\n   * Provides access to the root DOM element\n   */\n  scrollerRef?: (ref: HTMLElement | Window | null) => any\n\n  /**\n   * *The property accepts pixel values.*\n   *\n   * By default `0`. Redefine to change how much away from the top the scroller can be before the list is not considered not at top.\n   */\n  atTopThreshold?: number\n\n  /**\n   * *The property accepts pixel values.*\n   *\n   * By default `4`. Redefine to change how much away from the bottom the scroller can be before the list is not considered not at bottom.\n   */\n  atBottomThreshold?: number\n\n  /**\n   * No longer necessary after 2.10.2. component should work out of the box.\n   */\n  react18ConcurrentRendering?: boolean\n}\n\nexport interface GroupedVirtuosoProps<D, C> extends Omit<VirtuosoProps<D, C>, 'totalCount' | 'itemContent'> {\n  /**\n   * Specifies the amount of items in each group (and, actually, how many groups are there).\n   * For example, passing [20, 30] will display 2 groups with 20 and 30 items each.\n   */\n  groupCounts?: number[]\n\n  /**\n   * Specifies how each each group header gets rendered. The callback receives the zero-based index of the group.\n   */\n  groupContent?: GroupContent\n\n  /**\n   * Specifies how each each item gets rendered.\n   */\n  itemContent?: GroupItemContent<D, C>\n}\n\nexport interface TableVirtuosoProps<D, C> extends Omit<VirtuosoProps<D, C>, 'components' | 'headerFooterTag' | 'topItemCount'> {\n  /**\n   * Use the `components` property for advanced customization of the elements rendered by the table.\n   */\n  components?: TableComponents<C>\n  /**\n   * Set the contents of the table header.\n   */\n  fixedHeaderContent?: FixedHeaderContent\n\n  /**\n   * Set the contents of the table footer.\n   */\n  fixedFooterContent?: FixedFooterContent\n\n  /**\n   * The total amount of items to be rendered.\n   */\n  totalCount?: number\n\n  /**\n   * The data items to be rendered. If data is set, the total count will be inferred from the length of the array.\n   */\n  data?: readonly D[]\n\n  /**\n   * Set the overscan property to make the component \"chunk\" the rendering of new items on scroll.\n   * The property causes the component to render more items than the necessary, but reduces the re-renders on scroll.\n   * Setting `{ main: number, reverse: number }` lets you extend the list in both the main and the reverse scrollable directions.\n   * See the `increaseViewportBy` property for a similar behavior (equivalent to the `overscan` in `react-window`).\n   */\n  overscan?: number | { main: number; reverse: number }\n\n  /**\n   * Set the increaseViewportBy property to artificially increase the viewport size, causing items to be rendered before outside of the viewport.\n   * The property causes the component to render more items than the necessary, but can help with slow loading content.\n   * Using `{ top?: number, bottom?: number }` lets you set the increase for each end separately.\n   */\n  increaseViewportBy?: number | { top: number; bottom: number }\n\n  /**\n   * Set to a value between 0 and totalCount - 1 to make the list start scrolled to that item.\n   */\n  initialTopMostItemIndex?: number\n\n  /**\n   * Set this value to offset the initial location of the list.\n   * Warning: using this property will still run a render cycle at the scrollTop: 0 list window.\n   * If possible, avoid using it and stick to `initialTopMostItemIndex` instead.\n   */\n  initialScrollTop?: number\n\n  /**\n   * Use for server-side rendering - if set, the list will render the specified amount of items\n   * regardless of the container / item size.\n   */\n  initialItemCount?: number\n\n  /**\n   * Set the callback to specify the contents of the item.\n   */\n  itemContent?: ItemContent<D, C>\n\n  /**\n   * If specified, the component will use the function to generate the `key` property for each list item.\n   */\n  computeItemKey?: ComputeItemKey<D, C>\n\n  /**\n   * By default, the component assumes the default item height from the first rendered item (rendering it as a \"probe\").\n   *\n   * If the first item turns out to be an outlier (very short or tall), the rest of the rendering will be slower,\n   * as multiple passes of rendering should happen for the list to fill the viewport.\n   *\n   * Setting `defaultItemHeight` causes the component to skip the \"probe\" rendering and use the property\n   * value as default height instead.\n   */\n  defaultItemHeight?: number\n\n  /**\n   * Allows customizing the height/width calculation of `Item` elements.\n   *\n   * The default implementation reads `el.getBoundingClientRect().height` and `el.getBoundingClientRect().width`.\n   */\n  itemSize?: SizeFunction\n\n  /**\n   * Can be used to improve performance if the rendered items are of known size.\n   * Setting it causes the component to skip item measurements.\n   */\n  fixedItemHeight?: number\n\n  /**\n   * Use to display placeholders if the user scrolls fast through the list.\n   *\n   * Set `components.ScrollSeekPlaceholder` to change the placeholder content.\n   */\n  scrollSeekConfiguration?: ScrollSeekConfiguration | false\n\n  /**\n   * If set to `true`, the list automatically scrolls to bottom if the total count is changed.\n   * Set to `\"smooth\"` for an animated scrolling.\n   *\n   * By default, `followOutput` scrolls down only if the list is already at the bottom.\n   * To implement an arbitrary logic behind that, pass a function:\n   *\n   * ```tsx\n   * <Virtuoso\n   *  followOutput={(isAtBottom: boolean) => {\n   *    if (expression) {\n   *      return 'smooth' // can be 'auto' or false to avoid scrolling\n   *    } else {\n   *      return false\n   *    }\n   *  }} />\n   * ```\n   */\n  followOutput?: FollowOutput\n\n  /**\n   * Use when implementing inverse infinite scrolling - decrease the value this property\n   * in combination with  `data` or `totalCount` to prepend items to the top of the list.\n   *\n   * Warning: the firstItemIndex should **be a positive number**, based on the total amount of items to be displayed.\n   */\n  firstItemIndex?: number\n\n  /**\n   * Called when the list starts/stops scrolling.\n   */\n  isScrolling?: (isScrolling: boolean) => void\n\n  /**\n   * Gets called when the user scrolls to the end of the list.\n   * Receives the last item index as an argument. Can be used to implement endless scrolling.\n   */\n  endReached?: (index: number) => void\n\n  /**\n   * Called when the user scrolls to the start of the list.\n   */\n  startReached?: (index: number) => void\n\n  /**\n   * Called with the new set of items each time the list items are rendered due to scrolling.\n   */\n  rangeChanged?: (range: ListRange) => void\n\n  /**\n   * Called with true / false when the list has reached the bottom / gets scrolled up.\n   * Can be used to load newer items, like `tail -f`.\n   */\n  atBottomStateChange?: (atBottom: boolean) => void\n\n  /**\n   * Called with `true` / `false` when the list has reached the top / gets scrolled down.\n   */\n  atTopStateChange?: (atTop: boolean) => void\n\n  /**\n   * Called when the total list height is changed due to new items or viewport resize.\n   */\n  totalListHeightChanged?: (height: number) => void\n\n  /**\n   * Called with the new set of items each time the list items are rendered due to scrolling.\n   */\n  itemsRendered?: (items: ListItem<D>[]) => void\n\n  /**\n   * Setting `alignToBottom` to `true` aligns the items to the bottom of the list if the list is shorter than the viewport.\n   * Use `followOutput` property to keep the list aligned when new items are appended.\n   */\n  alignToBottom?: boolean\n\n  /**\n   * Uses the document scroller rather than wrapping the list in its own.\n   */\n  useWindowScroll?: boolean\n\n  /**\n   * Pass a reference to a scrollable parent element, so that the table won't wrap in its own.\n   */\n  customScrollParent?: HTMLElement\n\n  /**\n   * Provides access to the root DOM element\n   */\n  scrollerRef?: (ref: HTMLElement | Window | null) => any\n\n  /**\n   * By default `0`. Redefine to change how much away from the top the scroller can be before the list is not considered not at top.\n   */\n  atTopThreshold?: number\n\n  /**\n   * By default `4`. Redefine to change how much away from the bottom the scroller can be before the list is not considered not at bottom.\n   */\n  atBottomThreshold?: number\n\n  /**\n   * No longer necessary after 2.10.2. component should work out of the box.\n   */\n  react18ConcurrentRendering?: boolean\n}\n\nexport interface VirtuosoGridProps<C = unknown> extends GridRootProps {\n  /**\n   * The total amount of items to be rendered.\n   */\n  totalCount: number\n\n  /**\n   * Use for server-side rendering - if set, the list will render the specified amount of items\n   * regardless of the container / item size.\n   */\n  initialItemCount?: number\n\n  /**\n   * Set the callback to specify the contents of the item.\n   */\n  itemContent?: GridItemContent<C>\n\n  /**\n   * Use the `components` property for advanced customization of the elements rendered by the list.\n   */\n  components?: GridComponents<C>\n\n  /**\n   * Use the `components` property for advanced customization of the elements rendered by the list.\n   */\n  context?: C\n\n  /**\n   * Set the overscan property to make the component \"chunk\" the rendering of new items on scroll.\n   * The property causes the component to render more items than the necessary, but reduces the re-renders on scroll.\n   * Setting `{ main: number, reverse: number }` lets you extend the list in both the main and the reverse scrollable directions.\n   */\n  overscan?: number | { main: number; reverse: number }\n\n  /**\n   * If specified, the component will use the function to generate the `key` property for each list item.\n   */\n  computeItemKey?: GridComputeItemKey\n\n  /**\n   * Use to display placeholders if the user scrolls fast through the list.\n   *\n   * Set `components.ScrollSeekPlaceholder` to change the placeholder content.\n   */\n  scrollSeekConfiguration?: ScrollSeekConfiguration | false\n\n  /**\n   * Called when the list starts/stops scrolling.\n   */\n  isScrolling?: (isScrolling: boolean) => void\n\n  /**\n   * Gets called when the user scrolls to the end of the list.\n   * Receives the last item index as an argument. Can be used to implement endless scrolling.\n   */\n  endReached?: (index: number) => void\n\n  /**\n   * Called when the user scrolls to the start of the list.\n   */\n  startReached?: (index: number) => void\n\n  /**\n   * Called with the new set of items each time the list items are rendered due to scrolling.\n   */\n  rangeChanged?: (range: ListRange) => void\n\n  /**\n   * Called with true / false when the list has reached the bottom / gets scrolled up.\n   * Can be used to load newer items, like `tail -f`.\n   */\n  atBottomStateChange?: (atBottom: boolean) => void\n\n  /**\n   * Called with `true` / `false` when the list has reached the top / gets scrolled down.\n   */\n  atTopStateChange?: (atTop: boolean) => void\n\n  /**\n   * Provides access to the root DOM element\n   */\n  scrollerRef?: (ref: HTMLElement | null) => any\n\n  /**\n   * Sets the className for the list DOM element\n   */\n  listClassName?: string\n\n  /**\n   * Sets the grid items' className\n   */\n  itemClassName?: string\n\n  /**\n   * Uses the document scroller rather than wrapping the grid in its own.\n   */\n  useWindowScroll?: boolean\n\n  /**\n   * Pass a reference to a scrollable parent element, so that the grid won't wrap in its own.\n   */\n  customScrollParent?: HTMLElement\n}\n\nexport interface VirtuosoHandle {\n  /**\n   * Scrolls the component to the specified item index. See {@link IndexLocationWithAlign} for more options.\n   */\n  scrollToIndex(location: number | FlatIndexLocationWithAlign): void\n  /**\n   * Scrolls the item into view if necessary. See [the website example](http://virtuoso.dev/keyboard-navigation/) for an implementation.\n   */\n  scrollIntoView(location: FlatScrollIntoViewLocation): void\n  /**\n   * Scrolls the component to the specified location. See [ScrollToOptions (MDN)](https://developer.mozilla.org/en-US/docs/Web/API/ScrollToOptions)\n   */\n  scrollTo(location: ScrollToOptions): void\n  /**\n   * Scrolls the component with the specified amount. See [ScrollToOptions (MDN)](https://developer.mozilla.org/en-US/docs/Web/API/ScrollToOptions)\n   */\n  scrollBy(location: ScrollToOptions): void\n  /**\n   * Use this with combination with follow output if you have images loading in the list. Listen to the image loading and call the method.\n   */\n  autoscrollToBottom(): void\n}\n\nexport interface GroupedVirtuosoHandle {\n  scrollToIndex(location: number | IndexLocationWithAlign): void\n  scrollIntoView(location: number | ScrollIntoViewLocation): void\n  scrollTo(location: ScrollToOptions): void\n  scrollBy(location: ScrollToOptions): void\n  autoscrollToBottom(): void\n}\n\nexport interface VirtuosoGridHandle {\n  scrollToIndex(location: number | IndexLocationWithAlign): void\n  scrollTo(location: ScrollToOptions): void\n  scrollBy(location: ScrollToOptions): void\n}\n\nexport interface TableVirtuosoHandle {\n  scrollIntoView(location: number | FlatScrollIntoViewLocation): void\n  scrollToIndex(location: number | FlatIndexLocationWithAlign): void\n  scrollTo(location: ScrollToOptions): void\n  scrollBy(location: ScrollToOptions): void\n}\n\nexport const Virtuoso = List as <ItemData = any, Context = any>(\n  props: VirtuosoProps<ItemData, Context> & { ref?: Ref<VirtuosoHandle> }\n) => ReactElement\n\nexport const GroupedVirtuoso = List as <ItemData = any, Context = any>(\n  props: GroupedVirtuosoProps<ItemData, Context> & { ref?: Ref<GroupedVirtuosoHandle> }\n) => ReactElement\n\nexport const TableVirtuoso = Table as <ItemData = any, Context = any>(\n  props: TableVirtuosoProps<ItemData, Context> & { ref?: Ref<TableVirtuosoHandle> }\n) => ReactElement\n\nexport const VirtuosoGrid = Grid as <Context = any>(props: VirtuosoGridProps<Context> & { ref?: Ref<VirtuosoGridHandle> }) => ReactElement\n"],"names":["LogLevel","useIsomorphicLayoutEffect","document","useLayoutEffect","useEffect","CONSOLE_METHOD_MAP","DEBUG","INFO","_CONSOLE_METHOD_MAP","WARN","ERROR","loggerSystem","u","system","logLevel","statefulStream","log","label","message","level","_getGlobalThis$VIRTUO","globalThis","window","getValue","console","singleton","useSizeWithElRef","callback","enabled","ref","useRef","callbackRef","_el","ResizeObserver","observer","entries","element","target","offsetParent","elRef","observe","current","unobserve","useSize","useChangedListContentsSizes","itemSize","scrollContainerStateCallback","gap","customScrollParent","el","ranges","children","field","length","results","i","child","item","undefined","dataset","index","parseInt","knownSize","parseFloat","size","lastResult","endIndex","push","startIndex","getChangedChildSizes","scrollableElement","parentElement","windowScrolling","firstElementChild","scrollTop","pageYOffset","documentElement","scrollHeight","viewportHeight","offsetHeight","innerHeight","Math","max","property","value","endsWith","resolveGapValue","getComputedStyle","rowGap","correctItemSize","dimension","round","getBoundingClientRect","approximatelyEqual","num1","num2","abs","useScrollTop","smoothScrollTargetReached","scrollerElement","scrollerRefCallback","noop","scrollerRef","scrollTopTarget","timeoutRef","shouldFlushSync","handler","useCallback","ev","windowScroll","call","flushSync","clearTimeout","localRef","addEventListener","passive","removeEventListener","scrollByCallback","location","scrollBy","scrollToCallback","isSmooth","behavior","top","ceil","min","setTimeout","scrollTo","domIOSystem","scrollContainerState","stream","deviation","statefulScrollTop","headerHeight","fixedHeaderHeight","fixedFooterHeight","footerHeight","scrollingInProgress","react18ConcurrentRendering","connect","pipe","map","_ref","NIL_NODE","lvl","newAANode","k","v","l","r","empty","node","newTree","remove","key","last","adjust","clone","_last","deleteLast","findMaxKeyValue","Infinity","insert","split","skew","rebalance","walkWithin","start","end","result","concat","walk","args","isSingle","Error","rl","rlvl","rangesWithin","arrayToRanges","items","parser","_parser","nextIndex","nextValue","_parser2","findIndexOfClosestSmallerOrEqual","comparator","floor","match","join","findClosestSmallerOrEqual","recalcSystem","recalcInProgress","rangeIncludes","refRange","range","indexComparator","itemIndex","offsetComparator","offset","itemOffset","_ref2","offsetPointParser","point","createOffsetTree","prevOffsetTree","syncStart","sizeTree","offsetTree","prevIndex","prevSize","prevOffset","arrayBinarySearch","kv","slice","_step3","_iterator3","done","_step3$value","indexOffset","aOffset","lastIndex","lastOffset","lastSize","sizeStateReducer","state","_ref3","groupIndices","newSizeTree","groupSize","reduce","tree","groupIndex","insertRanges","_step","_iterator","overlappingRanges","some","_step2","firstPassDone","shouldInsert","_iterator2","rangeStart","rangeEnd","_step2$value","rangeValue","_insertRanges","_createOffsetTree","newOffsetTree","groupOffsetTree","offsetOf","itemCount","_arrayBinarySearch$fi","originalIndexFromLocation","sizes","isGroupLocation","originalIndexFromItemIndex","hasGroups","groupOffset","SIZE_MAP","offsetWidth","sizeSystem","_ref4","sizeRanges","totalCount","statefulTotalCount","statefulStreamFromEmitter","unshiftWith","shiftWith","firstItemIndex","fixedItemSize","defaultItemSize","data","initial","withLatestFrom","scan","distinctUntilChanged","filter","indexes","_ref5","idx","_extends","_ref6","_ref7","_ref7$","trackItemSizes","listRefresh","streamFromEmitter","_ref8","_ref9","newSizes","changed","subscribe","prev","next","diff","val","publish","_ref10","beforeUnshiftWith","_ref11","acc","_ref12","shiftWithOffset","_ref13","_ref14","_ref15","tup","SUPPORTS_SCROLL_TO_OPTIONS","style","normalizeIndexLocation","align","scrollToIndexSystem","_ref$","_ref$2","scrollToIndex","topListHeight","unsubscribeNextListRefresh","cleartTimeoutRef","unsubscribeListRefresh","cleanup","_ref2$","normalLocation","retry","listChanged","handleNext","UP","INITIAL_BOTTOM_STATE","atBottom","notAtBottomBecause","offsetBottom","stateFlagsSystem","isAtBottom","isAtTop","atBottomStateChange","atTopStateChange","atBottomThreshold","atTopThreshold","isScrolling","merge","duc","skip","mapTo","debounceTime","isScrollingBy","combineLatest","throttleTime","atBottomState","atBottomBecause","scrollTopDelta","_ref3$","_headerHeight","lastJumpDueToItemResize","jump","scrollDirection","direction","prevScrollTop","scrollVelocity","_","propsReadySystem","propsReady","didMount","ready","initialTopMostItemIndexSystem","scrolledToInitialItem","initialTopMostItemIndex","normalizeFollowOutput","follow","followOutputSystem","followOutput","autoscrollToBottom","pendingScrollHandle","scrollToBottom","followOutputBehavior","trapNextSizeIncrease","cancel","shouldFollow","behaviorFromFollowOutput","refreshed","groupCountsToIndicesAndCount","counts","groupCount","groupedListSystem","groupCounts","topItemsIndexes","groupIndicesAndCount","tupleComparator","rangeComparator","getOverscan","overscan","main","reverse","getViewportIncrease","sizeRangeSystem","listBoundary","increaseViewportBy","visibleRange","listTop","listBottom","stickyHeaderHeight","headerVisible","topViewportAddition","bottomViewportAddition","EMPTY_LIST_STATE","topItems","offsetTop","bottom","transposeItems","originalIndex","transposedItems","groupRanges","currentRange","currentGroupIndex","shift","indexOf","type","buildListState","lastItem","height","listStateSystem","rangeTopListHeight","_ref$3","stateFlags","itemsRendered","listState","startOffset","endOffset","sizesValue","probeItemSet","getInitialTopMostItemIndexNumber","rangeStartIndex","rangeEndIndex","minStartIndex","offsetPointRanges","rangesWithinOffsets","endValue","findRange","maxIndex","tap","endReached","count","startReached","rangeChanged","initialItemCountSystem","initialItemCount","_ref3$2","includedGroupsCount","adjustedCount","Array","from","scrollSeekSystem","isSeeking","scrollSeekConfiguration","speed","config","enter","exit","velocity","change","scrollSeekRangeChanged","topItemCountSystem","topItemCount","totalListHeightSystem","totalListHeightChanged","totalListHeight","simpleMemoize","func","called","isMobileSafari","test","navigator","userAgent","upwardScrollFixSystem","deviationOffset","prevItems","totalHeight","newDev","amount","scrollByWith","deviationAmount","recalc","requestAnimationFrame","initialScrollTopSystem","initialScrollTop","alignToBottomSystem","alignToBottom","paddingTopAddition","windowScrollerSystem","windowScrollContainerState","windowViewportRect","windowScrollTo","useWindowScroll","scrollIntoViewSystem","scrollIntoView","viewLocation","rest","_objectWithoutPropertiesLoose","_excluded","actualIndex","itemTop","featureGroup1System","windowScroller","listSystem","_ref2$2","domIO","_ref2$3","flags","featureGroup1","visibleHeight","fixedItemHeight","defaultItemHeight","positionStickyCssValue","createElement","position","useWindowViewportRectRef","viewportInfo","calculateInfo","rect","visibleWidth","width","customScrollParentRect","deltaTop","scrollAndResizeEventHandler","VirtuosoMockContext","React","createContext","_excluded2","_excluded3","identity","listComponentPropsSystem","itemContent","context","groupContent","components","computeItemKey","headerFooterTag","distinctProp","propName","defaultValue","FooterComponent","HeaderComponent","TopItemListComponent","ListComponent","ItemComponent","GroupComponent","ScrollerComponent","EmptyPlaceholder","ScrollSeekPlaceholder","addDeprecatedAlias","prop","alias","warn","combinedSystem","propsSystem","deprecatedProps","group","itemHeight","scrollingStateChange","adjustForPrependedItems","maxHeightCacheSize","footer","header","HeaderContainer","FooterContainer","ItemContainer","ScrollContainer","GroupContainer","ListContainer","emptyComponent","scrollSeek","deprecateComponentProp","componentName","comp","_extends2","placeholder","DefaultScrollSeekPlaceholder","GROUP_STYLE","zIndex","overflowAnchor","ITEM_STYLE","Items","memo","showTopList","_ref5$showTopList","useEmitterValue","usePublisher","windowScrollContainerStateCallback","_scrollContainerStateCallback","listGap","_React$useState","useState","setDeviation","useEmitter","containerStyle","boxSizing","paddingTop","paddingBottom","marginTop","contextPropIfNotDomElement","scrollerStyle","outline","overflowY","WebkitOverflowScrolling","viewportStyle","topItemListStyle","Header","Footer","buildScroller","props","_useScrollTop","tabIndex","buildWindowScroller","_useScrollTop2","Viewport","ctx","useContext","viewportRef","compose","WindowViewport","TopItemListContainer","TopItemList","_systemToComponent","systemToComponent","required","optional","methods","events","TheViewport","WindowScroller","Scroller","List","Component","INITIAL_GRID_STATE","itemWidth","PROBE_GRID_STATE","buildItems","gapComparator","column","row","gridSystem","_ref$4","gridState","viewportDimensions","itemDimensions","_ref4$$","_ref4$","viewport","viewportWidth","perRow","itemsPerRow","gridLayout","_gridLayout","rowCount","_gridLayout2","gridComponentPropsSystem","itemClassName","listClassName","GridItems","scrollHeightCallback","gridGap","listRef","firstItem","firstChild","columnGap","className","Grid","tableComponentPropsSystem","fixedHeaderContent","fixedFooterContent","TableComponent","TableHeadComponent","TableFooterComponent","TableBodyComponent","TableRowComponent","FillerRow","DefaultFillerRow","padding","border","paddingTopEl","paddingBottomEl","theadRef","tfootRef","TheScroller","TheTable","TheTHead","TheTFoot","theHead","theFoot","borderSpacing","Table","Virtuoso","GroupedVirtuoso","TableVirtuoso","VirtuosoGrid"],"mappings":"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","ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39],"debugId":null}}]
}