{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/ACER/Documents/code/streamify/Streaming_Platform/frontend/app/actions/auth.ts"],"sourcesContent":["'use server'\r\n\r\nimport { completeOnboarding, signup } from \"@/lib/api\";\r\n\r\n// State type\r\ninterface SignUpState {\r\n    success: boolean;\r\n    message?: string | null;\r\n    errors?: {\r\n        fullName?: string;\r\n        email?: string;\r\n        password?: string;\r\n        terms?: string;\r\n    };\r\n}\r\n\r\ninterface OnBoardingState {\r\n    success: boolean;\r\n    message?: string | null;\r\n    errors?: {\r\n        fullName?: string;\r\n        bio?: string;\r\n        nativeLanguage?: string;\r\n        learningLanguage?: string;\r\n        location?: string;\r\n    };\r\n}\r\n\r\nexport async function signUp(prevState: SignUpState, formData: FormData): Promise<SignUpState> {\r\n\r\n    try {\r\n        const fullName = formData.get('fullName') as string;\r\n        const email = formData.get('email') as string;\r\n        const password = formData.get('password') as string;\r\n        const termsAccepted = formData.get('terms') === 'on';\r\n\r\n        console.log(\"Server Action received data:\", {\r\n            fullName,\r\n            email,\r\n            password,\r\n            termsAccepted\r\n        });\r\n\r\n        const errors: SignUpState['errors'] = {};\r\n\r\n        if (!fullName) errors.fullName = 'Full name is required';\r\n        if (!email) errors.email = 'Email is required';\r\n        if (!password) errors.password = 'Password is required';\r\n        if (password && password.length < 6) errors.password = 'Password must be at least 6 characters';\r\n        if (!termsAccepted) errors.terms = 'You must accept the terms';\r\n\r\n        if (Object.keys(errors).length > 0) {\r\n            return {\r\n                success: false,\r\n                message: 'Please fix the errors below',\r\n                errors\r\n            };\r\n        }\r\n\r\n        //gọi API signup từ api.ts và truyền dữ liệu từ form. cái này sẽ được gửi request đến backend\r\n        const result = await signup({ fullName, email, password });\r\n\r\n        if (result.success) {\r\n            return {\r\n                success: true,\r\n                message: \"Account created successfully!\"\r\n            };\r\n\r\n        } else {\r\n            return {\r\n                success: false,\r\n                message: result.message || 'Failed to create account'\r\n            }\r\n        }\r\n\r\n    } catch (error: any) {\r\n        console.error('SignUp error:', error);\r\n        return {\r\n            success: false,\r\n            message: error.response?.data?.message || 'An unexpected error occurred in signUp function in auth.ts'\r\n        };\r\n    }\r\n}\r\n\r\n// app/actions/auth.ts\r\nexport async function handleOnBoarded(prevState: OnBoardingState, formData: FormData): Promise<OnBoardingState> {\r\n    try {\r\n        const fullName = formData.get(\"fullName\") as string;\r\n        const bio = formData.get(\"bio\") as string;\r\n        const nativeLanguage = formData.get(\"nativeLanguage\") as string;\r\n        const learningLanguage = formData.get(\"learningLanguage\") as string;\r\n        const location = formData.get(\"location\") as string;\r\n        const profilePic = formData.get(\"profilePic\") as string;\r\n\r\n        console.log(\"Server action of onBoarding received data: \", {\r\n            fullName, bio, nativeLanguage, learningLanguage, location, profilePic\r\n        });\r\n\r\n        const errors: OnBoardingState['errors'] = {};\r\n\r\n        // Validate required fields\r\n        if (!fullName?.trim()) errors.fullName = 'Full name is required';\r\n        if (!nativeLanguage) errors.nativeLanguage = 'Native language is required';\r\n        if (!learningLanguage) errors.learningLanguage = 'Learning language is required';\r\n        if (nativeLanguage === learningLanguage) {\r\n            errors.learningLanguage = 'Learning language must be different from native language';\r\n        }\r\n\r\n        if (Object.keys(errors).length > 0) {\r\n            return {\r\n                success: false,\r\n                message: 'Please fix the errors below',\r\n                errors\r\n            };\r\n        }\r\n\r\n        const result = await completeOnboarding({\r\n            fullName: fullName.trim(),\r\n            bio: bio?.trim() || \"\",\r\n            nativeLanguage,\r\n            learningLanguage,\r\n            location: location?.trim() || \"\",\r\n            profilePic,\r\n        });\r\n\r\n        if (result.success) {\r\n            return {\r\n                success: true,\r\n                message: \"Profile completed successfully!\"\r\n            }\r\n        } else {\r\n            return {\r\n                success: false,\r\n                message: result.message || \"Failed to complete onboarding\"\r\n            }\r\n        }\r\n\r\n    } catch (error: any) {\r\n        console.error('OnBoarding error:', error);\r\n        return {\r\n            success: false,\r\n            message: error.response?.data?.message || 'An unexpected error occurred during onBoarding process'\r\n        }\r\n    }\r\n}"],"names":[],"mappings":";;;;;;IA4BsB,SAAA,WAAA,GAAA,CAAA,GAAA,sNAAA,CAAA,wBAAA,EAAA,8CAAA,sNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,sNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 44, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/ACER/Documents/code/streamify/Streaming_Platform/frontend/components/ui/submitButton.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useFormStatus } from \"react-dom\";\r\n\r\ninterface submitButtonProps {\r\n    text: string;\r\n    loadingText?: string;\r\n}\r\n\r\nexport default function SubmitButton({text, loadingText = \"Loading...\"}: submitButtonProps) {\r\n    const { pending } = useFormStatus();\r\n\r\n    return (\r\n        <button\r\n            className=\"btn btn-primary w-full\"\r\n            type=\"submit\"\r\n            disabled={pending}\r\n        >\r\n            {pending ? (\r\n                <>\r\n                    <span className=\"loading loading-spinner loading-xs\"></span>\r\n                    {loadingText}\r\n                </>\r\n            ) : (\r\n                text\r\n            )}\r\n        </button>\r\n    );\r\n}"],"names":[],"mappings":";;;;AAEA;AAFA;;;AASe,SAAS,aAAa,EAAC,IAAI,EAAE,cAAc,YAAY,EAAoB;IACtF,MAAM,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,4MAAA,CAAA,gBAAa,AAAD;IAEhC,qBACI,8OAAC;QACG,WAAU;QACV,MAAK;QACL,UAAU;kBAET,wBACG;;8BACI,8OAAC;oBAAK,WAAU;;;;;;gBACf;;2BAGL;;;;;;AAIhB","debugId":null}},
    {"offset": {"line": 82, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/ACER/Documents/code/streamify/Streaming_Platform/frontend/app/%28auth%29/sign-up/page.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { ShipWheelIcon } from \"lucide-react\";\r\nimport Link from \"next/link\";\r\nimport Image from \"next/image\";\r\nimport { signUp } from \"@/app/actions/auth\";\r\nimport SubmitButton from \"@/components/ui/submitButton\";\r\nimport { useActionState, useEffect } from \"react\";\r\nimport toast from 'react-hot-toast';\r\nimport { useRouter } from \"next/navigation\";\r\nimport { useQueryClient } from \"@tanstack/react-query\";\r\n\r\nexport default function SignUpPage() {\r\n\r\n    const initialState = {\r\n        success: false,\r\n        message: null,\r\n        errors: {}\r\n    };\r\n\r\n    const router = useRouter();\r\n    const queryClient = useQueryClient();\r\n\r\n    //state chứa kết quả từ server action còn formAction gán vào action của form\r\n    const [state, formAction] = useActionState(signUp, initialState);\r\n\r\n    useEffect(() => {\r\n        if (state.success) {\r\n            // Đánh dấu vừa đăng ký thành công trong sessionStorage\r\n            sessionStorage.setItem('justSignedUp', 'true');\r\n            \r\n            toast.success(state.message || \"Registration successful!\");\r\n            queryClient.invalidateQueries({ queryKey: ['authUser'] });\r\n\r\n            const timer = setTimeout(() => {\r\n                router.push('/onBoarding');\r\n            }, 2000);\r\n\r\n            return () => clearTimeout(timer);\r\n        }\r\n    }, [state.success, state.message, router, queryClient]);\r\n\r\n    return (\r\n        <div className=\"h-screen flex items-center justify-center p-4 sm:p-6 md:p-8\" data-theme=\"dark\">\r\n            <div className=\"border border-primary/25 flex flex-col lg:flex-row w-full max-w-5xl mx-auto bg-base-100 rounded-xl shadow-lg overflow-hidden\">\r\n                {/* SIGNUP FORM - LEFT SIDE */}\r\n                <div className=\"w-full lg:w-1/2 p-4 sm:p-8 flex flex-col\">\r\n                    {/* LOGO */}\r\n                    <div className=\"mb-4 flex items-center justify-start gap-2\">\r\n                        <ShipWheelIcon className=\"size-9 text-primary\" />\r\n                        <span className=\"text-3xl font-bold font-mono bg-clip-text text-transparent bg-gradient-to-r from-primary to-secondary tracking-wider\">\r\n                            STREAMIFY\r\n                        </span>\r\n                    </div>\r\n\r\n                    {/* ERROR MESSAGE IF ANY */}\r\n                    {state.message && !state.success && (\r\n                        <div className=\"alert alert-error mb-4\">\r\n                            <span>{state.message}</span>\r\n                        </div>\r\n                    )}\r\n\r\n                    {/* SUCCESS MESSAGE */}\r\n                    {state.success && (\r\n                        <div className=\"alert alert-success mb-4\">\r\n                            <span>{state.message}</span>\r\n                        </div>\r\n                    )}\r\n\r\n                    <div className=\"w-full\">\r\n                        <form action={formAction}>\r\n                            <div className=\"space-y-4\">\r\n                                <div>\r\n                                    <h2 className=\"text-xl font-semibold\">Create an Account</h2>\r\n                                    <p className=\"text-sm opacity-70\">\r\n                                        Join Streamify and start your language learning adventure!\r\n                                    </p>\r\n                                </div>\r\n\r\n                                <div className=\"space-y-3\">\r\n                                    {/* FULLNAME */}\r\n                                    <fieldset className=\"form-control w-full fieldset\">\r\n                                        <label className=\"label\">\r\n                                            <legend className=\"fieldset-legend text-sm font-medium text-gray-600\">Name</legend>\r\n                                        </label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            name=\"fullName\"\r\n                                            placeholder=\"John Doe\"\r\n                                            className=\"input w-full\"\r\n                                            required\r\n                                        />\r\n                                    </fieldset>\r\n\r\n                                    {/* EMAIL */}\r\n                                    <fieldset className=\"form-control w-full fieldset\">\r\n                                        <label className=\"label\">\r\n                                            <legend className=\"fieldset-legend text-sm font-medium text-gray-600\">Email</legend>\r\n                                        </label>\r\n                                        <input\r\n                                            type=\"email\"\r\n                                            name=\"email\"\r\n                                            placeholder=\"john@gmail.com\"\r\n                                            className=\"input input-bordered w-full\"\r\n                                            required\r\n                                        />\r\n                                    </fieldset>\r\n                                    {/* PASSWORD */}\r\n                                    <fieldset className=\"form-control w-full fieldset\">\r\n                                        <label className=\"label\">\r\n                                            <legend className=\" fieldset-legend text-sm font-medium text-gray-600\">Password</legend>\r\n                                        </label>\r\n                                        <input\r\n                                            type=\"password\"\r\n                                            name=\"password\"\r\n                                            placeholder=\"********\"\r\n                                            className=\"input input-bordered w-full\"\r\n                                            required\r\n                                        />\r\n                                        <p className=\"text-xs opacity-70 mt-1\">\r\n                                            Password must be at least 6 characters long\r\n                                        </p>\r\n                                    </fieldset>\r\n\r\n                                    <div className=\"form-control\">\r\n                                        <label className=\"label cursor-pointer justify-start gap-2\">\r\n                                            <input type=\"checkbox\" name=\"terms\" className=\"checkbox checkbox-sm\" required />\r\n                                            <span className=\"text-xs leading-tight\">\r\n                                                I agree to the{\" \"}\r\n                                                <span className=\"text-primary hover:underline\">terms of service</span> and{\" \"}\r\n                                                <span className=\"text-primary hover:underline\">privacy policy</span>\r\n                                            </span>\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <SubmitButton text=\"Create Account\" loadingText=\"Loading...\" />\r\n\r\n                                <div className=\"text-center mt-4\">\r\n                                    <p className=\"text-sm\">\r\n                                        Already have an account?{\" \"}\r\n                                        <Link href=\"/login\" className=\"text-primary hover:underline\">\r\n                                            Sign in\r\n                                        </Link>\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* SIGNUP FORM - RIGHT SIDE */}\r\n                <div className=\"hidden lg:flex w-full lg:w-1/2 bg-primary/10 items-center justify-center\">\r\n                    <div className=\"max-w-md p-8\">\r\n                        {/* Illustration */}\r\n                        <div className=\"relative aspect-square max-w-sm mx-auto\">\r\n                            <Image\r\n                                src=\"/i.png\"\r\n                                alt=\"Language connection illustration\"\r\n                                fill\r\n                                priority\r\n                                className=\"object-cover\"\r\n                                sizes=\"(max-width: 768px) 100vw, 33vw\"\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"text-center space-y-3 mt-6\">\r\n                            <h2 className=\"text-xl font-semibold\">Connect with language partners worldwide</h2>\r\n                            <p className=\"opacity-70\">\r\n                                Practice conversations, make friends, and improve your language skills together\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}"],"names":[],"mappings":"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","debugId":null}}]
}